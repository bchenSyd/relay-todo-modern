{"version":3,"sources":["webpack:///./js/app.js","webpack:///./~/react-relay/index.js","webpack:///./~/react-relay/lib/ReactRelayPublic.js","webpack:///./~/relay-runtime/index.js","webpack:///./~/relay-runtime/lib/RelayRuntime.js","webpack:///./~/relay-runtime/lib/RelayModernEnvironment.js","webpack:///./~/relay-runtime/lib/RelayDefaultHandlerProvider.js","webpack:///./~/relay-runtime/lib/RelayConnectionHandler.js","webpack:///./~/relay-runtime/lib/RelayConnectionInterface.js","webpack:///./~/relay-runtime/lib/generateRelayClientID.js","webpack:///./~/relay-runtime/lib/getRelayHandleKey.js","webpack:///./~/relay-runtime/lib/RelayDefaultHandleKey.js","webpack:///./~/relay-runtime/lib/RelayViewerHandler.js","webpack:///./~/relay-runtime/lib/RelayStoreUtils.js","webpack:///./~/relay-runtime/lib/RelayConcreteNode.js","webpack:///./~/relay-runtime/lib/stableJSONStringify.js","webpack:///./~/relay-runtime/lib/RelayPublishQueue.js","webpack:///./~/relay-runtime/lib/RelayInMemoryRecordSource.js","webpack:///./~/relay-runtime/lib/RelayRecordState.js","webpack:///./~/relay-runtime/lib/RelayRecordSourceMutator.js","webpack:///./~/relay-runtime/lib/RelayModernRecord.js","webpack:///./~/relay-runtime/lib/deepFreeze.js","webpack:///./~/relay-runtime/lib/RelayRecordSourceProxy.js","webpack:///./~/relay-runtime/lib/RelayRecordSourceSelectorProxy.js","webpack:///./~/relay-runtime/lib/normalizeRelayPayload.js","webpack:///./~/relay-runtime/lib/RelayResponseNormalizer.js","webpack:///./~/relay-runtime/lib/formatStorageKey.js","webpack:///./~/relay-runtime/lib/RelayProfiler.js","webpack:///./~/relay-runtime/lib/RelayRecordProxy.js","webpack:///./~/relay-runtime/lib/RelayReader.js","webpack:///./~/relay-runtime/lib/RelayCore.js","webpack:///./~/relay-runtime/lib/RelayModernGraphQLTag.js","webpack:///./~/relay-runtime/lib/RelayModernOperationSelector.js","webpack:///./~/relay-runtime/lib/RelayConcreteVariables.js","webpack:///./~/relay-runtime/lib/RelayModernSelector.js","webpack:///./~/relay-runtime/lib/RelayModernFragmentSpecResolver.js","webpack:///./~/relay-runtime/lib/isScalarAndEqual.js","webpack:///./~/relay-runtime/lib/normalizePayload.js","webpack:///./~/relay-runtime/lib/RelayError.js","webpack:///./~/relay-runtime/lib/RelayDataLoader.js","webpack:///./~/relay-runtime/lib/cloneRelayHandleSourceField.js","webpack:///./~/relay-runtime/lib/RelayNetwork.js","webpack:///./~/relay-runtime/lib/ConvertToExecuteFunction.js","webpack:///./~/relay-runtime/lib/RelayObservable.js","webpack:///./~/relay-runtime/lib/isPromise.js","webpack:///./~/relay-runtime/lib/RelayQueryResponseCache.js","webpack:///./~/relay-runtime/lib/RelayMarkSweepStore.js","webpack:///./~/relay-runtime/lib/hasOverlappingIDs.js","webpack:///./~/relay-runtime/lib/recycleNodesInto.js","webpack:///./~/relay-runtime/lib/RelayReferenceMarker.js","webpack:///./~/relay-runtime/lib/applyRelayModernOptimisticMutation.js","webpack:///./~/relay-runtime/lib/isRelayModernEnvironment.js","webpack:///./~/relay-runtime/lib/setRelayModernMutationConfigs.js","webpack:///./~/relay-runtime/lib/commitLocalUpdate.js","webpack:///./~/relay-runtime/lib/commitRelayModernMutation.js","webpack:///./~/relay-runtime/lib/fetchRelayModernQuery.js","webpack:///./~/relay-runtime/lib/requestRelaySubscription.js","webpack:///./~/relay-runtime/lib/simpleClone.js","webpack:///./~/react-relay/lib/ReactRelayQueryRenderer.js","webpack:///./~/react-relay/lib/deepFreeze.js","webpack:///./~/react-relay/lib/RelayPropTypes.js","webpack:///./~/react-relay/lib/isRelayContainer.js","webpack:///./~/react-relay/lib/isClassicRelayEnvironment.js","webpack:///./~/react-relay/lib/isRelayEnvironment.js","webpack:///./~/react-relay/lib/isRelayContext.js","webpack:///./~/react-relay/lib/isRelayVariables.js","webpack:///./~/react-relay/lib/ReactRelayFragmentContainer.js","webpack:///./~/react-relay/lib/RelayContainerUtils.js","webpack:///./~/react-relay/lib/ReactRelayContainerProfiler.js","webpack:///./~/react-relay/lib/isScalarAndEqual.js","webpack:///./~/react-relay/lib/buildReactRelayContainer.js","webpack:///./~/react-relay/lib/assertFragmentMap.js","webpack:///./~/react-relay/lib/ReactRelayPaginationContainer.js","webpack:///./~/react-relay/lib/ReactRelayRefetchContainer.js","webpack:///./js/socket.js","webpack:///ws (ignored)","webpack:///./js/components/TodoApp.js","webpack:///./js/mutations/AddTodoMutation.js","webpack:///./js/mutations/__generated__/AddTodoMutation.graphql.js","webpack:///./js/components/TodoList.js","webpack:///./js/mutations/MarkAllTodosMutation.js","webpack:///./js/mutations/__generated__/MarkAllTodosMutation.graphql.js","webpack:///./js/components/Todo.js","webpack:///./js/mutations/ChangeTodoStatusMutation.js","webpack:///./js/mutations/__generated__/ChangeTodoStatusMutation.graphql.js","webpack:///./js/mutations/RemoveTodoMutation.js","webpack:///./js/mutations/__generated__/RemoveTodoMutation.graphql.js","webpack:///./js/mutations/RenameTodoMutation.js","webpack:///./js/mutations/__generated__/RenameTodoMutation.graphql.js","webpack:///./js/components/TodoTextInput.js","webpack:///./js/components/__generated__/Todo_todo.graphql.js","webpack:///./js/components/__generated__/Todo_viewer.graphql.js","webpack:///./js/components/TodoWithDetails.js","webpack:///./js/components/__generated__/TodoWithDetails_todo.graphql.js","webpack:///./js/components/__generated__/TodoWithDetailsBoChenRefetchQuery.graphql.js","webpack:///./js/subscriptions/todo.js","webpack:///./js/subscriptions/__generated__/todoSubscription.graphql.js","webpack:///./js/components/__generated__/TodoList_viewer.graphql.js","webpack:///./js/components/__generated__/TodoListAnyNameRefetchQuery.graphql.js","webpack:///./js/components/TodoListFooter.js","webpack:///./js/mutations/RemoveCompletedTodosMutation.js","webpack:///./js/mutations/__generated__/RemoveCompletedTodosMutation.graphql.js","webpack:///./js/components/__generated__/TodoListFooter_viewer.graphql.js","webpack:///./js/components/__generated__/TodoApp_viewer.graphql.js","webpack:///./js/__generated__/appQuery.graphql.js"],"names":["mountNode","document","getElementById","fetchQuery","operation","variables","fetch","method","headers","body","query","text","then","response","json","subscribeFunction","cacheConfig","observer","onCompleted","onError","onNext","emit","on","console","log","errors","dispose","modernEnvironment","network","create","store","render","error","props","viewer","user","forEach","error_event","__DEV__","socket","TodoApp","_handleTextInputSave","commit","relay","environment","hasTodos","totalCount","todos","Component","mutation","sharedUpdater","newEdge","userProxy","get","id","conn","getConnection","insertEdgeAfter","tempID","input","updater","payload","getRootField","getLinkedRecord","optimisticUpdater","node","setValue","setLinkedRecord","getValue","batch","v0","v1","v2","module","exports","TodoList","_handleMarkAllChange","e","complete","target","checked","_onSwitchView","relayContext","context","showTodoWithDetails","refetch","preVars","_onRefetch","force","_onRefetchWithNewParams","_","Math","floor","random","subscribeTodo","arg","clientSubscriptionId","edges","map","edge","numTodos","numCompletedTodos","completedCount","renderTodos","marginTop","contextTypes","shape","object","getOptimisticResponse","changedTodos","filter","markAllTodos","optimisticResponse","Todo","state","isEditing","_handleCompleteChange","todo","_handleDestroyClick","_removeTodo","_handleLabelDoubleClick","_setEditMode","_handleTextInputCancel","_handleTextInputDelete","shouldEdit","setState","completed","editing","renderTextInput","viewerPayload","changeTodoStatus","deletedID","deleteNode","v3","v4","renameTodo","PropTypes","require","ENTER_KEY_CODE","ESC_KEY_CODE","TodoTextInput","initialValue","_commitChanges","newText","trim","onDelete","onCancel","onSave","_handleBlur","commitOnBlur","_handleChange","value","_handleKeyDown","keyCode","findDOMNode","focus","className","placeholder","defaultProps","propTypes","string","bool","isRequired","func","fragment","TodoWithDetails","status","details","showDetails","backgroundColor","color","subscription","alert","data","TodoListFooter","_handleRemoveCompletedTodosClick","completedTodos","numRemainingTodos","deletedIDs"],"mappings":";;;;;;;;;;;;;;AACA;;;;AACA;;;;AAEA;;AAIA;;AAOA;;AACA;;;;;;AAEA,KAAMA,YAAYC,SAASC,cAAT,CAAwB,MAAxB,CAAlB;;AAEA,UAASC,UAAT,CACEC,SADF,EAEEC,SAFF,EAGE;AACA,UAAOC,MAAM,UAAN,EAAkB;AACvBC,aAAQ,MADe;AAEvBC,cAAS;AACP,uBAAgB;AADT,MAFc;AAKvBC,WAAM,yBAAe;AACnBC,cAAON,UAAUO,IADE;AAEnBN;AAFmB,MAAf;AALiB,IAAlB,EASJO,IATI,CASC,oBAAY;AAClB,YAAOC,SAASC,IAAT,EAAP;AACD,IAXM,CAAP;AAYD;;AAED;AACA,UAASC,iBAAT,CAA2BX,SAA3B,EAAsCC,SAAtC,EAAiDW,WAAjD,EAA8DC,QAA9D,EAAwE;AAAA,OAC/DC,WAD+D,GAC/BD,QAD+B,CAC/DC,WAD+D;AAAA,OAClDC,OADkD,GAC/BF,QAD+B,CAClDE,OADkD;AAAA,OACzCC,MADyC,GAC/BH,QAD+B,CACzCG,MADyC;;AAEtE,kBAAOC,IAAP,CAAY,sBAAZ,EAAoC;AAClCX,YAAON,UAAUO,IADiB;AAElCN;AAFkC,IAApC;;AAKA,kBAAOiB,EAAP,CAAU,sBAAV,EAAkC,oBAAY;AAC5CC,aAAQC,GAAR,CAAY,wCAAwC,yBAAeX,QAAf,CAApD;AACAO,uCACKP,QADL,IACeY,QAAQ;AADvB;AAGD,IALD;;AAOA,UAAO,EAACC,SAAS;AAAA,cAAM,IAAN;AAAA,MAAV,EAAP,CAdsE,CAcxC;AAC/B;;AAED,KAAMC,oBAAoB,8BAAgB;AACxCC,YAAS,sBAAQC,MAAR,CAAe1B,UAAf,EAA2BY,iBAA3B,CAD+B;AAExCe,UAAO,wBAAU,gCAAV;AAFiC,EAAhB,CAA1B;;AAKA,oBAASC,MAAT,CACE;AACE,gBAAaJ,iBADf;AAEE;AAAA;AAAA,IAFF;AAWE,cAAW,EAXb;AAYE,WAAQ,sBAAoB;AAAA,SAAlBK,KAAkB,QAAlBA,KAAkB;AAAA,SAAXC,KAAW,QAAXA,KAAW;;AAC1B,SAAIA,KAAJ,EAAW;AACT,cAAO,mDAAS,QAAQA,MAAMC,MAAN,CAAaC,IAA9B,GAAP;AACD,MAFD,MAEO;AACL,cAAO;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;AACF;AAlBH,GADF,EAqBEnC,SArBF;;AAwBA,gBAAOsB,EAAP,CAAU,SAAV,EAAqB,YAAM;AACzBC,WAAQC,GAAR,CAAY,6BAAZ;AACD,EAFD;AAGA,EAAC,iBAAD,EAAoB,eAApB,EAAqCY,OAArC,CAA6C,uBAAe;AAC1D,kBAAOd,EAAP,CAAUe,WAAV,EAAuB,iBAAS;AAC9Bd,aAAQS,KAAR,sBAAiCK,WAAjC,iBAAwD,yBAAeL,KAAf,CAAxD;AACA;AACD,IAHD;AAID,EALD,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,0C;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,G;;;;;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,0C;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,G;;;;;;ACxEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,uCAAsC,uCAAuC,kBAAkB;;AAE/F;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAY;AACZ;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAuD,IAAI,aAAa,IAAI;AAC5E;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA,wFAAuF;AACvF;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAkC,IAAI,aAAa,IAAI;AACvD;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,wEAAuE,cAAc;AACrF;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0BAAyB,iDAAiD;AAC1E;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0BAAyB,iDAAiD;AAC1E;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,qBAAoB;AACpB,MAAK,mBAAmB,6DAA6D;AACrF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAC;;AAED;AACA;AACA;;;AAGA;;AAEA,yC;;;;;;;;ACpUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,8C;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,qBAAoB,mBAAmB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,qBAAoB,mBAAmB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAkB,mBAAmB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAkB,yBAAyB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,G;;;;;;ACpcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,uCAAsC,uCAAuC,kBAAkB;;AAE/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;;;AAGH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;;AAGH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,IAAG;;;AAGH;AACA;AACA;AACA;AACA;;AAEA,qBAAoB;AACpB;AACA;;AAEA,2C;;;;;;;;;;AC9FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,wC;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,oC;;;;;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,G;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,G;;;;;;AChEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,4BAA2B,yBAAyB;AACpD,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA4C,oCAAoC;AAChF,4CAA2C,mCAAmC;;AAE9E;AACA;AACA;AACA;;AAEA,kC;;;;;;ACtGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oC;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAoB,iBAAiB;AACrC;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,sBAAqB,mBAAmB;AACxC;AACA;AACA;AACA;AACA,cAAa,0BAA0B;AACvC,IAAG;AACH;AACA;AACA;;AAEA,sC;;;;;;AC1CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,uCAAsC,uCAAuC,kBAAkB;;AAE/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAgB;AAChB,MAAK;AACL;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,4BAA2B,iCAAiC;AAC5D;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,YAAW;AACX;;AAEA;AACA;AACA,UAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,YAAW;AACX;;AAEA;AACA;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA;AACA;;AAEA;AACA,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oC;;;;;;ACrSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,uCAAsC,uCAAuC,kBAAkB;;AAE/F;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,EAAC;;AAED,4C;;;;;;ACpFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,mC;;;;;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA,uCAAsC,uCAAuC,kBAAkB;;AAE/F;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAAyD;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gDAA+C;AAC/C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,qBAAoB,4BAA4B;AAChD;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;;AAEA;AACA,qBAAoB,4BAA4B;AAChD;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qBAAoB,4BAA4B;AAChD;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qBAAoB,4BAA4B;AAChD;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAC;;AAED,2C;;;;;;ACnOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,uCAAsC,uCAAuC,kBAAkB;;AAE/F;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,8CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAqC;AACrC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAkB,kBAAkB;AACpC;AACA;AACA,wDAAuD;AACvD;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,G;;;;;;;ACxQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA,6B;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,uCAAsC,uCAAuC,kBAAkB;;AAE/F;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAC;;AAED,yC;;;;;;ACpHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,uCAAsC,uCAAuC,kBAAkB;;AAE/F;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAC;;AAED,iD;;;;;;AC5EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,sFAAqF;;AAErF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,wC;;;;;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,uCAAsC,uCAAuC,kBAAkB;;AAE/F;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sFAAqF;AACrF;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,QAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,QAAO;AACP;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA,EAAC;;AAED;;;AAGA;;AAEA,mBAAkB,wB;;;;;;ACrNlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,kBAAiB,2BAA2B;AAC5C,cAAa,4BAA4B;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mC;;;;;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,mCAAkC,KAAK;AACvC;AACA,OAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B,yBAAyB,IAAI;AACxD;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;;AAGH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,QAAO;AACP;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;;AAGH;AACA;AACA;AACA;AACA,gEAA+D,IAAI;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;;AAGH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;;AAGH;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAA+C,SAAS;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA,IAAG;;;AAGH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;;AAGH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gC;;;;;;;AC/PA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,uCAAsC,uCAAuC,kBAAkB;;AAE/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA,EAAC;;AAED;AACA;AACA;;AAEA,mC;;;;;;ACjHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,uCAAsC,uCAAuC,kBAAkB;;AAE/F;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,UAAS;AACT;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,QAAO;AACP;AACA,QAAO;AACP;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAC;;AAED,mBAAkB,c;;;;;;AC3KlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,G;;;;;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,G;;;;;;ACjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,G;;;;;;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,uCAAsC,uCAAuC,kBAAkB;;AAE/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAAyD;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,G;;;;;;AC7EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;;AAEP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,G;;;;;;ACnPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA,uCAAsC,uCAAuC,kBAAkB;;AAE/F;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAiE;AACjE;AACA;AACA,YAAW;AACX;AACA;AACA;AACA,kEAAiE;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,YAAW;AACX;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA,EAAC;;AAED;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gDAA+C;AAC/C;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA,EAAC;;AAED;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAsB,6BAA6B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,qBAAoB,uBAAuB;AAC3C;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAC;;AAED;AACA;AACA;;AAEA,kD;;;;;;AC1TA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,mC;;;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK,iBAAiB,4BAA4B;AAClD;AACA;AACA;AACA;AACA,IAAG;AACH,mBAAkB;AAClB;AACA;;AAEA,mC;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,uCAAsC,uCAAuC,kBAAkB;;AAE/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uFAAsF,aAAa;AACnG;AACA;;AAEA;AACA,IAAG;AACH;AACA,2FAA0F,eAAe;AACzG;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,6B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,uCAAsC,uCAAuC,kBAAkB;;AAE/F;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,6EAA4E;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,qEAAoE,gEAAgE;AACpI;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,uEAAsE,mEAAmE;AACzI;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,uEAAsE,mEAAmE;AACzI;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAmD;AACnD;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;;AAEA;AACA,EAAC;;AAED;AACA;AACA,G;;;;;;AC7TA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,uCAAsC,uCAAuC,kBAAkB;;AAE/F;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA,iDAAgD;AAChD;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA,8C;;;;;;AClDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,gDAA+C,cAAc;AAC7D;;AAEA;AACA;;AAEA,WAAU;AACV;;AAEA,mBAAkB,kB;;;;;;AChDlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAc;AACd;AACA;AACA;AACA,WAAU;AACV;;AAEA;AACA;AACA;AACA,G;;;;;;ACpEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,uCAAsC,uCAAuC,kBAAkB;;AAE/F;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,gBAAe;AACf;AACA;AACA;AACA,cAAa;AACb,YAAW;AACX;AACA;AACA,UAAS;AACT,QAAO;AACP;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe;AACf;AACA,YAAW;AACX;AACA;AACA,UAAS;;AAET;AACA;AACA,QAAO;;AAEP;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,QAAO;AACP,MAAK;AACL;;AAEA;AACA,EAAC;;AAED;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kDAAiD;AACjD;AACA,QAAO,EAAE;AACT;;AAEA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,QAAO;AACP,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA,kC;;;;;;ACjmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,4B;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,uCAAsC,uCAAuC,kBAAkB;;AAE/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,yCAAwC;AACxC;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAC;;AAED;AACA,mCAA2C,yCAAyC;AACpF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,0C;;;;;;ACpFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA,uCAAsC,uCAAuC,kBAAkB;;AAE/F;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAsB,sBAAsB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,yBAAwB;AACxB;AACA;AACA;AACA;AACA,aAAY;AACZ;;AAEA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,oDAAmD;AACnD;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAoB,sBAAsB;AAC1C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAC;;AAED;AACA;AACA;AACA;;;AAGA;AACA;AACA,mBAAkB,qBAAqB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED,sC;;;;;;ACxOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,mBAAkB,kBAAkB;AACpC;AACA;AACA;AACA;AACA;AACA;;AAEA,oC;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA,mC;;;;;;;;;;;;;;;;;;ACrDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,uCAAsC,uCAAuC,kBAAkB;;AAE/F;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,QAAO;AACP;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,QAAO;AACP;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA,EAAC;;AAED,mBAAkB,c;;;;;;AC5IlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA,qD;;;;;;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,2C;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,WAAU;AACV;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,yEAAwE,gEAAgE;AACxI;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iFAAgF,mEAAmE;AACnJ;;AAEA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,YAAW;AACX;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,iCAAiC;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;;AAEA,yEAAwE,mEAAmE;AAC3I;;AAEA;AACA;AACA,QAAO;AACP;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gD;;;;;;AC3SA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,oC;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,IAAG;AACH;;AAEA,4C;;;;;;AC1EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,+BAA8B,iDAAiD;AAC/E;AACA,IAAG;AACH;;AAEA,wC;;;;;;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAkB;AAClB,IAAG;AACH;AACA,IAAG;AACH;AACA;AACA;AACA,IAAG;AACH;;AAEA,2C;;;;;;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA;AACA;;AAEA,8B;;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,uCAAsC,uCAAuC,kBAAkB;;AAE/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,iDAAgD;AAChD;AACA,UAAS;AACT,QAAO;AACP;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,2BAA0B;AAC1B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,wCAAuC,iDAAiD;AACxF;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAA+B,6BAA6B;AAC5D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B,yBAAyB;AACpD;AACA,QAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B,kDAAkD;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B,yBAAyB;AACpD;AACA,QAAO;AACP,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,4BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAC;;AAED;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,0C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA,6B;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;;AAGH;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iC;;;;;;ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,mC;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,4C;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,qC;;;;;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iC;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,mC;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,uCAAsC,uCAAuC,kBAAkB;;AAE/F;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,yBAAwB,aAAa;AACrC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,wBAAwB;AAC/C,QAAO;AACP;AACA;AACA;AACA;AACA,wBAAuB,aAAa;AACpC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAsB,kBAAkB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA,kGAA0F;AAC1F;AACA;AACA;AACA,UAAS;AACT,QAAO;AACP;AACA,6FAAqF;AACrF;AACA,UAAS;AACT;AACA;;AAEA;AACA,IAAG;;AAEH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAkB,gG;;;;;;AClLlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,G;;;;;;ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA,mBAAkB,sC;;;;;;;AC7BlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,mC;;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,2C;;;;;;ACtEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oC;;;;;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,uCAAsC,uCAAuC,kBAAkB;;AAE/F;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR,OAAM;AACN;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR,6BAA4B,cAAc;AAC1C;AACA;AACA;AACA;AACA;AACA,WAAU;AACV,SAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B,cAAc;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wCAAuC,+CAA+C;AACtF;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA4D;AAC5D;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,yBAAwB,kCAAkC;AAC1D;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,4FAA2F,cAAc;;AAEzG,iBAAgB;AAChB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB;AAChB;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,yCAAyC;AAChE,QAAO;AACP;AACA;AACA;AACA;AACA,wBAAuB,aAAa;AACpC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAsB,kBAAkB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA,+CAA8C;AAC9C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,+CAA8C;AAC9C;AACA,uDAAsD;AACtD;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA,oDAAmD;AACnD;;AAEA,oCAAmC,yBAAyB;AAC5D;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,kDAAiD;AACjD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B,iBAAiB;AAC5C,UAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kDAAiD,iDAAiD;AAClG;AACA;AACA,yBAAwB;AACxB;AACA,YAAW;AACX,UAAS;AACT,QAAO;AACP;AACA;AACA;AACA;AACA;AACA,QAAO,0BAA0B;;AAEjC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAc;AACd;;AAEA;AACA;AACA,kGAA0F;AAC1F;AACA;AACA;AACA,UAAS;AACT,QAAO;AACP;AACA,6FAAqF;AACrF;AACA,UAAS;AACT;AACA;;AAEA;AACA,IAAG;;AAEH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAkB,gG;;;;;;ACnlBlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,uCAAsC,uCAAuC,kBAAkB;;AAE/F;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,yBAAwB,kCAAkC;AAC1D;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,sDAAqD;AACrD,+EAA8E;AAC9E,sCAAqC,yBAAyB;AAC9D;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,8BAA6B,iDAAiD;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA,oCAAmC,kCAAkC;AACrE;AACA;AACA,cAAa;AACb,YAAW;AACX,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,YAAW;AACX;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,yCAAyC;AAChE,QAAO;AACP;AACA;AACA;AACA;AACA,wBAAuB,aAAa;AACpC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAsB,kBAAkB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA,eAAc;AACd;;AAEA;AACA;AACA,kGAA0F;AAC1F;AACA;AACA;AACA,UAAS;AACT,QAAO;AACP;AACA,6FAAqF;AACrF;AACA,UAAS;AACT;AACA;;AAEA;AACA,IAAG;;AAEH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAkB,gG;;;;;;;;;;;;;ACvRlB;;;;;;AACA,KAAMM,UAAU,oBAAyB,YAAzC,C,CAAuD;;;AACvD,KAAMC,SAASD,UAAU,sBAAG,uBAAH,CAAV,GAAwC,uBAAvD;;SAEQC,M,GAAAA,M;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNR,gB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACEA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;KAKMC,O;;;;;;;;;;;;;;uMACJC,oB,GAAuB,UAAC9B,IAAD,EAAU;AAC/B,iCAAgB+B,MAAhB,CACE,MAAKT,KAAL,CAAWU,KAAX,CAAiBC,WADnB,EAEEjC,IAFF,EAGE,MAAKsB,KAAL,CA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","file":"a.js","sourcesContent":["// @flow\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport {\n  QueryRenderer,\n  graphql,\n} from 'react-relay';\nimport {\n  Environment,\n  Network,\n  RecordSource,\n  Store,\n} from 'relay-runtime';\n\nimport {socket} from './socket';\nimport TodoApp from './components/TodoApp';\n\nconst mountNode = document.getElementById('root');\n\nfunction fetchQuery(\n  operation,\n  variables,\n) {\n  return fetch('/graphql', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      query: operation.text,\n      variables,\n    }),\n  }).then(response => {\n    return response.json();\n  });\n}\n\n//https://github.com/facebook/relay/issues/1655#issuecomment-306178478\nfunction subscribeFunction(operation, variables, cacheConfig, observer) {\n  const {onCompleted, onError, onNext} = observer;\n  socket.emit('graphql:subscription', {\n    query: operation.text,\n    variables,\n  });\n\n  socket.on('graphql:subscription', response => {\n    console.log('graphql:subscription received......' + JSON.stringify(response));\n    onNext({\n      ...response, errors: []\n    });\n  });\n\n  return {dispose: () => null}; // must return a disposable;\n}\n\nconst modernEnvironment = new Environment({\n  network: Network.create(fetchQuery, subscribeFunction),\n  store: new Store(new RecordSource()),\n});\n\nReactDOM.render(\n  <QueryRenderer\n    environment={modernEnvironment}\n    query={graphql`\n      query appQuery {\n        viewer {\n          user{\n               ...TodoApp_viewer \n            }\n        }\n      }\n    `}\n    variables={{}}\n    render={({error, props}) => {\n      if (props) {\n        return <TodoApp viewer={props.viewer.user} />;\n      } else {\n        return <div>Loading</div>;\n      }\n    }}\n  />,\n  mountNode\n);\n\nsocket.on('connect', () => {\n  console.log('ws connection established!!');\n});\n['connect_timeout', 'connect_error'].forEach(error_event => {\n  socket.on(error_event, error => {\n    console.error(`ws error: event ${error_event}  error: ${JSON.stringify(error)}`);\n    //socket.connect(); // by default socket.io will try reconnect;\n  });\n});\n\n\n/** WEBPACK FOOTER **\n ** ./js/app.js\n **/","/**\n * Relay v1.4.1\n *\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nmodule.exports = require('./lib/ReactRelayPublic.js');\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react-relay/index.js\n ** module id = 68\n ** module chunks = 0\n **/","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @providesModule ReactRelayPublic\n * \n * @format\n */\n\n'use strict';\n\nvar _require = require('relay-runtime'),\n    commitLocalUpdate = _require.commitLocalUpdate,\n    commitMutation = _require.commitMutation,\n    fetchQuery = _require.fetchQuery,\n    graphql = _require.graphql,\n    requestSubscription = _require.requestSubscription;\n\n/**\n * The public interface to React Relay.\n */\nmodule.exports = {\n  QueryRenderer: require('./ReactRelayQueryRenderer'),\n  createFragmentContainer: require('./ReactRelayFragmentContainer').createContainer,\n  createPaginationContainer: require('./ReactRelayPaginationContainer').createContainer,\n  createRefetchContainer: require('./ReactRelayRefetchContainer').createContainer,\n  commitLocalUpdate: commitLocalUpdate,\n  commitMutation: commitMutation,\n  fetchQuery: fetchQuery,\n  graphql: graphql,\n  requestSubscription: requestSubscription\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react-relay/lib/ReactRelayPublic.js\n ** module id = 69\n ** module chunks = 0\n **/","/**\n * Relay v1.4.1\n *\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nmodule.exports = require('./lib/RelayRuntime.js');\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/relay-runtime/index.js\n ** module id = 70\n ** module chunks = 0\n **/","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @providesModule RelayRuntime\n * \n * @format\n */\n\n'use strict';\n\n// As early as possible, check for the existence of the JavaScript globals which\n// Relay Runtime relies upon, and produce a clear message if they do not exist.\n\n\n// There's a lint false positive for opaque types\n// eslint-disable-next-line no-undef\nif (process.env.NODE_ENV !== 'production') {\n  if (typeof Map !== 'function' || typeof Set !== 'function' || typeof Promise !== 'function' || typeof Object.assign !== 'function') {\n    throw new Error('relay-runtime requires Map, Set, Promise, and Object.assign to exist. ' + 'Use a polyfill to provide these for older browsers.');\n  }\n}\n\n/**\n * The public interface to Relay Runtime.\n */\nmodule.exports = {\n  // Core API\n  Environment: require('./RelayModernEnvironment'),\n  Network: require('./RelayNetwork'),\n  Observable: require('./RelayObservable'),\n  QueryResponseCache: require('./RelayQueryResponseCache'),\n  RecordSource: require('./RelayInMemoryRecordSource'),\n  Store: require('./RelayMarkSweepStore'),\n\n  areEqualSelectors: require('./RelayCore').areEqualSelectors,\n  createFragmentSpecResolver: require('./RelayCore').createFragmentSpecResolver,\n  createOperationSelector: require('./RelayCore').createOperationSelector,\n  getDataIDsFromObject: require('./RelayCore').getDataIDsFromObject,\n  getFragment: require('./RelayModernGraphQLTag').getFragment,\n  getOperation: require('./RelayModernGraphQLTag').getOperation,\n  getSelector: require('./RelayCore').getSelector,\n  getSelectorList: require('./RelayCore').getSelectorList,\n  getSelectorsFromObject: require('./RelayCore').getSelectorsFromObject,\n  getVariablesFromObject: require('./RelayCore').getVariablesFromObject,\n  graphql: require('./RelayModernGraphQLTag').graphql,\n\n  // Extensions\n  ConnectionHandler: require('./RelayConnectionHandler'),\n  ViewerHandler: require('./RelayViewerHandler'),\n\n  // Helpers (can be implemented via the above API)\n  applyOptimisticMutation: require('./applyRelayModernOptimisticMutation'),\n  commitLocalUpdate: require('./commitLocalUpdate'),\n  commitMutation: require('./commitRelayModernMutation'),\n  fetchQuery: require('./fetchRelayModernQuery'),\n  isRelayModernEnvironment: require('./isRelayModernEnvironment'),\n  requestSubscription: require('./requestRelaySubscription'),\n\n  // Configuration interface for legacy or special uses\n  ConnectionInterface: require('./RelayConnectionInterface'),\n\n  // Utilities\n  RelayProfiler: require('./RelayProfiler'),\n\n  // TODO T22766889 remove cross-cell imports of internal modules\n  // INTERNAL-ONLY: these WILL be removed from this API in the next release\n  recycleNodesInto: require('./recycleNodesInto'),\n  simpleClone: require('./simpleClone'),\n  ROOT_ID: require('./RelayStoreUtils').ROOT_ID\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/relay-runtime/lib/RelayRuntime.js\n ** module id = 71\n ** module chunks = 0\n **/","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @providesModule RelayModernEnvironment\n * \n * @format\n */\n\n'use strict';\n\nvar _classCallCheck3 = _interopRequireDefault(require('babel-runtime/helpers/classCallCheck'));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar RelayModernEnvironment = function () {\n  function RelayModernEnvironment(config) {\n    var _this = this;\n\n    (0, _classCallCheck3['default'])(this, RelayModernEnvironment);\n\n    this.configName = config.configName;\n    var handlerProvider = config.handlerProvider ? config.handlerProvider : require('./RelayDefaultHandlerProvider');\n    this._network = config.network;\n    this._publishQueue = new (require('./RelayPublishQueue'))(config.store, handlerProvider);\n    this._store = config.store;\n    this.unstable_internal = require('./RelayCore');\n\n    this.__setNet = function (newNet) {\n      return _this._network = newNet;\n    };\n\n    // Register this Relay Environment with Relay DevTools if it exists.\n    // Note: this must always be the last step in the constructor.\n    var _global = typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : undefined;\n    var devToolsHook = _global && _global.__RELAY_DEVTOOLS_HOOK__;\n    if (devToolsHook) {\n      devToolsHook.registerEnvironment(this);\n    }\n  }\n\n  RelayModernEnvironment.prototype.getStore = function getStore() {\n    return this._store;\n  };\n\n  RelayModernEnvironment.prototype.getNetwork = function getNetwork() {\n    return this._network;\n  };\n\n  RelayModernEnvironment.prototype.applyUpdate = function applyUpdate(optimisticUpdate) {\n    var _this2 = this;\n\n    var dispose = function dispose() {\n      _this2._publishQueue.revertUpdate(optimisticUpdate);\n      _this2._publishQueue.run();\n    };\n    this._publishQueue.applyUpdate(optimisticUpdate);\n    this._publishQueue.run();\n    return { dispose: dispose };\n  };\n\n  RelayModernEnvironment.prototype.revertUpdate = function revertUpdate(update) {\n    this._publishQueue.revertUpdate(update);\n    this._publishQueue.run();\n  };\n\n  RelayModernEnvironment.prototype.replaceUpdate = function replaceUpdate(update, newUpdate) {\n    this._publishQueue.revertUpdate(update);\n    this._publishQueue.applyUpdate(newUpdate);\n    this._publishQueue.run();\n  };\n\n  RelayModernEnvironment.prototype.applyMutation = function applyMutation(_ref) {\n    var operation = _ref.operation,\n        optimisticResponse = _ref.optimisticResponse,\n        optimisticUpdater = _ref.optimisticUpdater;\n\n    return this.applyUpdate({\n      operation: operation,\n      selectorStoreUpdater: optimisticUpdater,\n      response: optimisticResponse || null\n    });\n  };\n\n  RelayModernEnvironment.prototype.check = function check(readSelector) {\n    return this._store.check(readSelector);\n  };\n\n  RelayModernEnvironment.prototype.commitPayload = function commitPayload(operationSelector, payload) {\n    // Do not handle stripped nulls when commiting a payload\n    var relayPayload = require('./normalizeRelayPayload')(operationSelector.root, payload);\n    this._publishQueue.commitPayload(operationSelector, relayPayload);\n    this._publishQueue.run();\n  };\n\n  RelayModernEnvironment.prototype.commitUpdate = function commitUpdate(updater) {\n    this._publishQueue.commitUpdate(updater);\n    this._publishQueue.run();\n  };\n\n  RelayModernEnvironment.prototype.lookup = function lookup(readSelector) {\n    return this._store.lookup(readSelector);\n  };\n\n  RelayModernEnvironment.prototype.subscribe = function subscribe(snapshot, callback) {\n    return this._store.subscribe(snapshot, callback);\n  };\n\n  RelayModernEnvironment.prototype.retain = function retain(selector) {\n    return this._store.retain(selector);\n  };\n\n  /**\n   * Returns an Observable of RelayResponsePayload resulting from executing the\n   * provided Query or Subscription operation, each result of which is then\n   * normalized and committed to the publish queue.\n   *\n   * Note: Observables are lazy, so calling this method will do nothing until\n   * the result is subscribed to: environment.execute({...}).subscribe({...}).\n   */\n\n\n  RelayModernEnvironment.prototype.execute = function execute(_ref2) {\n    var _this3 = this;\n\n    var operation = _ref2.operation,\n        cacheConfig = _ref2.cacheConfig,\n        updater = _ref2.updater;\n\n    return this._network.execute(operation.node, operation.variables, cacheConfig || {}).map(require('./normalizePayload'))['do']({\n      next: function next(payload) {\n        _this3._publishQueue.commitPayload(operation, payload, updater);\n        _this3._publishQueue.run();\n      }\n    });\n  };\n\n  /**\n   * Returns an Observable of RelayResponsePayload resulting from executing the\n   * provided Mutation operation, the result of which is then normalized and\n   * committed to the publish queue along with an optional optimistic response\n   * or updater.\n   *\n   * Note: Observables are lazy, so calling this method will do nothing until\n   * the result is subscribed to:\n   * environment.executeMutation({...}).subscribe({...}).\n   */\n\n\n  RelayModernEnvironment.prototype.executeMutation = function executeMutation(_ref3) {\n    var _this4 = this;\n\n    var operation = _ref3.operation,\n        optimisticResponse = _ref3.optimisticResponse,\n        optimisticUpdater = _ref3.optimisticUpdater,\n        updater = _ref3.updater,\n        uploadables = _ref3.uploadables;\n\n    var optimisticUpdate = void 0;\n    if (optimisticResponse || optimisticUpdater) {\n      optimisticUpdate = {\n        operation: operation,\n        selectorStoreUpdater: optimisticUpdater,\n        response: optimisticResponse || null\n      };\n    }\n\n    return this._network.execute(operation.node, operation.variables, { force: true }, uploadables).map(require('./normalizePayload'))['do']({\n      start: function start() {\n        if (optimisticUpdate) {\n          _this4._publishQueue.applyUpdate(optimisticUpdate);\n          _this4._publishQueue.run();\n        }\n      },\n      next: function next(payload) {\n        if (optimisticUpdate) {\n          _this4._publishQueue.revertUpdate(optimisticUpdate);\n          optimisticUpdate = undefined;\n        }\n        _this4._publishQueue.commitPayload(operation, payload, updater);\n        _this4._publishQueue.run();\n      },\n      error: function (_error) {\n        function error(_x) {\n          return _error.apply(this, arguments);\n        }\n\n        error.toString = function () {\n          return _error.toString();\n        };\n\n        return error;\n      }(function (error) {\n        if (optimisticUpdate) {\n          _this4._publishQueue.revertUpdate(optimisticUpdate);\n          optimisticUpdate = undefined;\n          _this4._publishQueue.run();\n        }\n      }),\n      unsubscribe: function unsubscribe() {\n        if (optimisticUpdate) {\n          _this4._publishQueue.revertUpdate(optimisticUpdate);\n          optimisticUpdate = undefined;\n          _this4._publishQueue.run();\n        }\n      }\n    });\n  };\n\n  /**\n   * @deprecated Use Environment.execute().subscribe()\n   */\n\n\n  RelayModernEnvironment.prototype.sendQuery = function sendQuery(_ref4) {\n    var cacheConfig = _ref4.cacheConfig,\n        onCompleted = _ref4.onCompleted,\n        onError = _ref4.onError,\n        onNext = _ref4.onNext,\n        operation = _ref4.operation;\n\n    require('fbjs/lib/warning')(false, 'environment.sendQuery() is deprecated. Update to the latest ' + 'version of react-relay, and use environment.execute().');\n    return this.execute({ operation: operation, cacheConfig: cacheConfig }).subscribeLegacy({\n      onNext: onNext,\n      onError: onError,\n      onCompleted: onCompleted\n    });\n  };\n\n  /**\n   * @deprecated Use Environment.execute().subscribe()\n   */\n\n\n  RelayModernEnvironment.prototype.streamQuery = function streamQuery(_ref5) {\n    var cacheConfig = _ref5.cacheConfig,\n        onCompleted = _ref5.onCompleted,\n        onError = _ref5.onError,\n        onNext = _ref5.onNext,\n        operation = _ref5.operation;\n\n    require('fbjs/lib/warning')(false, 'environment.streamQuery() is deprecated. Update to the latest ' + 'version of react-relay, and use environment.execute().');\n    return this.execute({ operation: operation, cacheConfig: cacheConfig }).subscribeLegacy({\n      onNext: onNext,\n      onError: onError,\n      onCompleted: onCompleted\n    });\n  };\n\n  /**\n   * @deprecated Use Environment.executeMutation().subscribe()\n   */\n\n\n  RelayModernEnvironment.prototype.sendMutation = function sendMutation(_ref6) {\n    var onCompleted = _ref6.onCompleted,\n        onError = _ref6.onError,\n        operation = _ref6.operation,\n        optimisticResponse = _ref6.optimisticResponse,\n        optimisticUpdater = _ref6.optimisticUpdater,\n        updater = _ref6.updater,\n        uploadables = _ref6.uploadables;\n\n    require('fbjs/lib/warning')(false, 'environment.sendMutation() is deprecated. Update to the latest ' + 'version of react-relay, and use environment.executeMutation().');\n    return this.executeMutation({\n      operation: operation,\n      optimisticResponse: optimisticResponse,\n      optimisticUpdater: optimisticUpdater,\n      updater: updater,\n      uploadables: uploadables\n    }).subscribeLegacy({\n      // NOTE: sendMutation has a non-standard use of onCompleted() by passing\n      // it a value. When switching to use executeMutation(), the next()\n      // Observer should be used to preserve behavior.\n      onNext: function onNext(payload) {\n        onCompleted && onCompleted(payload.errors);\n      },\n      onError: onError,\n      onCompleted: onCompleted\n    });\n  };\n\n  /**\n   * @deprecated Use Environment.execute().subscribe()\n   */\n\n\n  RelayModernEnvironment.prototype.sendSubscription = function sendSubscription(_ref7) {\n    var onCompleted = _ref7.onCompleted,\n        onNext = _ref7.onNext,\n        onError = _ref7.onError,\n        operation = _ref7.operation,\n        updater = _ref7.updater;\n\n    require('fbjs/lib/warning')(false, 'environment.sendSubscription() is deprecated. Update to the latest ' + 'version of react-relay, and use environment.execute().');\n    return this.execute({\n      operation: operation,\n      updater: updater,\n      cacheConfig: { force: true }\n    }).subscribeLegacy({ onNext: onNext, onError: onError, onCompleted: onCompleted });\n  };\n\n  RelayModernEnvironment.prototype.checkSelectorAndUpdateStore = function checkSelectorAndUpdateStore(selector, handlers) {\n    var target = new (require('./RelayInMemoryRecordSource'))();\n    var result = require('./RelayDataLoader').check(this._store.getSource(), target, selector, handlers);\n    if (target.size() > 0) {\n      this._publishQueue.commitSource(target);\n      this._publishQueue.run();\n    }\n    return result;\n  };\n\n  return RelayModernEnvironment;\n}();\n\n// Add a sigil for detection by `isRelayModernEnvironment()` to avoid a\n// realm-specific instanceof check, and to aid in module tree-shaking to\n// avoid requiring all of RelayRuntime just to detect its environment.\n\n\nRelayModernEnvironment.prototype['@@RelayModernEnvironment'] = true;\n\nmodule.exports = RelayModernEnvironment;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/relay-runtime/lib/RelayModernEnvironment.js\n ** module id = 72\n ** module chunks = 0\n **/","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @providesModule RelayDefaultHandlerProvider\n * \n * @format\n */\n\n'use strict';\n\nfunction RelayDefaultHandlerProvider(handle) {\n  switch (handle) {\n    case 'connection':\n      return require('./RelayConnectionHandler');\n    case 'viewer':\n      return require('./RelayViewerHandler');\n  }\n  require('fbjs/lib/invariant')(false, 'RelayDefaultHandlerProvider: No handler provided for `%s`.', handle);\n}\n\nmodule.exports = RelayDefaultHandlerProvider;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/relay-runtime/lib/RelayDefaultHandlerProvider.js\n ** module id = 74\n ** module chunks = 0\n **/","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @providesModule RelayConnectionHandler\n * \n * @format\n */\n\n'use strict';\n\nvar CONNECTION = 'connection';\n\n// Per-instance incrementing index used to generate unique edge IDs\nvar NEXT_EDGE_INDEX = '__connection_next_edge_index';\n\n/**\n * @public\n *\n * A default runtime handler for connection fields that appends newly fetched\n * edges onto the end of a connection, regardless of the arguments used to fetch\n * those edges.\n */\nfunction update(store, payload) {\n  var record = store.get(payload.dataID);\n  if (!record) {\n    return;\n  }\n\n  var _RelayConnectionInter = require('./RelayConnectionInterface').get(),\n      EDGES = _RelayConnectionInter.EDGES,\n      END_CURSOR = _RelayConnectionInter.END_CURSOR,\n      HAS_NEXT_PAGE = _RelayConnectionInter.HAS_NEXT_PAGE,\n      HAS_PREV_PAGE = _RelayConnectionInter.HAS_PREV_PAGE,\n      PAGE_INFO = _RelayConnectionInter.PAGE_INFO,\n      PAGE_INFO_TYPE = _RelayConnectionInter.PAGE_INFO_TYPE,\n      START_CURSOR = _RelayConnectionInter.START_CURSOR;\n\n  var serverConnection = record.getLinkedRecord(payload.fieldKey);\n  var serverPageInfo = serverConnection && serverConnection.getLinkedRecord(PAGE_INFO);\n  if (!serverConnection) {\n    record.setValue(null, payload.handleKey);\n    return;\n  }\n  var clientConnection = record.getLinkedRecord(payload.handleKey);\n  var clientPageInfo = clientConnection && clientConnection.getLinkedRecord(PAGE_INFO);\n  if (!clientConnection) {\n    // Initial fetch with data: copy fields from the server record\n    var connection = store.create(require('./generateRelayClientID')(record.getDataID(), payload.handleKey), serverConnection.getType());\n    connection.setValue(0, NEXT_EDGE_INDEX);\n    connection.copyFieldsFrom(serverConnection);\n    var serverEdges = serverConnection.getLinkedRecords(EDGES);\n    if (serverEdges) {\n      serverEdges = serverEdges.map(function (edge) {\n        return buildConnectionEdge(store, connection, edge);\n      });\n      connection.setLinkedRecords(serverEdges, EDGES);\n    }\n    record.setLinkedRecord(connection, payload.handleKey);\n\n    clientPageInfo = store.create(require('./generateRelayClientID')(connection.getDataID(), PAGE_INFO), PAGE_INFO_TYPE);\n    clientPageInfo.setValue(false, HAS_NEXT_PAGE);\n    clientPageInfo.setValue(false, HAS_PREV_PAGE);\n    clientPageInfo.setValue(null, END_CURSOR);\n    clientPageInfo.setValue(null, START_CURSOR);\n    if (serverPageInfo) {\n      clientPageInfo.copyFieldsFrom(serverPageInfo);\n    }\n    connection.setLinkedRecord(clientPageInfo, PAGE_INFO);\n  } else {\n    var _connection = clientConnection;\n    // Subsequent fetches:\n    // - updated fields on the connection\n    // - merge prev/next edges, de-duplicating by node id\n    // - synthesize page info fields\n    var _serverEdges = serverConnection.getLinkedRecords(EDGES);\n    if (_serverEdges) {\n      _serverEdges = _serverEdges.map(function (edge) {\n        return buildConnectionEdge(store, _connection, edge);\n      });\n    }\n    var prevEdges = _connection.getLinkedRecords(EDGES);\n    var prevPageInfo = _connection.getLinkedRecord(PAGE_INFO);\n    _connection.copyFieldsFrom(serverConnection);\n    // Reset EDGES and PAGE_INFO fields\n    if (prevEdges) {\n      _connection.setLinkedRecords(prevEdges, EDGES);\n    }\n    if (prevPageInfo) {\n      _connection.setLinkedRecord(prevPageInfo, PAGE_INFO);\n    }\n\n    var nextEdges = [];\n    var args = payload.args;\n    if (prevEdges && _serverEdges) {\n      if (args.after != null) {\n        // Forward pagination from the end of the connection: append edges\n        if (clientPageInfo && args.after === clientPageInfo.getValue(END_CURSOR)) {\n          var nodeIDs = new Set();\n          mergeEdges(prevEdges, nextEdges, nodeIDs);\n          mergeEdges(_serverEdges, nextEdges, nodeIDs);\n        } else {\n          require('fbjs/lib/warning')(false, 'RelayConnectionHandler: Unexpected after cursor `%s`, edges must ' + 'be fetched from the end of the list (`%s`).', args.after, clientPageInfo && clientPageInfo.getValue(END_CURSOR));\n          return;\n        }\n      } else if (args.before != null) {\n        // Backward pagination from the start of the connection: prepend edges\n        if (clientPageInfo && args.before === clientPageInfo.getValue(START_CURSOR)) {\n          var _nodeIDs = new Set();\n          mergeEdges(_serverEdges, nextEdges, _nodeIDs);\n          mergeEdges(prevEdges, nextEdges, _nodeIDs);\n        } else {\n          require('fbjs/lib/warning')(false, 'RelayConnectionHandler: Unexpected before cursor `%s`, edges must ' + 'be fetched from the beginning of the list (`%s`).', args.before, clientPageInfo && clientPageInfo.getValue(START_CURSOR));\n          return;\n        }\n      } else {\n        // The connection was refetched from the beginning/end: replace edges\n        nextEdges = _serverEdges;\n      }\n    } else if (_serverEdges) {\n      nextEdges = _serverEdges;\n    } else {\n      nextEdges = prevEdges;\n    }\n    // Update edges only if they were updated, the null check is\n    // for Flow (prevEdges could be null).\n    if (nextEdges != null && nextEdges !== prevEdges) {\n      _connection.setLinkedRecords(nextEdges, EDGES);\n    }\n    // Page info should be updated even if no new edge were returned.\n    if (clientPageInfo && serverPageInfo) {\n      if (args.before != null || args.after == null && args.last) {\n        clientPageInfo.setValue(!!serverPageInfo.getValue(HAS_PREV_PAGE), HAS_PREV_PAGE);\n        var startCursor = serverPageInfo.getValue(START_CURSOR);\n        if (typeof startCursor === 'string') {\n          clientPageInfo.setValue(startCursor, START_CURSOR);\n        }\n      } else if (args.after != null || args.before == null && args.first) {\n        clientPageInfo.setValue(!!serverPageInfo.getValue(HAS_NEXT_PAGE), HAS_NEXT_PAGE);\n        var endCursor = serverPageInfo.getValue(END_CURSOR);\n        if (typeof endCursor === 'string') {\n          clientPageInfo.setValue(endCursor, END_CURSOR);\n        }\n      }\n    }\n  }\n}\n\n/**\n * @public\n *\n * Given a record and the name of the schema field for which a connection was\n * fetched, returns the linked connection record.\n *\n * Example:\n *\n * Given that data has already been fetched on some user `<id>` on the `friends`\n * field:\n *\n * ```\n * fragment FriendsFragment on User {\n *   friends(first: 10) @connection(key: \"FriendsFragment_friends\") {\n *    edges {\n *      node {\n *        id\n *        }\n *      }\n *   }\n * }\n * ```\n *\n * The `friends` connection record can be accessed with:\n *\n * ```\n * store => {\n *   const user = store.get('<id>');\n *   const friends = RelayConnectionHandler.getConnection(user, 'FriendsFragment_friends');\n *   // Access fields on the connection:\n *   const edges = friends.getLinkedRecords('edges');\n * }\n * ```\n *\n * TODO: t15733312\n * Currently we haven't run into this case yet, but we need to add a `getConnections`\n * that returns an array of the connections under the same `key` regardless of the variables.\n */\nfunction getConnection(record, key, filters) {\n  var handleKey = require('./getRelayHandleKey')(CONNECTION, key, null);\n  return record.getLinkedRecord(handleKey, filters);\n}\n\n/**\n * @public\n *\n * Inserts an edge after the given cursor, or at the end of the list if no\n * cursor is provided.\n *\n * Example:\n *\n * Given that data has already been fetched on some user `<id>` on the `friends`\n * field:\n *\n * ```\n * fragment FriendsFragment on User {\n *   friends(first: 10) @connection(key: \"FriendsFragment_friends\") {\n *    edges {\n *      node {\n *        id\n *        }\n *      }\n *   }\n * }\n * ```\n *\n * An edge can be appended with:\n *\n * ```\n * store => {\n *   const user = store.get('<id>');\n *   const friends = RelayConnectionHandler.getConnection(user, 'FriendsFragment_friends');\n *   const edge = store.create('<edge-id>', 'FriendsEdge');\n *   RelayConnectionHandler.insertEdgeAfter(friends, edge);\n * }\n * ```\n */\nfunction insertEdgeAfter(record, newEdge, cursor) {\n  var _RelayConnectionInter2 = require('./RelayConnectionInterface').get(),\n      CURSOR = _RelayConnectionInter2.CURSOR,\n      EDGES = _RelayConnectionInter2.EDGES;\n\n  var edges = record.getLinkedRecords(EDGES);\n  if (!edges) {\n    record.setLinkedRecords([newEdge], EDGES);\n    return;\n  }\n  var nextEdges = void 0;\n  if (cursor == null) {\n    nextEdges = edges.concat(newEdge);\n  } else {\n    nextEdges = [];\n    var foundCursor = false;\n    for (var ii = 0; ii < edges.length; ii++) {\n      var edge = edges[ii];\n      nextEdges.push(edge);\n      if (edge == null) {\n        continue;\n      }\n      var edgeCursor = edge.getValue(CURSOR);\n      if (cursor === edgeCursor) {\n        nextEdges.push(newEdge);\n        foundCursor = true;\n      }\n    }\n    if (!foundCursor) {\n      nextEdges.push(newEdge);\n    }\n  }\n  record.setLinkedRecords(nextEdges, EDGES);\n}\n\n/**\n * @public\n *\n * Creates an edge for a connection record, given a node and edge type.\n */\nfunction createEdge(store, record, node, edgeType) {\n  var _RelayConnectionInter3 = require('./RelayConnectionInterface').get(),\n      NODE = _RelayConnectionInter3.NODE;\n\n  // An index-based client ID could easily conflict (unless it was\n  // auto-incrementing, but there is nowhere to the store the id)\n  // Instead, construct a client ID based on the connection ID and node ID,\n  // which will only conflict if the same node is added to the same connection\n  // twice. This is acceptable since the `insertEdge*` functions ignore\n  // duplicates.\n\n\n  var edgeID = require('./generateRelayClientID')(record.getDataID(), node.getDataID());\n  var edge = store.get(edgeID);\n  if (!edge) {\n    edge = store.create(edgeID, edgeType);\n  }\n  edge.setLinkedRecord(node, NODE);\n  return edge;\n}\n\n/**\n * @public\n *\n * Inserts an edge before the given cursor, or at the beginning of the list if\n * no cursor is provided.\n *\n * Example:\n *\n * Given that data has already been fetched on some user `<id>` on the `friends`\n * field:\n *\n * ```\n * fragment FriendsFragment on User {\n *   friends(first: 10) @connection(key: \"FriendsFragment_friends\") {\n *    edges {\n *      node {\n *        id\n *        }\n *      }\n *   }\n * }\n * ```\n *\n * An edge can be prepended with:\n *\n * ```\n * store => {\n *   const user = store.get('<id>');\n *   const friends = RelayConnectionHandler.getConnection(user, 'FriendsFragment_friends');\n *   const edge = store.create('<edge-id>', 'FriendsEdge');\n *   RelayConnectionHandler.insertEdgeBefore(friends, edge);\n * }\n * ```\n */\nfunction insertEdgeBefore(record, newEdge, cursor) {\n  var _RelayConnectionInter4 = require('./RelayConnectionInterface').get(),\n      CURSOR = _RelayConnectionInter4.CURSOR,\n      EDGES = _RelayConnectionInter4.EDGES;\n\n  var edges = record.getLinkedRecords(EDGES);\n  if (!edges) {\n    record.setLinkedRecords([newEdge], EDGES);\n    return;\n  }\n  var nextEdges = void 0;\n  if (cursor == null) {\n    nextEdges = [newEdge].concat(edges);\n  } else {\n    nextEdges = [];\n    var foundCursor = false;\n    for (var ii = 0; ii < edges.length; ii++) {\n      var edge = edges[ii];\n      if (edge != null) {\n        var edgeCursor = edge.getValue(CURSOR);\n        if (cursor === edgeCursor) {\n          nextEdges.push(newEdge);\n          foundCursor = true;\n        }\n      }\n      nextEdges.push(edge);\n    }\n    if (!foundCursor) {\n      nextEdges.unshift(newEdge);\n    }\n  }\n  record.setLinkedRecords(nextEdges, EDGES);\n}\n\n/**\n * @public\n *\n * Remove any edges whose `node.id` matches the given id.\n */\nfunction deleteNode(record, nodeID) {\n  var _RelayConnectionInter5 = require('./RelayConnectionInterface').get(),\n      EDGES = _RelayConnectionInter5.EDGES,\n      NODE = _RelayConnectionInter5.NODE;\n\n  var edges = record.getLinkedRecords(EDGES);\n  if (!edges) {\n    return;\n  }\n  var nextEdges = void 0;\n  for (var ii = 0; ii < edges.length; ii++) {\n    var edge = edges[ii];\n    var node = edge && edge.getLinkedRecord(NODE);\n    if (node != null && node.getDataID() === nodeID) {\n      if (nextEdges === undefined) {\n        nextEdges = edges.slice(0, ii);\n      }\n    } else if (nextEdges !== undefined) {\n      nextEdges.push(edge);\n    }\n  }\n  if (nextEdges !== undefined) {\n    record.setLinkedRecords(nextEdges, EDGES);\n  }\n}\n\n/**\n * @internal\n *\n * Creates a copy of an edge with a unique ID based on per-connection-instance\n * incrementing edge index. This is necessary to avoid collisions between edges,\n * which can occur because (edge) client IDs are assigned deterministically\n * based on the path from the nearest node with an id.\n *\n * Example: if the first N edges of the same connection are refetched, the edges\n * from the second fetch will be assigned the same IDs as the first fetch, even\n * though the nodes they point to may be different (or the same and in different\n * order).\n */\nfunction buildConnectionEdge(store, connection, edge) {\n  if (edge == null) {\n    return edge;\n  }\n\n  var _RelayConnectionInter6 = require('./RelayConnectionInterface').get(),\n      EDGES = _RelayConnectionInter6.EDGES;\n\n  var edgeIndex = connection.getValue(NEXT_EDGE_INDEX);\n  require('fbjs/lib/invariant')(typeof edgeIndex === 'number', 'RelayConnectionHandler: Expected %s to be a number, got `%s`.', NEXT_EDGE_INDEX, edgeIndex);\n  var edgeID = require('./generateRelayClientID')(connection.getDataID(), EDGES, edgeIndex);\n  var connectionEdge = store.create(edgeID, edge.getType());\n  connectionEdge.copyFieldsFrom(edge);\n  connection.setValue(edgeIndex + 1, NEXT_EDGE_INDEX);\n  return connectionEdge;\n}\n\n/**\n * @internal\n *\n * Adds the source edges to the target edges, skipping edges with\n * duplicate cursors or node ids.\n */\nfunction mergeEdges(sourceEdges, targetEdges, nodeIDs) {\n  var _RelayConnectionInter7 = require('./RelayConnectionInterface').get(),\n      NODE = _RelayConnectionInter7.NODE;\n\n  for (var ii = 0; ii < sourceEdges.length; ii++) {\n    var edge = sourceEdges[ii];\n    if (!edge) {\n      continue;\n    }\n    var node = edge.getLinkedRecord(NODE);\n    var nodeID = node && node.getValue('id');\n    if (nodeID) {\n      if (nodeIDs.has(nodeID)) {\n        continue;\n      }\n      nodeIDs.add(nodeID);\n    }\n    targetEdges.push(edge);\n  }\n}\n\nmodule.exports = {\n  buildConnectionEdge: buildConnectionEdge,\n  createEdge: createEdge,\n  deleteNode: deleteNode,\n  getConnection: getConnection,\n  insertEdgeAfter: insertEdgeAfter,\n  insertEdgeBefore: insertEdgeBefore,\n  update: update\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/relay-runtime/lib/RelayConnectionHandler.js\n ** module id = 75\n ** module chunks = 0\n **/","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @providesModule RelayConnectionInterface\n * \n * @format\n */\n\n'use strict';\n\nvar _defineProperty3 = _interopRequireDefault(require('babel-runtime/helpers/defineProperty'));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar CONNECTION_CALLS = {\n  after: true,\n  before: true,\n  find: true,\n  first: true,\n  last: true,\n  surrounds: true\n};\n\nvar REQUIRED_RANGE_CALLS = {\n  find: true,\n  first: true,\n  last: true\n};\n\nvar config = {\n  CLIENT_MUTATION_ID: 'clientMutationId',\n  CURSOR: 'cursor',\n  /**\n   * Whether `edges` fields are expected to have `source` fields.\n   */\n  EDGES_HAVE_SOURCE_FIELD: false,\n  EDGES: 'edges',\n  END_CURSOR: 'endCursor',\n  HAS_NEXT_PAGE: 'hasNextPage',\n  HAS_PREV_PAGE: 'hasPreviousPage',\n  NODE: 'node',\n  PAGE_INFO_TYPE: 'PageInfo',\n  PAGE_INFO: 'pageInfo',\n  START_CURSOR: 'startCursor'\n};\n\n/**\n * @internal\n *\n * Defines logic relevant to the informal \"Connection\" GraphQL interface.\n */\nvar RelayConnectionInterface = {\n  inject: function inject(newConfig) {\n    config = newConfig;\n  },\n  get: function get() {\n    return config;\n  },\n\n\n  /**\n   * Checks whether a call exists strictly to encode which parts of a connection\n   * to fetch. Fields that only differ by connection call values should have the\n   * same identity.\n   */\n  isConnectionCall: function isConnectionCall(call) {\n    return CONNECTION_CALLS.hasOwnProperty(call.name);\n  },\n\n\n  /**\n   * Checks whether a set of calls on a connection supply enough information to\n   * fetch the range fields (i.e. `edges` and `page_info`).\n   */\n  hasRangeCalls: function hasRangeCalls(calls) {\n    return calls.some(function (call) {\n      return REQUIRED_RANGE_CALLS.hasOwnProperty(call.name);\n    });\n  },\n\n\n  /**\n   * Gets a default record representing a connection's `PAGE_INFO`.\n   */\n  getDefaultPageInfo: function getDefaultPageInfo() {\n    var _ref;\n\n    return _ref = {}, (0, _defineProperty3['default'])(_ref, config.END_CURSOR, undefined), (0, _defineProperty3['default'])(_ref, config.HAS_NEXT_PAGE, false), (0, _defineProperty3['default'])(_ref, config.HAS_PREV_PAGE, false), (0, _defineProperty3['default'])(_ref, config.START_CURSOR, undefined), _ref;\n  }\n};\n\nmodule.exports = RelayConnectionInterface;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/relay-runtime/lib/RelayConnectionInterface.js\n ** module id = 76\n ** module chunks = 0\n **/","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @providesModule generateRelayClientID\n * \n * @format\n */\n\n'use strict';\n\nvar PREFIX = 'client:';\n\nfunction generateRelayClientID(id, storageKey, index) {\n  var key = id + ':' + storageKey;\n  if (index != null) {\n    key += ':' + index;\n  }\n  if (key.indexOf(PREFIX) !== 0) {\n    key = PREFIX + key;\n  }\n  return key;\n}\n\nmodule.exports = generateRelayClientID;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/relay-runtime/lib/generateRelayClientID.js\n ** module id = 81\n ** module chunks = 0\n **/","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @providesModule getRelayHandleKey\n * @format\n */\n\n'use strict';\n\nvar _require = require('./RelayDefaultHandleKey'),\n    DEFAULT_HANDLE_KEY = _require.DEFAULT_HANDLE_KEY;\n\n/**\n * @internal\n *\n * Helper to create a unique name for a handle field based on the handle name, handle key and\n * source field.\n */\n\n\nfunction getRelayHandleKey(handleName, key, fieldName) {\n  if (key && key !== DEFAULT_HANDLE_KEY) {\n    return '__' + key + '_' + handleName;\n  }\n\n  require('fbjs/lib/invariant')(fieldName != null, 'getRelayHandleKey: Expected either `fieldName` or `key` in `handle` to be provided');\n  return '__' + fieldName + '_' + handleName;\n}\n\nmodule.exports = getRelayHandleKey;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/relay-runtime/lib/getRelayHandleKey.js\n ** module id = 82\n ** module chunks = 0\n **/","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @providesModule RelayDefaultHandleKey\n * \n * @format\n */\n\n'use strict';\n\nmodule.exports = {\n  DEFAULT_HANDLE_KEY: ''\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/relay-runtime/lib/RelayDefaultHandleKey.js\n ** module id = 83\n ** module chunks = 0\n **/","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @providesModule RelayViewerHandler\n * \n * @format\n */\n\n'use strict';\n\nvar _require = require('./RelayStoreUtils'),\n    ROOT_ID = _require.ROOT_ID;\n\nvar VIEWER_ID = require('./generateRelayClientID')(ROOT_ID, 'viewer');\nvar VIEWER_TYPE = 'Viewer';\n\n/**\n * A runtime handler for the `viewer` field. The actual viewer record will\n * *never* be accessed at runtime because all fragments that reference it will\n * delegate to the handle field. So in order to prevent GC from having to check\n * both the original server field *and* the handle field (which would be almost\n * duplicate work), the handler copies server fields and then deletes the server\n * record.\n *\n * NOTE: This means other handles may not be added on viewer, since they may\n * execute after this handle when the server record is already deleted.\n */\nfunction update(store, payload) {\n  var record = store.get(payload.dataID);\n  if (!record) {\n    return;\n  }\n  var serverViewer = record.getLinkedRecord(payload.fieldKey);\n  if (!serverViewer) {\n    // If `serverViewer` is null, `viewer` key for `client:root` should already\n    // be null, so no need to `setValue` again.\n    return;\n  }\n  // Server data already has viewer data at `client:root:viewer`, so link the\n  // handle field to the server viewer record.\n  if (serverViewer.getDataID() === VIEWER_ID) {\n    record.setValue(null, payload.fieldKey);\n    record.setLinkedRecord(serverViewer, payload.handleKey);\n    return;\n  }\n  // Other ways to access viewer such as mutations may have a different id for\n  // viewer: synthesize a record at the canonical viewer id, copy its fields\n  // from the server record, and delete the server record link to speed up GC.\n  var clientViewer = store.get(VIEWER_ID) || store.create(VIEWER_ID, VIEWER_TYPE);\n  clientViewer.copyFieldsFrom(serverViewer);\n  record.setValue(null, payload.fieldKey);\n  record.setLinkedRecord(clientViewer, payload.handleKey);\n\n  // Make sure the root object points to the viewer object as well\n  var root = store.getRoot();\n  root.setLinkedRecord(clientViewer, payload.handleKey);\n}\n\nmodule.exports = {\n  VIEWER_ID: VIEWER_ID,\n  update: update\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/relay-runtime/lib/RelayViewerHandler.js\n ** module id = 84\n ** module chunks = 0\n **/","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @providesModule RelayStoreUtils\n * \n * @format\n */\n\n'use strict';\n\nvar VARIABLE = require('./RelayConcreteNode').VARIABLE;\n\n/**\n * Returns the values of field/fragment arguments as an object keyed by argument\n * names.\n */\n\n\nfunction getArgumentValues(args, variables) {\n  var values = {};\n  args.forEach(function (arg) {\n    if (arg.kind === VARIABLE) {\n      values[arg.name] = getVariableValue(arg.variableName, variables);\n    } else {\n      values[arg.name] = arg.value;\n    }\n  });\n  return values;\n}\n\nfunction getHandleFilterValues(args, filters, variables) {\n  var filterArgs = args.filter(function (arg) {\n    return filters.indexOf(arg.name) > -1;\n  });\n  return getArgumentValues(filterArgs, variables);\n}\n\n/**\n * Given a field and variable values, returns a key that can be used to\n * uniquely identify the combination of the field name and argument values.\n *\n * Note: the word \"storage\" here refers to the fact this key is primarily used\n * when writing the results of a key in a normalized graph or \"store\". This\n * name was used in previous implementations of Relay internals and is also\n * used here for consistency.\n */\nfunction getStorageKey(field, variables) {\n  if (field.storageKey) {\n    return field.storageKey;\n  }\n  var args = field.args,\n      name = field.name;\n\n  if (!args || !args.length) {\n    return name;\n  }\n  var values = [];\n  args.forEach(function (arg) {\n    var value = void 0;\n    if (arg.kind === VARIABLE) {\n      value = getVariableValue(arg.variableName, variables);\n    } else {\n      value = arg.value;\n    }\n    if (value != null) {\n      values.push('\"' + arg.name + '\":' + require('./stableJSONStringify')(value));\n    }\n  });\n  if (values.length) {\n    return field.name + ('{' + values.join(',') + '}');\n  } else {\n    return field.name;\n  }\n}\n\nfunction getVariableValue(name, variables) {\n  require('fbjs/lib/invariant')(variables.hasOwnProperty(name), 'getVariableValue(): Undefined variable `%s`.', name);\n  return variables[name];\n}\n\n/**\n * Constants shared by all implementations of RecordSource/MutableRecordSource/etc.\n */\nvar RelayStoreUtils = {\n  FRAGMENTS_KEY: '__fragments',\n  ID_KEY: '__id',\n  REF_KEY: '__ref',\n  REFS_KEY: '__refs',\n  ROOT_ID: 'client:root',\n  ROOT_TYPE: '__Root',\n  TYPENAME_KEY: '__typename',\n  UNPUBLISH_RECORD_SENTINEL: Object.freeze({ __UNPUBLISH_RECORD_SENTINEL: true }),\n  UNPUBLISH_FIELD_SENTINEL: Object.freeze({ __UNPUBLISH_FIELD_SENTINEL: true }),\n\n  getArgumentValues: getArgumentValues,\n  getStorageKey: getStorageKey,\n  getHandleFilterValues: getHandleFilterValues\n};\n\nmodule.exports = RelayStoreUtils;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/relay-runtime/lib/RelayStoreUtils.js\n ** module id = 85\n ** module chunks = 0\n **/","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @providesModule RelayConcreteNode\n * \n * @format\n */\n\n'use strict';\n\n// TODO: Add BatchRequest to RequestNode\n\n/**\n * Represents a single ConcreteOperation along containing metadata for\n * processing it at runtime. The `text` (or persisted `id`) can be used to\n * execute the operation, the `fragment` is derived from this operation to\n * read the response data (masking data from child fragments), while\n * the `selections` can be used to normalize server responses.\n */\nvar RelayConcreteNode = {\n  CONDITION: 'Condition',\n  FRAGMENT: 'Fragment',\n  FRAGMENT_SPREAD: 'FragmentSpread',\n  INLINE_FRAGMENT: 'InlineFragment',\n  LINKED_FIELD: 'LinkedField',\n  LINKED_HANDLE: 'LinkedHandle',\n  LITERAL: 'Literal',\n  LOCAL_ARGUMENT: 'LocalArgument',\n  OPERATION: 'Operation',\n  ROOT_ARGUMENT: 'RootArgument',\n  SCALAR_FIELD: 'ScalarField',\n  SCALAR_HANDLE: 'ScalarHandle',\n  VARIABLE: 'Variable'\n};\n\nmodule.exports = RelayConcreteNode;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/relay-runtime/lib/RelayConcreteNode.js\n ** module id = 86\n ** module chunks = 0\n **/","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @providesModule stableJSONStringify\n * @format\n */\n\n'use strict';\n\n/**\n * Simple recursive stringifier that produces a stable JSON string suitable for\n * use as a cache key. Does not handle corner-cases such as circular references\n * or exotic types.\n */\n\nfunction stableJSONStringify(obj) {\n  if (Array.isArray(obj)) {\n    var result = [];\n    for (var ii = 0; ii < obj.length; ii++) {\n      var value = obj[ii] !== undefined ? obj[ii] : null;\n      result.push(stableJSONStringify(value));\n    }\n    return '[' + result.join(',') + ']';\n  } else if (typeof obj === 'object' && obj) {\n    var _result = [];\n    var keys = Object.keys(obj);\n    keys.sort();\n    for (var _ii = 0; _ii < keys.length; _ii++) {\n      var key = keys[_ii];\n      var _value = stableJSONStringify(obj[key]);\n      _result.push('\"' + key + '\":' + _value);\n    }\n    return '{' + _result.join(',') + '}';\n  } else {\n    return JSON.stringify(obj);\n  }\n}\n\nmodule.exports = stableJSONStringify;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/relay-runtime/lib/stableJSONStringify.js\n ** module id = 87\n ** module chunks = 0\n **/","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @providesModule RelayPublishQueue\n * @format\n */\n\n'use strict';\n\nvar _classCallCheck3 = _interopRequireDefault(require('babel-runtime/helpers/classCallCheck'));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\n/**\n * Coordinates the concurrent modification of a `Store` due to optimistic and\n * non-revertable client updates and server payloads:\n * - Applies optimistic updates.\n * - Reverts optimistic updates, rebasing any subsequent updates.\n * - Commits client updates (typically for client schema extensions).\n * - Commits server updates:\n *   - Normalizes query/mutation/subscription responses.\n *   - Executes handlers for \"handle\" fields.\n *   - Reverts and reapplies pending optimistic updates.\n */\nvar RelayPublishQueue = function () {\n  // Optimistic updaters to add with the next `run()`.\n\n  // Payloads to apply or Sources to publish to the store with the next `run()`.\n\n\n  // A \"negative\" of all applied updaters. It can be published to the store to\n  // undo them in order to re-apply some of them for a rebase.\n  function RelayPublishQueue(store, handlerProvider) {\n    (0, _classCallCheck3['default'])(this, RelayPublishQueue);\n\n    this._backup = new (require('./RelayInMemoryRecordSource'))();\n    this._handlerProvider = handlerProvider || null;\n    this._pendingBackupRebase = false;\n    this._pendingUpdaters = new Set();\n    this._pendingData = new Set();\n    this._pendingOptimisticUpdates = new Set();\n    this._store = store;\n    this._appliedOptimisticUpdates = new Set();\n  }\n\n  /**\n   * Schedule applying an optimistic updates on the next `run()`.\n   */\n\n  // Optimistic updaters that are already added and might be rerun in order to\n  // rebase them.\n\n  // Updaters to apply with the next `run()`. These mutate the store and should\n  // typically only mutate client schema extensions.\n\n  // True if the next `run()` should apply the backup and rerun all optimistic\n  // updates performing a rebase.\n\n\n  RelayPublishQueue.prototype.applyUpdate = function applyUpdate(updater) {\n    require('fbjs/lib/invariant')(!this._appliedOptimisticUpdates.has(updater) && !this._pendingOptimisticUpdates.has(updater), 'RelayPublishQueue: Cannot apply the same update function more than ' + 'once concurrently.');\n    this._pendingOptimisticUpdates.add(updater);\n  };\n\n  /**\n   * Schedule reverting an optimistic updates on the next `run()`.\n   */\n\n\n  RelayPublishQueue.prototype.revertUpdate = function revertUpdate(updater) {\n    if (this._pendingOptimisticUpdates.has(updater)) {\n      // Reverted before it was applied\n      this._pendingOptimisticUpdates['delete'](updater);\n    } else if (this._appliedOptimisticUpdates.has(updater)) {\n      this._pendingBackupRebase = true;\n      this._appliedOptimisticUpdates['delete'](updater);\n    }\n  };\n\n  /**\n   * Schedule a revert of all optimistic updates on the next `run()`.\n   */\n\n\n  RelayPublishQueue.prototype.revertAll = function revertAll() {\n    this._pendingBackupRebase = true;\n    this._pendingOptimisticUpdates.clear();\n    this._appliedOptimisticUpdates.clear();\n  };\n\n  /**\n   * Schedule applying a payload to the store on the next `run()`.\n   */\n\n\n  RelayPublishQueue.prototype.commitPayload = function commitPayload(operation, _ref, updater) {\n    var fieldPayloads = _ref.fieldPayloads,\n        source = _ref.source;\n\n    this._pendingBackupRebase = true;\n    this._pendingData.add({\n      kind: 'payload',\n      payload: { fieldPayloads: fieldPayloads, operation: operation, source: source, updater: updater }\n    });\n  };\n\n  /**\n   * Schedule an updater to mutate the store on the next `run()` typically to\n   * update client schema fields.\n   */\n\n\n  RelayPublishQueue.prototype.commitUpdate = function commitUpdate(updater) {\n    this._pendingBackupRebase = true;\n    this._pendingUpdaters.add(updater);\n  };\n\n  /**\n   * Schedule a publish to the store from the provided source on the next\n   * `run()`. As an example, to update the store with substituted fields that\n   * are missing in the store.\n   */\n\n\n  RelayPublishQueue.prototype.commitSource = function commitSource(source) {\n    this._pendingBackupRebase = true;\n    this._pendingData.add({ kind: 'source', source: source });\n  };\n\n  /**\n   * Execute all queued up operations from the other public methods.\n   */\n\n\n  RelayPublishQueue.prototype.run = function run() {\n    if (this._pendingBackupRebase && this._backup.size()) {\n      this._store.publish(this._backup);\n      this._backup = new (require('./RelayInMemoryRecordSource'))();\n    }\n    this._commitData();\n    this._commitUpdaters();\n    this._applyUpdates();\n    this._pendingBackupRebase = false;\n    this._store.notify();\n  };\n\n  RelayPublishQueue.prototype._getSourceFromPayload = function _getSourceFromPayload(payload) {\n    var _this = this;\n\n    var fieldPayloads = payload.fieldPayloads,\n        operation = payload.operation,\n        source = payload.source,\n        updater = payload.updater;\n\n    var mutator = new (require('./RelayRecordSourceMutator'))(this._store.getSource(), source);\n    var store = new (require('./RelayRecordSourceProxy'))(mutator);\n    var selectorStore = new (require('./RelayRecordSourceSelectorProxy'))(store, operation.fragment);\n    if (fieldPayloads && fieldPayloads.length) {\n      fieldPayloads.forEach(function (fieldPayload) {\n        var handler = _this._handlerProvider && _this._handlerProvider(fieldPayload.handle);\n        require('fbjs/lib/invariant')(handler, 'RelayModernEnvironment: Expected a handler to be provided for ' + 'handle `%s`.', fieldPayload.handle);\n        handler.update(store, fieldPayload);\n      });\n    }\n    if (updater) {\n      var selectorData = lookupSelector(source, operation.fragment);\n      updater(selectorStore, selectorData);\n    }\n    return source;\n  };\n\n  RelayPublishQueue.prototype._commitData = function _commitData() {\n    var _this2 = this;\n\n    if (!this._pendingData.size) {\n      return;\n    }\n    this._pendingData.forEach(function (data) {\n      var source = void 0;\n      if (data.kind === 'payload') {\n        source = _this2._getSourceFromPayload(data.payload);\n      } else {\n        source = data.source;\n      }\n      _this2._store.publish(source);\n    });\n    this._pendingData.clear();\n  };\n\n  RelayPublishQueue.prototype._commitUpdaters = function _commitUpdaters() {\n    var _this3 = this;\n\n    if (!this._pendingUpdaters.size) {\n      return;\n    }\n    var sink = new (require('./RelayInMemoryRecordSource'))();\n    this._pendingUpdaters.forEach(function (updater) {\n      var mutator = new (require('./RelayRecordSourceMutator'))(_this3._store.getSource(), sink);\n      var store = new (require('./RelayRecordSourceProxy'))(mutator);\n      updater(store);\n    });\n    this._store.publish(sink);\n    this._pendingUpdaters.clear();\n  };\n\n  RelayPublishQueue.prototype._applyUpdates = function _applyUpdates() {\n    var _this4 = this;\n\n    if (this._pendingOptimisticUpdates.size || this._pendingBackupRebase && this._appliedOptimisticUpdates.size) {\n      var sink = new (require('./RelayInMemoryRecordSource'))();\n      var mutator = new (require('./RelayRecordSourceMutator'))(this._store.getSource(), sink, this._backup);\n      var store = new (require('./RelayRecordSourceProxy'))(mutator, this._handlerProvider);\n\n      // rerun all updaters in case we are running a rebase\n      if (this._pendingBackupRebase && this._appliedOptimisticUpdates.size) {\n        this._appliedOptimisticUpdates.forEach(function (optimisticUpdate) {\n          if (optimisticUpdate.operation) {\n            var selectorStoreUpdater = optimisticUpdate.selectorStoreUpdater,\n                _operation = optimisticUpdate.operation,\n                response = optimisticUpdate.response;\n\n            var selectorStore = store.commitPayload(_operation, response);\n            // TODO: Fix commitPayload so we don't have to run normalize twice\n            var selectorData = void 0,\n                _source = void 0;\n            if (response) {\n              var _normalizeRelayPayloa = require('./normalizeRelayPayload')(_operation.root, response);\n\n              _source = _normalizeRelayPayloa.source;\n\n              selectorData = lookupSelector(_source, _operation.fragment);\n            }\n            selectorStoreUpdater && selectorStoreUpdater(selectorStore, selectorData);\n          } else {\n            var storeUpdater = optimisticUpdate.storeUpdater;\n\n            storeUpdater(store);\n          }\n        });\n      }\n\n      // apply any new updaters\n      if (this._pendingOptimisticUpdates.size) {\n        this._pendingOptimisticUpdates.forEach(function (optimisticUpdate) {\n          if (optimisticUpdate.operation) {\n            var selectorStoreUpdater = optimisticUpdate.selectorStoreUpdater,\n                _operation2 = optimisticUpdate.operation,\n                response = optimisticUpdate.response;\n\n            var selectorStore = store.commitPayload(_operation2, response);\n            // TODO: Fix commitPayload so we don't have to run normalize twice\n            var selectorData = void 0,\n                _source2 = void 0;\n            if (response) {\n              var _normalizeRelayPayloa2 = require('./normalizeRelayPayload')(_operation2.root, response);\n\n              _source2 = _normalizeRelayPayloa2.source;\n\n              selectorData = lookupSelector(_source2, _operation2.fragment);\n            }\n            selectorStoreUpdater && selectorStoreUpdater(selectorStore, selectorData);\n          } else {\n            var storeUpdater = optimisticUpdate.storeUpdater;\n\n            storeUpdater(store);\n          }\n          _this4._appliedOptimisticUpdates.add(optimisticUpdate);\n        });\n        this._pendingOptimisticUpdates.clear();\n      }\n\n      this._store.publish(sink);\n    }\n  };\n\n  return RelayPublishQueue;\n}();\n\nfunction lookupSelector(source, selector) {\n  var selectorData = require('./RelayReader').read(source, selector).data;\n  if (process.env.NODE_ENV !== 'production') {\n    var deepFreeze = require('./deepFreeze');\n    if (selectorData) {\n      deepFreeze(selectorData);\n    }\n  }\n  return selectorData;\n}\n\nmodule.exports = RelayPublishQueue;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/relay-runtime/lib/RelayPublishQueue.js\n ** module id = 88\n ** module chunks = 0\n **/","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @providesModule RelayInMemoryRecordSource\n * \n * @format\n */\n\n'use strict';\n\nvar _classCallCheck3 = _interopRequireDefault(require('babel-runtime/helpers/classCallCheck'));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar EXISTENT = require('./RelayRecordState').EXISTENT,\n    NONEXISTENT = require('./RelayRecordState').NONEXISTENT,\n    UNKNOWN = require('./RelayRecordState').UNKNOWN;\n\n/**\n * An implementation of the `MutableRecordSource` interface (defined in\n * `RelayStoreTypes`) that holds all records in memory.\n */\n\n\nvar RelayInMemoryRecordSource = function () {\n  function RelayInMemoryRecordSource(records) {\n    (0, _classCallCheck3['default'])(this, RelayInMemoryRecordSource);\n\n    this._records = records || {};\n  }\n\n  RelayInMemoryRecordSource.prototype.clear = function clear() {\n    this._records = {};\n  };\n\n  RelayInMemoryRecordSource.prototype['delete'] = function _delete(dataID) {\n    this._records[dataID] = null;\n  };\n\n  RelayInMemoryRecordSource.prototype.get = function get(dataID) {\n    return this._records[dataID];\n  };\n\n  RelayInMemoryRecordSource.prototype.getRecordIDs = function getRecordIDs() {\n    return Object.keys(this._records);\n  };\n\n  RelayInMemoryRecordSource.prototype.getStatus = function getStatus(dataID) {\n    if (!this._records.hasOwnProperty(dataID)) {\n      return UNKNOWN;\n    }\n    return this._records[dataID] == null ? NONEXISTENT : EXISTENT;\n  };\n\n  RelayInMemoryRecordSource.prototype.has = function has(dataID) {\n    return this._records.hasOwnProperty(dataID);\n  };\n\n  RelayInMemoryRecordSource.prototype.load = function load(dataID, callback) {\n    callback(null, this.get(dataID));\n  };\n\n  RelayInMemoryRecordSource.prototype.remove = function remove(dataID) {\n    delete this._records[dataID];\n  };\n\n  RelayInMemoryRecordSource.prototype.set = function set(dataID, record) {\n    this._records[dataID] = record;\n  };\n\n  RelayInMemoryRecordSource.prototype.size = function size() {\n    return Object.keys(this._records).length;\n  };\n\n  RelayInMemoryRecordSource.prototype.toJSON = function toJSON() {\n    return this._records;\n  };\n\n  return RelayInMemoryRecordSource;\n}();\n\nmodule.exports = RelayInMemoryRecordSource;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/relay-runtime/lib/RelayInMemoryRecordSource.js\n ** module id = 89\n ** module chunks = 0\n **/","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @providesModule RelayRecordState\n * \n * @format\n */\n\n'use strict';\n\nvar RelayRecordState = {\n  /**\n   * Record exists (either fetched from the server or produced by a local,\n   * optimistic update).\n   */\n  EXISTENT: 'EXISTENT',\n\n  /**\n   * Record is known not to exist (either as the result of a mutation, or\n   * because the server returned `null` when queried for the record).\n   */\n  NONEXISTENT: 'NONEXISTENT',\n\n  /**\n   * Record State is unknown because it has not yet been fetched from the\n   * server.\n   */\n  UNKNOWN: 'UNKNOWN'\n};\n\nmodule.exports = RelayRecordState;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/relay-runtime/lib/RelayRecordState.js\n ** module id = 90\n ** module chunks = 0\n **/","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @providesModule RelayRecordSourceMutator\n * \n * @format\n */\n\n'use strict';\n\nvar _extends3 = _interopRequireDefault(require('babel-runtime/helpers/extends'));\n\nvar _classCallCheck3 = _interopRequireDefault(require('babel-runtime/helpers/classCallCheck'));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _require = require('./RelayRecordState'),\n    EXISTENT = _require.EXISTENT;\n\nvar _require2 = require('./RelayStoreUtils'),\n    UNPUBLISH_FIELD_SENTINEL = _require2.UNPUBLISH_FIELD_SENTINEL,\n    UNPUBLISH_RECORD_SENTINEL = _require2.UNPUBLISH_RECORD_SENTINEL;\n\n/**\n * @internal\n *\n * Wrapper API that is an amalgam of the `RelayModernRecord` API and\n * `MutableRecordSource` interface, implementing copy-on-write semantics for\n * records in a record source. If a `backup` is supplied, the mutator will\n * ensure that the backup contains sufficient information to revert all\n * modifications by publishing the backup.\n *\n * Modifications are applied to fresh copies of records with optional backups\n * created:\n * - Records in `base` are never modified.\n * - Modifications cause a fresh version of a record to be created in `sink`.\n *   These sink records contain only modified fields.\n * - If a `backup` is supplied, any modifications to a record will cause the\n *   sink version of the record to be added to the backup.\n * - Creation of a record causes a sentinel object to be added to the backup\n *   so that the new record can be removed from the store by publishing the\n *   backup.\n */\nvar RelayRecordSourceMutator = function () {\n  function RelayRecordSourceMutator(base, sink, backup) {\n    (0, _classCallCheck3['default'])(this, RelayRecordSourceMutator);\n\n    this._backup = backup;\n    this._base = base;\n    this._sink = sink;\n    this.__sources = [sink, base];\n  }\n\n  RelayRecordSourceMutator.prototype._createBackupRecord = function _createBackupRecord(dataID) {\n    var backup = this._backup;\n    if (backup && !backup.has(dataID)) {\n      var baseRecord = this._base.get(dataID);\n      if (baseRecord != null) {\n        backup.set(dataID, baseRecord);\n      } else if (baseRecord === null) {\n        backup['delete'](dataID);\n      }\n    }\n  };\n\n  RelayRecordSourceMutator.prototype._setSentinelFieldsInBackupRecord = function _setSentinelFieldsInBackupRecord(dataID, record) {\n    var backup = this._backup;\n    if (backup) {\n      var backupRecord = backup.get(dataID);\n      if (backupRecord && backupRecord !== UNPUBLISH_RECORD_SENTINEL) {\n        var copy = null;\n        for (var key in record) {\n          if (record.hasOwnProperty(key)) {\n            if (!(key in backupRecord)) {\n              copy = copy || (0, _extends3['default'])({}, backupRecord);\n              copy[key] = UNPUBLISH_FIELD_SENTINEL;\n            }\n          }\n        }\n        backup.set(dataID, copy || backupRecord);\n      }\n    }\n  };\n\n  RelayRecordSourceMutator.prototype._setSentinelFieldInBackupRecord = function _setSentinelFieldInBackupRecord(dataID, storageKey) {\n    var backup = this._backup;\n    if (backup) {\n      var backupRecord = backup.get(dataID);\n      if (backupRecord && backupRecord !== UNPUBLISH_RECORD_SENTINEL && !(storageKey in backupRecord)) {\n        var copy = (0, _extends3['default'])({}, backupRecord);\n        require('./RelayModernRecord').setValue(copy, storageKey, UNPUBLISH_FIELD_SENTINEL);\n        backup.set(dataID, copy);\n      }\n    }\n  };\n\n  RelayRecordSourceMutator.prototype._getSinkRecord = function _getSinkRecord(dataID) {\n    var sinkRecord = this._sink.get(dataID);\n    if (!sinkRecord) {\n      var baseRecord = this._base.get(dataID);\n      require('fbjs/lib/invariant')(baseRecord, 'RelayRecordSourceMutator: Cannot modify non-existent record `%s`.', dataID);\n      sinkRecord = require('./RelayModernRecord').create(dataID, require('./RelayModernRecord').getType(baseRecord));\n      this._sink.set(dataID, sinkRecord);\n    }\n    return sinkRecord;\n  };\n\n  RelayRecordSourceMutator.prototype.copyFields = function copyFields(sourceID, sinkID) {\n    var sinkSource = this._sink.get(sourceID);\n    var baseSource = this._base.get(sourceID);\n    require('fbjs/lib/invariant')(sinkSource || baseSource, 'RelayRecordSourceMutator#copyFields(): Cannot copy fields from ' + 'non-existent record `%s`.', sourceID);\n    this._createBackupRecord(sinkID);\n    var sink = this._getSinkRecord(sinkID);\n    if (baseSource) {\n      require('./RelayModernRecord').copyFields(baseSource, sink);\n    }\n    if (sinkSource) {\n      require('./RelayModernRecord').copyFields(sinkSource, sink);\n    }\n    this._setSentinelFieldsInBackupRecord(sinkID, sink);\n  };\n\n  RelayRecordSourceMutator.prototype.copyFieldsFromRecord = function copyFieldsFromRecord(record, sinkID) {\n    this.copyFields(require('./RelayModernRecord').getDataID(record), sinkID);\n    var sink = this._getSinkRecord(sinkID);\n    require('./RelayModernRecord').copyFields(record, sink);\n    this._setSentinelFieldsInBackupRecord(sinkID, sink);\n  };\n\n  RelayRecordSourceMutator.prototype.create = function create(dataID, typeName) {\n    require('fbjs/lib/invariant')(this._base.getStatus(dataID) !== EXISTENT && this._sink.getStatus(dataID) !== EXISTENT, 'RelayRecordSourceMutator#create(): Cannot create a record with id ' + '`%s`, this record already exists.', dataID);\n    if (this._backup) {\n      this._backup.set(dataID, UNPUBLISH_RECORD_SENTINEL);\n    }\n    var record = require('./RelayModernRecord').create(dataID, typeName);\n    this._sink.set(dataID, record);\n  };\n\n  RelayRecordSourceMutator.prototype['delete'] = function _delete(dataID) {\n    this._createBackupRecord(dataID);\n    this._sink['delete'](dataID);\n  };\n\n  RelayRecordSourceMutator.prototype.getStatus = function getStatus(dataID) {\n    return this._sink.has(dataID) ? this._sink.getStatus(dataID) : this._base.getStatus(dataID);\n  };\n\n  RelayRecordSourceMutator.prototype.getType = function getType(dataID) {\n    for (var ii = 0; ii < this.__sources.length; ii++) {\n      var record = this.__sources[ii].get(dataID);\n      if (record) {\n        return require('./RelayModernRecord').getType(record);\n      } else if (record === null) {\n        return null;\n      }\n    }\n  };\n\n  RelayRecordSourceMutator.prototype.getValue = function getValue(dataID, storageKey) {\n    for (var ii = 0; ii < this.__sources.length; ii++) {\n      var record = this.__sources[ii].get(dataID);\n      if (record) {\n        var value = require('./RelayModernRecord').getValue(record, storageKey);\n        if (value !== undefined) {\n          return value;\n        }\n      } else if (record === null) {\n        return null;\n      }\n    }\n  };\n\n  RelayRecordSourceMutator.prototype.setValue = function setValue(dataID, storageKey, value) {\n    this._createBackupRecord(dataID);\n    var sinkRecord = this._getSinkRecord(dataID);\n    require('./RelayModernRecord').setValue(sinkRecord, storageKey, value);\n    this._setSentinelFieldInBackupRecord(dataID, storageKey);\n  };\n\n  RelayRecordSourceMutator.prototype.getLinkedRecordID = function getLinkedRecordID(dataID, storageKey) {\n    for (var ii = 0; ii < this.__sources.length; ii++) {\n      var record = this.__sources[ii].get(dataID);\n      if (record) {\n        var linkedID = require('./RelayModernRecord').getLinkedRecordID(record, storageKey);\n        if (linkedID !== undefined) {\n          return linkedID;\n        }\n      } else if (record === null) {\n        return null;\n      }\n    }\n  };\n\n  RelayRecordSourceMutator.prototype.setLinkedRecordID = function setLinkedRecordID(dataID, storageKey, linkedID) {\n    this._createBackupRecord(dataID);\n    var sinkRecord = this._getSinkRecord(dataID);\n    require('./RelayModernRecord').setLinkedRecordID(sinkRecord, storageKey, linkedID);\n    this._setSentinelFieldInBackupRecord(dataID, storageKey);\n  };\n\n  RelayRecordSourceMutator.prototype.getLinkedRecordIDs = function getLinkedRecordIDs(dataID, storageKey) {\n    for (var ii = 0; ii < this.__sources.length; ii++) {\n      var record = this.__sources[ii].get(dataID);\n      if (record) {\n        var linkedIDs = require('./RelayModernRecord').getLinkedRecordIDs(record, storageKey);\n        if (linkedIDs !== undefined) {\n          return linkedIDs;\n        }\n      } else if (record === null) {\n        return null;\n      }\n    }\n  };\n\n  RelayRecordSourceMutator.prototype.setLinkedRecordIDs = function setLinkedRecordIDs(dataID, storageKey, linkedIDs) {\n    this._createBackupRecord(dataID);\n    var sinkRecord = this._getSinkRecord(dataID);\n    require('./RelayModernRecord').setLinkedRecordIDs(sinkRecord, storageKey, linkedIDs);\n    this._setSentinelFieldInBackupRecord(dataID, storageKey);\n  };\n\n  return RelayRecordSourceMutator;\n}();\n\nmodule.exports = RelayRecordSourceMutator;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/relay-runtime/lib/RelayRecordSourceMutator.js\n ** module id = 91\n ** module chunks = 0\n **/","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @providesModule RelayModernRecord\n * \n * @format\n */\n\n'use strict';\n\nvar _extends3 = _interopRequireDefault(require('babel-runtime/helpers/extends'));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _require = require('./RelayStoreUtils'),\n    ID_KEY = _require.ID_KEY,\n    REF_KEY = _require.REF_KEY,\n    REFS_KEY = _require.REFS_KEY,\n    TYPENAME_KEY = _require.TYPENAME_KEY,\n    UNPUBLISH_FIELD_SENTINEL = _require.UNPUBLISH_FIELD_SENTINEL;\n\n/**\n * @public\n *\n * Low-level record manipulation methods.\n *\n * A note about perf: we use long-hand property access rather than computed\n * properties in this file for speed ie.\n *\n *    const object = {};\n *    object[KEY] = value;\n *    record[storageKey] = object;\n *\n * instead of:\n *\n *    record[storageKey] = {\n *      [KEY]: value,\n *    };\n *\n * The latter gets transformed by Babel into something like:\n *\n *    function _defineProperty(obj, key, value) {\n *      if (key in obj) {\n *        Object.defineProperty(obj, key, {\n *          value: value,\n *          enumerable: true,\n *          configurable: true,\n *          writable: true,\n *        });\n *      } else {\n *        obj[key] = value;\n *      }\n *      return obj;\n *    }\n *\n *    record[storageKey] = _defineProperty({}, KEY, value);\n *\n * A quick benchmark shows that computed property access is an order of\n * magnitude slower (times in seconds for 100,000 iterations):\n *\n *               best     avg     sd\n *    computed 0.02175 0.02292 0.00113\n *      manual 0.00110 0.00123 0.00008\n */\n\n/**\n * @public\n *\n * Clone a record.\n */\nfunction clone(record) {\n  return (0, _extends3['default'])({}, record);\n}\n\n/**\n * @public\n *\n * Copies all fields from `source` to `sink`, excluding `__id` and `__typename`.\n *\n * NOTE: This function does not treat `id` specially. To preserve the id,\n * manually reset it after calling this function. Also note that values are\n * copied by reference and not value; callers should ensure that values are\n * copied on write.\n */\nfunction copyFields(source, sink) {\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) {\n      if (key !== ID_KEY && key !== TYPENAME_KEY) {\n        sink[key] = source[key];\n      }\n    }\n  }\n}\n\n/**\n * @public\n *\n * Create a new record.\n */\nfunction create(dataID, typeName) {\n  // See perf note above for why we aren't using computed property access.\n  var record = {};\n  record[ID_KEY] = dataID;\n  record[TYPENAME_KEY] = typeName;\n  return record;\n}\n\n/**\n * @public\n *\n * Get the record's `id` if available or the client-generated identifier.\n */\nfunction getDataID(record) {\n  return record[ID_KEY];\n}\n\n/**\n * @public\n *\n * Get the concrete type of the record.\n */\nfunction getType(record) {\n  return record[TYPENAME_KEY];\n}\n\n/**\n * @public\n *\n * Get a scalar (non-link) field value.\n */\nfunction getValue(record, storageKey) {\n  var value = record[storageKey];\n  if (value && typeof value === 'object') {\n    require('fbjs/lib/invariant')(!value.hasOwnProperty(REF_KEY) && !value.hasOwnProperty(REFS_KEY), 'RelayModernRecord.getValue(): Expected a scalar (non-link) value for `%s.%s` ' + 'but found %s.', record[ID_KEY], storageKey, value.hasOwnProperty(REF_KEY) ? 'a linked record' : 'plural linked records');\n  }\n  return value;\n}\n\n/**\n * @public\n *\n * Get the value of a field as a reference to another record. Throws if the\n * field has a different type.\n */\nfunction getLinkedRecordID(record, storageKey) {\n  var link = record[storageKey];\n  if (link == null) {\n    return link;\n  }\n  require('fbjs/lib/invariant')(typeof link === 'object' && link && typeof link[REF_KEY] === 'string', 'RelayModernRecord.getLinkedRecordID(): Expected `%s.%s` to be a linked ID, ' + 'was `%s`.', record[ID_KEY], storageKey, link);\n  return link[REF_KEY];\n}\n\n/**\n * @public\n *\n * Get the value of a field as a list of references to other records. Throws if\n * the field has a different type.\n */\nfunction getLinkedRecordIDs(record, storageKey) {\n  var links = record[storageKey];\n  if (links == null) {\n    return links;\n  }\n  require('fbjs/lib/invariant')(typeof links === 'object' && Array.isArray(links[REFS_KEY]), 'RelayModernRecord.getLinkedRecordIDs(): Expected `%s.%s` to contain an array ' + 'of linked IDs, got `%s`.', record[ID_KEY], storageKey, JSON.stringify(links));\n  // assume items of the array are ids\n  return links[REFS_KEY];\n}\n\n/**\n * @public\n *\n * Compares the fields of a previous and new record, returning either the\n * previous record if all fields are equal or a new record (with merged fields)\n * if any fields have changed.\n */\nfunction update(prevRecord, nextRecord) {\n  var updated = void 0;\n  var keys = Object.keys(nextRecord);\n  for (var ii = 0; ii < keys.length; ii++) {\n    var key = keys[ii];\n    if (updated || !require('fbjs/lib/areEqual')(prevRecord[key], nextRecord[key])) {\n      updated = updated || (0, _extends3['default'])({}, prevRecord);\n      if (nextRecord[key] !== UNPUBLISH_FIELD_SENTINEL) {\n        updated[key] = nextRecord[key];\n      } else {\n        delete updated[key];\n      }\n    }\n  }\n  return updated || prevRecord;\n}\n\n/**\n * @public\n *\n * Returns a new record with the contents of the given records. Fields in the\n * second record will overwrite identical fields in the first record.\n */\nfunction merge(record1, record2) {\n  return Object.assign({}, record1, record2);\n}\n\n/**\n * @public\n *\n * Prevent modifications to the record. Attempts to call `set*` functions on a\n * frozen record will fatal at runtime.\n */\nfunction freeze(record) {\n  require('./deepFreeze')(record);\n}\n\n/**\n * @public\n *\n * Set the value of a storageKey to a scalar.\n */\nfunction setValue(record, storageKey, value) {\n  record[storageKey] = value;\n}\n\n/**\n * @public\n *\n * Set the value of a field to a reference to another record.\n */\nfunction setLinkedRecordID(record, storageKey, linkedID) {\n  // See perf note above for why we aren't using computed property access.\n  var link = {};\n  link[REF_KEY] = linkedID;\n  record[storageKey] = link;\n}\n\n/**\n * @public\n *\n * Set the value of a field to a list of references other records.\n */\nfunction setLinkedRecordIDs(record, storageKey, linkedIDs) {\n  // See perf note above for why we aren't using computed property access.\n  var links = {};\n  links[REFS_KEY] = linkedIDs;\n  record[storageKey] = links;\n}\n\nmodule.exports = {\n  clone: clone,\n  copyFields: copyFields,\n  create: create,\n  freeze: freeze,\n  getDataID: getDataID,\n  getLinkedRecordID: getLinkedRecordID,\n  getLinkedRecordIDs: getLinkedRecordIDs,\n  getType: getType,\n  getValue: getValue,\n  merge: merge,\n  setValue: setValue,\n  setLinkedRecordID: setLinkedRecordID,\n  setLinkedRecordIDs: setLinkedRecordIDs,\n  update: update\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/relay-runtime/lib/RelayModernRecord.js\n ** module id = 92\n ** module chunks = 0\n **/","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @providesModule deepFreeze\n * @format\n */\n\n'use strict';\n\n/**\n * Recursively \"deep\" freezes the supplied object.\n *\n * For convenience, and for consistency with the behavior of `Object.freeze`,\n * returns the now-frozen original object.\n */\n\nfunction deepFreeze(object) {\n  Object.freeze(object);\n  Object.getOwnPropertyNames(object).forEach(function (name) {\n    var property = object[name];\n    if (property && typeof property === 'object' && !Object.isFrozen(property)) {\n      deepFreeze(property);\n    }\n  });\n  return object;\n}\n\nmodule.exports = deepFreeze;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/relay-runtime/lib/deepFreeze.js\n ** module id = 94\n ** module chunks = 0\n **/","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @providesModule RelayRecordSourceProxy\n * \n * @format\n */\n\n'use strict';\n\nvar _classCallCheck3 = _interopRequireDefault(require('babel-runtime/helpers/classCallCheck'));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _require = require('./RelayRecordState'),\n    EXISTENT = _require.EXISTENT,\n    NONEXISTENT = _require.NONEXISTENT;\n\nvar _require2 = require('./RelayStoreUtils'),\n    ROOT_ID = _require2.ROOT_ID,\n    ROOT_TYPE = _require2.ROOT_TYPE;\n\n/**\n * @internal\n *\n * A helper for manipulating a `RecordSource` via an imperative/OO-style API.\n */\nvar RelayRecordSourceProxy = function () {\n  function RelayRecordSourceProxy(mutator, handlerProvider) {\n    (0, _classCallCheck3['default'])(this, RelayRecordSourceProxy);\n\n    this.__mutator = mutator;\n    this._handlerProvider = handlerProvider || null;\n    this._proxies = {};\n  }\n\n  RelayRecordSourceProxy.prototype.commitPayload = function commitPayload(operation, response) {\n    var _this = this;\n\n    if (!response) {\n      return new (require('./RelayRecordSourceSelectorProxy'))(this, operation.fragment);\n    }\n\n    var _normalizeRelayPayloa = require('./normalizeRelayPayload')(operation.root, response),\n        source = _normalizeRelayPayloa.source,\n        fieldPayloads = _normalizeRelayPayloa.fieldPayloads;\n\n    var dataIDs = source.getRecordIDs();\n    dataIDs.forEach(function (dataID) {\n      var status = source.getStatus(dataID);\n      if (status === EXISTENT) {\n        var sourceRecord = source.get(dataID);\n        if (sourceRecord) {\n          if (_this.__mutator.getStatus(dataID) !== EXISTENT) {\n            _this.create(dataID, require('./RelayModernRecord').getType(sourceRecord));\n          }\n          _this.__mutator.copyFieldsFromRecord(sourceRecord, dataID);\n          delete _this._proxies[dataID];\n        }\n      } else if (status === NONEXISTENT) {\n        _this['delete'](dataID);\n      }\n    });\n\n    if (fieldPayloads && fieldPayloads.length) {\n      fieldPayloads.forEach(function (fieldPayload) {\n        var handler = _this._handlerProvider && _this._handlerProvider(fieldPayload.handle);\n        require('fbjs/lib/invariant')(handler, 'RelayModernEnvironment: Expected a handler to be provided for handle `%s`.', fieldPayload.handle);\n        handler.update(_this, fieldPayload);\n      });\n    }\n    return new (require('./RelayRecordSourceSelectorProxy'))(this, operation.fragment);\n  };\n\n  RelayRecordSourceProxy.prototype.create = function create(dataID, typeName) {\n    this.__mutator.create(dataID, typeName);\n    delete this._proxies[dataID];\n    var record = this.get(dataID);\n    // For flow\n    require('fbjs/lib/invariant')(record, 'RelayRecordSourceProxy#create(): Expected the created record to exist.');\n    return record;\n  };\n\n  RelayRecordSourceProxy.prototype['delete'] = function _delete(dataID) {\n    require('fbjs/lib/invariant')(dataID !== ROOT_ID, 'RelayRecordSourceProxy#delete(): Cannot delete the root record.');\n    delete this._proxies[dataID];\n    this.__mutator['delete'](dataID);\n  };\n\n  RelayRecordSourceProxy.prototype.get = function get(dataID) {\n    if (!this._proxies.hasOwnProperty(dataID)) {\n      var status = this.__mutator.getStatus(dataID);\n      if (status === EXISTENT) {\n        this._proxies[dataID] = new (require('./RelayRecordProxy'))(this, this.__mutator, dataID);\n      } else {\n        this._proxies[dataID] = status === NONEXISTENT ? null : undefined;\n      }\n    }\n    return this._proxies[dataID];\n  };\n\n  RelayRecordSourceProxy.prototype.getRoot = function getRoot() {\n    var root = this.get(ROOT_ID);\n    if (!root) {\n      root = this.create(ROOT_ID, ROOT_TYPE);\n    }\n    require('fbjs/lib/invariant')(root && root.getType() === ROOT_TYPE, 'RelayRecordSourceProxy#getRoot(): Expected the source to contain a ' + 'root record.');\n    return root;\n  };\n\n  return RelayRecordSourceProxy;\n}();\n\nmodule.exports = RelayRecordSourceProxy;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/relay-runtime/lib/RelayRecordSourceProxy.js\n ** module id = 95\n ** module chunks = 0\n **/","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @providesModule RelayRecordSourceSelectorProxy\n * \n * @format\n */\n\n'use strict';\n\nvar _classCallCheck3 = _interopRequireDefault(require('babel-runtime/helpers/classCallCheck'));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _require = require('./RelayStoreUtils'),\n    getStorageKey = _require.getStorageKey;\n\n/**\n * @internal\n *\n * A subclass of RecordSourceProxy that provides convenience methods for\n * accessing the root fields of a given query/mutation. These fields accept\n * complex arguments and it can be tedious to re-construct the correct sets of\n * arguments to pass to e.g. `getRoot().getLinkedRecord()`.\n */\nvar RelayRecordSourceSelectorProxy = function () {\n  function RelayRecordSourceSelectorProxy(recordSource, readSelector) {\n    (0, _classCallCheck3['default'])(this, RelayRecordSourceSelectorProxy);\n\n    this.__recordSource = recordSource;\n    this._readSelector = readSelector;\n  }\n\n  RelayRecordSourceSelectorProxy.prototype.create = function create(dataID, typeName) {\n    return this.__recordSource.create(dataID, typeName);\n  };\n\n  RelayRecordSourceSelectorProxy.prototype['delete'] = function _delete(dataID) {\n    this.__recordSource['delete'](dataID);\n  };\n\n  RelayRecordSourceSelectorProxy.prototype.get = function get(dataID) {\n    return this.__recordSource.get(dataID);\n  };\n\n  RelayRecordSourceSelectorProxy.prototype.getRoot = function getRoot() {\n    return this.__recordSource.getRoot();\n  };\n\n  RelayRecordSourceSelectorProxy.prototype._getRootField = function _getRootField(selector, fieldName, plural) {\n    var field = selector.node.selections.find(function (selection) {\n      return selection.kind === 'LinkedField' && selection.name === fieldName;\n    });\n    require('fbjs/lib/invariant')(field && field.kind === 'LinkedField', 'RelayRecordSourceSelectorProxy#getRootField(): Cannot find root ' + 'field `%s`, no such field is defined on GraphQL document `%s`.', fieldName, selector.node.name);\n    require('fbjs/lib/invariant')(field.plural === plural, 'RelayRecordSourceSelectorProxy#getRootField(): Expected root field ' + '`%s` to be %s.', fieldName, plural ? 'plural' : 'singular');\n    return field;\n  };\n\n  RelayRecordSourceSelectorProxy.prototype.getRootField = function getRootField(fieldName) {\n    var field = this._getRootField(this._readSelector, fieldName, false);\n    var storageKey = getStorageKey(field, this._readSelector.variables);\n    return this.getRoot().getLinkedRecord(storageKey);\n  };\n\n  RelayRecordSourceSelectorProxy.prototype.getPluralRootField = function getPluralRootField(fieldName) {\n    var field = this._getRootField(this._readSelector, fieldName, true);\n    var storageKey = getStorageKey(field, this._readSelector.variables);\n    return this.getRoot().getLinkedRecords(storageKey);\n  };\n\n  return RelayRecordSourceSelectorProxy;\n}();\n\nmodule.exports = RelayRecordSourceSelectorProxy;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/relay-runtime/lib/RelayRecordSourceSelectorProxy.js\n ** module id = 96\n ** module chunks = 0\n **/","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @providesModule normalizeRelayPayload\n * \n * @format\n */\n\n'use strict';\n\nvar _require = require('./RelayStoreUtils'),\n    ROOT_ID = _require.ROOT_ID,\n    ROOT_TYPE = _require.ROOT_TYPE;\n\nfunction normalizeRelayPayload(selector, payload, errors) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : { handleStrippedNulls: false };\n\n  var source = new (require('./RelayInMemoryRecordSource'))();\n  source.set(ROOT_ID, require('./RelayModernRecord').create(ROOT_ID, ROOT_TYPE));\n  var fieldPayloads = require('./RelayResponseNormalizer').normalize(source, selector, payload, options);\n  return {\n    errors: errors,\n    fieldPayloads: fieldPayloads,\n    source: source\n  };\n}\n\nmodule.exports = normalizeRelayPayload;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/relay-runtime/lib/normalizeRelayPayload.js\n ** module id = 97\n ** module chunks = 0\n **/","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @providesModule RelayResponseNormalizer\n * \n * @format\n */\n\n'use strict';\n\nvar _classCallCheck3 = _interopRequireDefault(require('babel-runtime/helpers/classCallCheck'));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _require = require('./RelayStoreUtils'),\n    getHandleFilterValues = _require.getHandleFilterValues,\n    getArgumentValues = _require.getArgumentValues,\n    getStorageKey = _require.getStorageKey,\n    TYPENAME_KEY = _require.TYPENAME_KEY;\n\nvar CONDITION = require('./RelayConcreteNode').CONDITION,\n    INLINE_FRAGMENT = require('./RelayConcreteNode').INLINE_FRAGMENT,\n    LINKED_FIELD = require('./RelayConcreteNode').LINKED_FIELD,\n    LINKED_HANDLE = require('./RelayConcreteNode').LINKED_HANDLE,\n    SCALAR_FIELD = require('./RelayConcreteNode').SCALAR_FIELD,\n    SCALAR_HANDLE = require('./RelayConcreteNode').SCALAR_HANDLE;\n\n/**\n * Normalizes the results of a query and standard GraphQL response, writing the\n * normalized records/fields into the given MutableRecordSource.\n *\n * If handleStrippedNulls is true, will replace fields on the Selector that\n * are not present in the response with null. Otherwise will leave fields unset.\n */\nfunction normalize(recordSource, selector, response) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : { handleStrippedNulls: false };\n  var dataID = selector.dataID,\n      node = selector.node,\n      variables = selector.variables;\n\n  var normalizer = new RelayResponseNormalizer(recordSource, variables, options);\n  return normalizer.normalizeResponse(node, dataID, response);\n}\n\n/**\n * @private\n *\n * Helper for handling payloads.\n */\n\nvar RelayResponseNormalizer = function () {\n  function RelayResponseNormalizer(recordSource, variables, options) {\n    (0, _classCallCheck3['default'])(this, RelayResponseNormalizer);\n\n    this._handleFieldPayloads = [];\n    this._recordSource = recordSource;\n    this._variables = variables;\n    this._handleStrippedNulls = options.handleStrippedNulls;\n  }\n\n  RelayResponseNormalizer.prototype.normalizeResponse = function normalizeResponse(node, dataID, data) {\n    var record = this._recordSource.get(dataID);\n    require('fbjs/lib/invariant')(record, 'RelayResponseNormalizer(): Expected root record `%s` to exist.', dataID);\n    this._traverseSelections(node.selections, record, data);\n    return this._handleFieldPayloads;\n  };\n\n  RelayResponseNormalizer.prototype._getVariableValue = function _getVariableValue(name) {\n    require('fbjs/lib/invariant')(this._variables.hasOwnProperty(name), 'RelayResponseNormalizer(): Undefined variable `%s`.', name);\n    return this._variables[name];\n  };\n\n  RelayResponseNormalizer.prototype._getRecordType = function _getRecordType(data) {\n    var typeName = data[TYPENAME_KEY];\n    require('fbjs/lib/invariant')(typeName != null, 'RelayResponseNormalizer(): Expected a typename for record `%s`.', JSON.stringify(data, null, 2));\n    return typeName;\n  };\n\n  RelayResponseNormalizer.prototype._traverseSelections = function _traverseSelections(selections, record, data) {\n    var _this = this;\n\n    selections.forEach(function (selection) {\n      if (selection.kind === SCALAR_FIELD || selection.kind === LINKED_FIELD) {\n        _this._normalizeField(selection, record, data);\n      } else if (selection.kind === CONDITION) {\n        var conditionValue = _this._getVariableValue(selection.condition);\n        if (conditionValue === selection.passingValue) {\n          _this._traverseSelections(selection.selections, record, data);\n        }\n      } else if (selection.kind === INLINE_FRAGMENT) {\n        var typeName = require('./RelayModernRecord').getType(record);\n        if (typeName === selection.type) {\n          _this._traverseSelections(selection.selections, record, data);\n        }\n      } else if (selection.kind === LINKED_HANDLE || selection.kind === SCALAR_HANDLE) {\n        var args = selection.args ? getArgumentValues(selection.args, _this._variables) : {};\n\n        var fieldKey = require('./formatStorageKey')(selection.name, args);\n        var handleKey = require('./getRelayHandleKey')(selection.handle, selection.key, selection.name);\n        if (selection.filters) {\n          var filterValues = getHandleFilterValues(selection.args || [], selection.filters, _this._variables);\n          handleKey = require('./formatStorageKey')(handleKey, filterValues);\n        }\n        _this._handleFieldPayloads.push({\n          args: args,\n          dataID: require('./RelayModernRecord').getDataID(record),\n          fieldKey: fieldKey,\n          handle: selection.handle,\n          handleKey: handleKey\n        });\n      } else {\n        require('fbjs/lib/invariant')(false, 'RelayResponseNormalizer(): Unexpected ast kind `%s`.', selection.kind);\n      }\n    });\n  };\n\n  RelayResponseNormalizer.prototype._normalizeField = function _normalizeField(selection, record, data) {\n    require('fbjs/lib/invariant')(typeof data === 'object' && data, 'writeField(): Expected data for field `%s` to be an object.', selection.name);\n    var responseKey = selection.alias || selection.name;\n    var storageKey = getStorageKey(selection, this._variables);\n    var fieldValue = data[responseKey];\n    if (fieldValue == null) {\n      if (fieldValue === undefined && !this._handleStrippedNulls) {\n        // If we're not stripping nulls, undefined fields are unset\n        return;\n      }\n      if (process.env.NODE_ENV !== 'production') {\n        require('fbjs/lib/warning')(Object.prototype.hasOwnProperty.call(data, responseKey), 'RelayResponseNormalizer(): Payload did not contain a value ' + 'for field `%s: %s`. Check that you are parsing with the same ' + 'query that was used to fetch the payload.', responseKey, storageKey);\n      }\n      require('./RelayModernRecord').setValue(record, storageKey, null);\n      return;\n    }\n\n    if (selection.kind === SCALAR_FIELD) {\n      require('./RelayModernRecord').setValue(record, storageKey, fieldValue);\n    } else if (selection.plural) {\n      this._normalizePluralLink(selection, record, storageKey, fieldValue);\n    } else {\n      this._normalizeLink(selection, record, storageKey, fieldValue);\n    }\n  };\n\n  RelayResponseNormalizer.prototype._normalizeLink = function _normalizeLink(field, record, storageKey, fieldValue) {\n    require('fbjs/lib/invariant')(typeof fieldValue === 'object' && fieldValue, 'RelayResponseNormalizer: Expected data for field `%s` to be an object.', storageKey);\n    var nextID = fieldValue.id ||\n    // Reuse previously generated client IDs\n    require('./RelayModernRecord').getLinkedRecordID(record, storageKey) || require('./generateRelayClientID')(require('./RelayModernRecord').getDataID(record), storageKey);\n    require('fbjs/lib/invariant')(typeof nextID === 'string', 'RelayResponseNormalizer: Expected id on field `%s` to be a string.', storageKey);\n    require('./RelayModernRecord').setLinkedRecordID(record, storageKey, nextID);\n    var nextRecord = this._recordSource.get(nextID);\n    if (!nextRecord) {\n      var typeName = field.concreteType || this._getRecordType(fieldValue);\n      nextRecord = require('./RelayModernRecord').create(nextID, typeName);\n      this._recordSource.set(nextID, nextRecord);\n    } else if (process.env.NODE_ENV !== 'production') {\n      this._validateRecordType(nextRecord, field, fieldValue);\n    }\n    this._traverseSelections(field.selections, nextRecord, fieldValue);\n  };\n\n  RelayResponseNormalizer.prototype._normalizePluralLink = function _normalizePluralLink(field, record, storageKey, fieldValue) {\n    var _this2 = this;\n\n    require('fbjs/lib/invariant')(Array.isArray(fieldValue), 'RelayResponseNormalizer: Expected data for field `%s` to be an array ' + 'of objects.', storageKey);\n    var prevIDs = require('./RelayModernRecord').getLinkedRecordIDs(record, storageKey);\n    var nextIDs = [];\n    fieldValue.forEach(function (item, nextIndex) {\n      // validate response data\n      if (item == null) {\n        nextIDs.push(item);\n        return;\n      }\n      require('fbjs/lib/invariant')(typeof item === 'object', 'RelayResponseNormalizer: Expected elements for field `%s` to be ' + 'objects.', storageKey);\n\n      var nextID = item.id || prevIDs && prevIDs[nextIndex] || // Reuse previously generated client IDs\n      require('./generateRelayClientID')(require('./RelayModernRecord').getDataID(record), storageKey, nextIndex);\n      require('fbjs/lib/invariant')(typeof nextID === 'string', 'RelayResponseNormalizer: Expected id of elements of field `%s` to ' + 'be strings.', storageKey);\n\n      nextIDs.push(nextID);\n      var nextRecord = _this2._recordSource.get(nextID);\n      if (!nextRecord) {\n        var typeName = field.concreteType || _this2._getRecordType(item);\n        nextRecord = require('./RelayModernRecord').create(nextID, typeName);\n        _this2._recordSource.set(nextID, nextRecord);\n      } else if (process.env.NODE_ENV !== 'production') {\n        _this2._validateRecordType(nextRecord, field, item);\n      }\n      _this2._traverseSelections(field.selections, nextRecord, item);\n    });\n    require('./RelayModernRecord').setLinkedRecordIDs(record, storageKey, nextIDs);\n  };\n\n  /**\n   * Warns if the type of the record does not match the type of the field/payload.\n   */\n\n\n  RelayResponseNormalizer.prototype._validateRecordType = function _validateRecordType(record, field, payload) {\n    var typeName = field.concreteType || this._getRecordType(payload);\n    require('fbjs/lib/warning')(require('./RelayModernRecord').getType(record) === typeName, 'RelayResponseNormalizer: Invalid record `%s`. Expected %s to be ' + 'be consistent, but the record was assigned conflicting types `%s` ' + 'and `%s`. The GraphQL server likely violated the globally unique ' + 'id requirement by returning the same id for different objects.', require('./RelayModernRecord').getDataID(record), TYPENAME_KEY, require('./RelayModernRecord').getType(record), typeName);\n  };\n\n  return RelayResponseNormalizer;\n}();\n\n// eslint-disable-next-line no-func-assign\n\n\nnormalize = require('./RelayProfiler').instrument('RelayResponseNormalizer.normalize', normalize);\n\nmodule.exports = { normalize: normalize };\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/relay-runtime/lib/RelayResponseNormalizer.js\n ** module id = 98\n ** module chunks = 0\n **/","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @providesModule formatStorageKey\n * \n * @format\n */\n\n'use strict';\n\n/**\n * Given a `fieldName` (eg. \"foo\") and an object representing arguments and\n * values (eg. `{first: 10, orberBy: \"name\"}`) returns a unique storage key\n * (ie. `foo{\"first\":10,\"orderBy\":\"name\"}`).\n */\nfunction formatStorageKey(fieldName, argsWithValues) {\n  if (!argsWithValues) {\n    return fieldName;\n  }\n  var filtered = null;\n  for (var argName in argsWithValues) {\n    if (argsWithValues.hasOwnProperty(argName)) {\n      var value = argsWithValues[argName];\n      if (value != null) {\n        if (!filtered) {\n          filtered = {};\n        }\n        filtered[argName] = value;\n      }\n    }\n  }\n  return filtered ? fieldName + require('./stableJSONStringify')(filtered) : fieldName;\n}\n\nmodule.exports = formatStorageKey;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/relay-runtime/lib/formatStorageKey.js\n ** module id = 99\n ** module chunks = 0\n **/","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @providesModule RelayProfiler\n * \n * @format\n */\n\n'use strict';\n\nvar aggregateHandlersByName = {\n  '*': []\n};\nvar profileHandlersByName = {\n  '*': []\n};\n\nvar NOT_INVOKED = {};\nvar defaultProfiler = { stop: require('fbjs/lib/emptyFunction') };\nvar shouldInstrument = function shouldInstrument(name) {\n  if (process.env.NODE_ENV !== 'production') {\n    return true;\n  }\n  return name.charAt(0) !== '@';\n};\n\n/**\n * @public\n *\n * Instruments methods to allow profiling various parts of Relay. Profiling code\n * in Relay consists of three steps:\n *\n *  - Instrument the function to be profiled.\n *  - Attach handlers to the instrumented function.\n *  - Run the code which triggers the handlers.\n *\n * Handlers attached to instrumented methods are called with an instrumentation\n * name and a callback that must be synchronously executed:\n *\n *   instrumentedMethod.attachHandler(function(name, callback) {\n *     const start = performance.now();\n *     callback();\n *     console.log('Duration', performance.now() - start);\n *   });\n *\n * Handlers for profiles are callbacks that return a stop method:\n *\n *   RelayProfiler.attachProfileHandler('profileName', (name, state) => {\n *     const start = performance.now();\n *     return function stop(name, state) {\n *       console.log(`Duration (${name})`, performance.now() - start);\n *     }\n *   });\n *\n * In order to reduce the impact on performance in production, instrumented\n * methods and profilers with names that begin with `@` will only be measured\n * if `__DEV__` is true. This should be used for very hot functions.\n */\nvar RelayProfiler = {\n  /**\n   * Instruments methods on a class or object. This re-assigns the method in\n   * order to preserve function names in stack traces (which are detected by\n   * modern debuggers via heuristics). Example usage:\n   *\n   *   const RelayStore = { primeCache: function() {...} };\n   *   RelayProfiler.instrumentMethods(RelayStore, {\n   *     primeCache: 'RelayStore.primeCache'\n   *   });\n   *\n   *   RelayStore.primeCache.attachHandler(...);\n   *\n   * As a result, the methods will be replaced by wrappers that provide the\n   * `attachHandler` and `detachHandler` methods.\n   */\n  instrumentMethods: function instrumentMethods(object, names) {\n    for (var _key in names) {\n      if (names.hasOwnProperty(_key)) {\n        object[_key] = RelayProfiler.instrument(names[_key], object[_key]);\n      }\n    }\n  },\n\n\n  /**\n   * Wraps the supplied function with one that provides the `attachHandler` and\n   * `detachHandler` methods. Example usage:\n   *\n   *   const printRelayQuery =\n   *     RelayProfiler.instrument('printRelayQuery', printRelayQuery);\n   *\n   *   printRelayQuery.attachHandler(...);\n   *\n   * NOTE: The instrumentation assumes that no handlers are attached or detached\n   * in the course of executing another handler.\n   */\n  instrument: function instrument(name, originalFunction) {\n    if (!shouldInstrument(name)) {\n      originalFunction.attachHandler = require('fbjs/lib/emptyFunction');\n      originalFunction.detachHandler = require('fbjs/lib/emptyFunction');\n      return originalFunction;\n    }\n    if (!aggregateHandlersByName.hasOwnProperty(name)) {\n      aggregateHandlersByName[name] = [];\n    }\n    var catchallHandlers = aggregateHandlersByName['*'];\n    var aggregateHandlers = aggregateHandlersByName[name];\n    var handlers = [];\n    var contexts = [];\n    var invokeHandlers = function invokeHandlers() {\n      var context = contexts[contexts.length - 1];\n      if (context[0]) {\n        context[0]--;\n        catchallHandlers[context[0]](name, invokeHandlers);\n      } else if (context[1]) {\n        context[1]--;\n        aggregateHandlers[context[1]](name, invokeHandlers);\n      } else if (context[2]) {\n        context[2]--;\n        handlers[context[2]](name, invokeHandlers);\n      } else {\n        context[5] = originalFunction.apply(context[3], context[4]);\n      }\n    };\n    var instrumentedCallback = function instrumentedCallback() {\n      var returnValue = void 0;\n      if (aggregateHandlers.length === 0 && handlers.length === 0 && catchallHandlers.length === 0) {\n        returnValue = originalFunction.apply(this, arguments);\n      } else {\n        contexts.push([catchallHandlers.length, aggregateHandlers.length, handlers.length, this, arguments, NOT_INVOKED]);\n        invokeHandlers();\n        var context = contexts.pop();\n        returnValue = context[5];\n        if (returnValue === NOT_INVOKED) {\n          throw new Error('RelayProfiler: Handler did not invoke original function.');\n        }\n      }\n      return returnValue;\n    };\n    instrumentedCallback.attachHandler = function (handler) {\n      handlers.push(handler);\n    };\n    instrumentedCallback.detachHandler = function (handler) {\n      require('fbjs/lib/removeFromArray')(handlers, handler);\n    };\n    instrumentedCallback.displayName = '(instrumented ' + name + ')';\n    return instrumentedCallback;\n  },\n\n\n  /**\n   * Attaches a handler to all methods instrumented with the supplied name.\n   *\n   *   function createRenderer() {\n   *     return RelayProfiler.instrument('render', function() {...});\n   *   }\n   *   const renderA = createRenderer();\n   *   const renderB = createRenderer();\n   *\n   *   // Only profiles `renderA`.\n   *   renderA.attachHandler(...);\n   *\n   *   // Profiles both `renderA` and `renderB`.\n   *   RelayProfiler.attachAggregateHandler('render', ...);\n   *\n   */\n  attachAggregateHandler: function attachAggregateHandler(name, handler) {\n    if (shouldInstrument(name)) {\n      if (!aggregateHandlersByName.hasOwnProperty(name)) {\n        aggregateHandlersByName[name] = [];\n      }\n      aggregateHandlersByName[name].push(handler);\n    }\n  },\n\n\n  /**\n   * Detaches a handler attached via `attachAggregateHandler`.\n   */\n  detachAggregateHandler: function detachAggregateHandler(name, handler) {\n    if (shouldInstrument(name)) {\n      if (aggregateHandlersByName.hasOwnProperty(name)) {\n        require('fbjs/lib/removeFromArray')(aggregateHandlersByName[name], handler);\n      }\n    }\n  },\n\n\n  /**\n   * Instruments profiling for arbitrarily asynchronous code by a name.\n   *\n   *   const timerProfiler = RelayProfiler.profile('timeout');\n   *   setTimeout(function() {\n   *     timerProfiler.stop();\n   *   }, 1000);\n   *\n   *   RelayProfiler.attachProfileHandler('timeout', ...);\n   *\n   * Arbitrary state can also be passed into `profile` as a second argument. The\n   * attached profile handlers will receive this as the second argument.\n   */\n  profile: function profile(name, state) {\n    var hasCatchAllHandlers = profileHandlersByName['*'].length > 0;\n    var hasNamedHandlers = profileHandlersByName.hasOwnProperty(name);\n    if (hasNamedHandlers || hasCatchAllHandlers) {\n      var profileHandlers = hasNamedHandlers && hasCatchAllHandlers ? profileHandlersByName[name].concat(profileHandlersByName['*']) : hasNamedHandlers ? profileHandlersByName[name] : profileHandlersByName['*'];\n      var stopHandlers = void 0;\n      for (var ii = profileHandlers.length - 1; ii >= 0; ii--) {\n        var profileHandler = profileHandlers[ii];\n        var stopHandler = profileHandler(name, state);\n        stopHandlers = stopHandlers || [];\n        stopHandlers.unshift(stopHandler);\n      }\n      return {\n        stop: function stop() {\n          if (stopHandlers) {\n            stopHandlers.forEach(function (stopHandler) {\n              return stopHandler();\n            });\n          }\n        }\n      };\n    }\n    return defaultProfiler;\n  },\n\n\n  /**\n   * Attaches a handler to profiles with the supplied name. You can also\n   * attach to the special name '*' which is a catch all.\n   */\n  attachProfileHandler: function attachProfileHandler(name, handler) {\n    if (shouldInstrument(name)) {\n      if (!profileHandlersByName.hasOwnProperty(name)) {\n        profileHandlersByName[name] = [];\n      }\n      profileHandlersByName[name].push(handler);\n    }\n  },\n\n\n  /**\n   * Detaches a handler attached via `attachProfileHandler`.\n   */\n  detachProfileHandler: function detachProfileHandler(name, handler) {\n    if (shouldInstrument(name)) {\n      if (profileHandlersByName.hasOwnProperty(name)) {\n        require('fbjs/lib/removeFromArray')(profileHandlersByName[name], handler);\n      }\n    }\n  }\n};\n\nmodule.exports = RelayProfiler;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/relay-runtime/lib/RelayProfiler.js\n ** module id = 100\n ** module chunks = 0\n **/","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @providesModule RelayRecordProxy\n * \n * @format\n */\n\n'use strict';\n\nvar _classCallCheck3 = _interopRequireDefault(require('babel-runtime/helpers/classCallCheck'));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\n/**\n * @internal\n *\n * A helper class for manipulating a given record from a record source via an\n * imperative/OO-style API.\n */\nvar RelayRecordProxy = function () {\n  function RelayRecordProxy(source, mutator, dataID) {\n    (0, _classCallCheck3['default'])(this, RelayRecordProxy);\n\n    this._dataID = dataID;\n    this._mutator = mutator;\n    this._source = source;\n  }\n\n  RelayRecordProxy.prototype.copyFieldsFrom = function copyFieldsFrom(source) {\n    this._mutator.copyFields(source.getDataID(), this._dataID);\n  };\n\n  RelayRecordProxy.prototype.getDataID = function getDataID() {\n    return this._dataID;\n  };\n\n  RelayRecordProxy.prototype.getType = function getType() {\n    var type = this._mutator.getType(this._dataID);\n    require('fbjs/lib/invariant')(type != null, 'RelayRecordProxy: Cannot get the type of deleted record `%s`.', this._dataID);\n    return type;\n  };\n\n  RelayRecordProxy.prototype.getValue = function getValue(name, args) {\n    var storageKey = args ? require('./formatStorageKey')(name, args) : name;\n    return this._mutator.getValue(this._dataID, storageKey);\n  };\n\n  RelayRecordProxy.prototype.setValue = function setValue(value, name, args) {\n    require('fbjs/lib/invariant')(isValidLeafValue(value), 'RelayRecordProxy#setValue(): Expected a scalar or array of scalars, ' + 'got `%s`.', JSON.stringify(value));\n    var storageKey = args ? require('./formatStorageKey')(name, args) : name;\n    this._mutator.setValue(this._dataID, storageKey, value);\n    return this;\n  };\n\n  RelayRecordProxy.prototype.getLinkedRecord = function getLinkedRecord(name, args) {\n    var storageKey = args ? require('./formatStorageKey')(name, args) : name;\n    var linkedID = this._mutator.getLinkedRecordID(this._dataID, storageKey);\n    return linkedID != null ? this._source.get(linkedID) : linkedID;\n  };\n\n  RelayRecordProxy.prototype.setLinkedRecord = function setLinkedRecord(record, name, args) {\n    require('fbjs/lib/invariant')(record instanceof RelayRecordProxy, 'RelayRecordProxy#setLinkedRecord(): Expected a record, got `%s`.', record);\n    var storageKey = args ? require('./formatStorageKey')(name, args) : name;\n    var linkedID = record.getDataID();\n    this._mutator.setLinkedRecordID(this._dataID, storageKey, linkedID);\n    return this;\n  };\n\n  RelayRecordProxy.prototype.getOrCreateLinkedRecord = function getOrCreateLinkedRecord(name, typeName, args) {\n    var linkedRecord = this.getLinkedRecord(name, args);\n    if (!linkedRecord) {\n      var storageKey = args ? require('./formatStorageKey')(name, args) : name;\n      var clientID = require('./generateRelayClientID')(this.getDataID(), storageKey);\n      linkedRecord = this._source.create(clientID, typeName);\n      this.setLinkedRecord(linkedRecord, name, args);\n    }\n    return linkedRecord;\n  };\n\n  RelayRecordProxy.prototype.getLinkedRecords = function getLinkedRecords(name, args) {\n    var _this = this;\n\n    var storageKey = args ? require('./formatStorageKey')(name, args) : name;\n    var linkedIDs = this._mutator.getLinkedRecordIDs(this._dataID, storageKey);\n    if (linkedIDs == null) {\n      return linkedIDs;\n    }\n    return linkedIDs.map(function (linkedID) {\n      return linkedID != null ? _this._source.get(linkedID) : linkedID;\n    });\n  };\n\n  RelayRecordProxy.prototype.setLinkedRecords = function setLinkedRecords(records, name, args) {\n    require('fbjs/lib/invariant')(Array.isArray(records), 'RelayRecordProxy#setLinkedRecords(): Expected records to be an array, got `%s`.', records);\n    var storageKey = args ? require('./formatStorageKey')(name, args) : name;\n    var linkedIDs = records.map(function (record) {\n      return record && record.getDataID();\n    });\n    this._mutator.setLinkedRecordIDs(this._dataID, storageKey, linkedIDs);\n    return this;\n  };\n\n  return RelayRecordProxy;\n}();\n\nfunction isValidLeafValue(value) {\n  return value == null || typeof value !== 'object' || Array.isArray(value) && value.every(isValidLeafValue);\n}\n\nmodule.exports = RelayRecordProxy;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/relay-runtime/lib/RelayRecordProxy.js\n ** module id = 102\n ** module chunks = 0\n **/","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @providesModule RelayReader\n * \n * @format\n */\n\n'use strict';\n\nvar _classCallCheck3 = _interopRequireDefault(require('babel-runtime/helpers/classCallCheck'));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar CONDITION = require('./RelayConcreteNode').CONDITION,\n    FRAGMENT_SPREAD = require('./RelayConcreteNode').FRAGMENT_SPREAD,\n    INLINE_FRAGMENT = require('./RelayConcreteNode').INLINE_FRAGMENT,\n    LINKED_FIELD = require('./RelayConcreteNode').LINKED_FIELD,\n    SCALAR_FIELD = require('./RelayConcreteNode').SCALAR_FIELD;\n\nvar FRAGMENTS_KEY = require('./RelayStoreUtils').FRAGMENTS_KEY,\n    ID_KEY = require('./RelayStoreUtils').ID_KEY,\n    getArgumentValues = require('./RelayStoreUtils').getArgumentValues,\n    getStorageKey = require('./RelayStoreUtils').getStorageKey;\n\nfunction read(recordSource, selector) {\n  var dataID = selector.dataID,\n      node = selector.node,\n      variables = selector.variables;\n\n  var reader = new RelayReader(recordSource, variables);\n  return reader.read(node, dataID);\n}\n\n/**\n * @private\n */\n\nvar RelayReader = function () {\n  function RelayReader(recordSource, variables) {\n    (0, _classCallCheck3['default'])(this, RelayReader);\n\n    this._recordSource = recordSource;\n    this._seenRecords = {};\n    this._variables = variables;\n  }\n\n  RelayReader.prototype.read = function read(node, dataID) {\n    var data = this._traverse(node, dataID, null);\n    return {\n      data: data,\n      dataID: dataID,\n      node: node,\n      seenRecords: this._seenRecords,\n      variables: this._variables\n    };\n  };\n\n  RelayReader.prototype._traverse = function _traverse(node, dataID, prevData) {\n    var record = this._recordSource.get(dataID);\n    this._seenRecords[dataID] = record;\n    if (record == null) {\n      return record;\n    }\n    var data = prevData || {};\n    this._traverseSelections(node.selections, record, data);\n    return data;\n  };\n\n  RelayReader.prototype._getVariableValue = function _getVariableValue(name) {\n    require('fbjs/lib/invariant')(this._variables.hasOwnProperty(name), 'RelayReader(): Undefined variable `%s`.', name);\n    return this._variables[name];\n  };\n\n  RelayReader.prototype._traverseSelections = function _traverseSelections(selections, record, data) {\n    var _this = this;\n\n    selections.forEach(function (selection) {\n      if (selection.kind === SCALAR_FIELD) {\n        _this._readScalar(selection, record, data);\n      } else if (selection.kind === LINKED_FIELD) {\n        if (selection.plural) {\n          _this._readPluralLink(selection, record, data);\n        } else {\n          _this._readLink(selection, record, data);\n        }\n      } else if (selection.kind === CONDITION) {\n        var conditionValue = _this._getVariableValue(selection.condition);\n        if (conditionValue === selection.passingValue) {\n          _this._traverseSelections(selection.selections, record, data);\n        }\n      } else if (selection.kind === INLINE_FRAGMENT) {\n        var typeName = require('./RelayModernRecord').getType(record);\n        if (typeName != null && typeName === selection.type) {\n          _this._traverseSelections(selection.selections, record, data);\n        }\n      } else if (selection.kind === FRAGMENT_SPREAD) {\n        _this._createFragmentPointer(selection, record, data);\n      } else {\n        require('fbjs/lib/invariant')(false, 'RelayReader(): Unexpected ast kind `%s`.', selection.kind);\n      }\n    });\n  };\n\n  RelayReader.prototype._readScalar = function _readScalar(field, record, data) {\n    var applicationName = field.alias || field.name;\n    var storageKey = getStorageKey(field, this._variables);\n    var value = require('./RelayModernRecord').getValue(record, storageKey);\n    data[applicationName] = value;\n  };\n\n  RelayReader.prototype._readLink = function _readLink(field, record, data) {\n    var applicationName = field.alias || field.name;\n    var storageKey = getStorageKey(field, this._variables);\n    var linkedID = require('./RelayModernRecord').getLinkedRecordID(record, storageKey);\n\n    if (linkedID == null) {\n      data[applicationName] = linkedID;\n      return;\n    }\n\n    var prevData = data[applicationName];\n    require('fbjs/lib/invariant')(prevData == null || typeof prevData === 'object', 'RelayReader(): Expected data for field `%s` on record `%s` ' + 'to be an object, got `%s`.', applicationName, require('./RelayModernRecord').getDataID(record), prevData);\n    data[applicationName] = this._traverse(field, linkedID, prevData);\n  };\n\n  RelayReader.prototype._readPluralLink = function _readPluralLink(field, record, data) {\n    var _this2 = this;\n\n    var applicationName = field.alias || field.name;\n    var storageKey = getStorageKey(field, this._variables);\n    var linkedIDs = require('./RelayModernRecord').getLinkedRecordIDs(record, storageKey);\n\n    if (linkedIDs == null) {\n      data[applicationName] = linkedIDs;\n      return;\n    }\n\n    var prevData = data[applicationName];\n    require('fbjs/lib/invariant')(prevData == null || Array.isArray(prevData), 'RelayReader(): Expected data for field `%s` on record `%s` ' + 'to be an array, got `%s`.', applicationName, require('./RelayModernRecord').getDataID(record), prevData);\n    var linkedArray = prevData || [];\n    linkedIDs.forEach(function (linkedID, nextIndex) {\n      if (linkedID == null) {\n        linkedArray[nextIndex] = linkedID;\n        return;\n      }\n      var prevItem = linkedArray[nextIndex];\n      require('fbjs/lib/invariant')(prevItem == null || typeof prevItem === 'object', 'RelayReader(): Expected data for field `%s` on record `%s` ' + 'to be an object, got `%s`.', applicationName, require('./RelayModernRecord').getDataID(record), prevItem);\n      var linkedItem = _this2._traverse(field, linkedID, prevItem);\n      linkedArray[nextIndex] = linkedItem;\n    });\n    data[applicationName] = linkedArray;\n  };\n\n  RelayReader.prototype._createFragmentPointer = function _createFragmentPointer(fragmentSpread, record, data) {\n    var fragmentPointers = data[FRAGMENTS_KEY];\n    if (!fragmentPointers) {\n      fragmentPointers = data[FRAGMENTS_KEY] = {};\n    }\n    require('fbjs/lib/invariant')(typeof fragmentPointers === 'object' && fragmentPointers, 'RelayReader: Expected fragment spread data to be an object, got `%s`.', fragmentPointers);\n    data[ID_KEY] = data[ID_KEY] || require('./RelayModernRecord').getDataID(record);\n    var variables = fragmentSpread.args ? getArgumentValues(fragmentSpread.args, this._variables) : {};\n    fragmentPointers[fragmentSpread.name] = variables;\n  };\n\n  return RelayReader;\n}();\n\nmodule.exports = { read: read };\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/relay-runtime/lib/RelayReader.js\n ** module id = 103\n ** module chunks = 0\n **/","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @providesModule RelayCore\n * \n * @format\n */\n\n'use strict';\n\nvar _require = require('./RelayModernGraphQLTag'),\n    getFragment = _require.getFragment,\n    getOperation = _require.getOperation;\n\nvar _require2 = require('./RelayModernOperationSelector'),\n    createOperationSelector = _require2.createOperationSelector;\n\nvar _require3 = require('./RelayModernSelector'),\n    areEqualSelectors = _require3.areEqualSelectors,\n    getDataIDsFromObject = _require3.getDataIDsFromObject,\n    getSelector = _require3.getSelector,\n    getSelectorList = _require3.getSelectorList,\n    getSelectorsFromObject = _require3.getSelectorsFromObject,\n    getVariablesFromObject = _require3.getVariablesFromObject;\n\nfunction createFragmentSpecResolver(context, containerName, fragments, props, callback) {\n  if (process.env.NODE_ENV !== 'production') {\n    var fragmentNames = Object.keys(fragments);\n    fragmentNames.forEach(function (fragmentName) {\n      var propValue = props[fragmentName];\n      require('fbjs/lib/warning')(propValue !== undefined, 'createFragmentSpecResolver: Expected prop `%s` to be supplied to `%s`, but ' + 'got `undefined`. Pass an explicit `null` if this is intentional.', fragmentName, containerName);\n    });\n  }\n\n  return new (require('./RelayModernFragmentSpecResolver'))(context, fragments, props, callback);\n}\n\nmodule.exports = {\n  areEqualSelectors: areEqualSelectors,\n  createFragmentSpecResolver: createFragmentSpecResolver,\n  createOperationSelector: createOperationSelector,\n  getDataIDsFromObject: getDataIDsFromObject,\n  getFragment: getFragment,\n  getOperation: getOperation,\n  getSelector: getSelector,\n  getSelectorList: getSelectorList,\n  getSelectorsFromObject: getSelectorsFromObject,\n  getVariablesFromObject: getVariablesFromObject\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/relay-runtime/lib/RelayCore.js\n ** module id = 104\n ** module chunks = 0\n **/","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @providesModule RelayModernGraphQLTag\n * \n * @format\n */\n\n'use strict';\n\n/**\n * Runtime function to correspond to the `graphql` tagged template function.\n * All calls to this function should be transformed by the plugin.\n */\n\n\n// The type of a graphql`...` tagged template expression.\nfunction graphql(strings) {\n  require('fbjs/lib/invariant')(false, 'graphql: Unexpected invocation at runtime. Either the Babel transform ' + 'was not set up, or it failed to identify this call site. Make sure it ' + 'is being used verbatim as `graphql`.');\n}\n\nfunction getNode(taggedNode) {\n  var fn = typeof taggedNode === 'function' ? taggedNode : taggedNode.modern;\n  // Support for classic raw nodes (used in test mock)\n  if (typeof fn !== 'function') {\n    return taggedNode;\n  }\n  return fn();\n}\n\nfunction getFragment(taggedNode) {\n  var fragment = getNode(taggedNode);\n  require('fbjs/lib/invariant')(typeof fragment === 'object' && fragment !== null && fragment.kind === 'Fragment', 'RelayModernGraphQLTag: Expected a fragment, got `%s`.', JSON.stringify(fragment));\n  return fragment;\n}\n\nfunction getOperation(taggedNode) {\n  var operation = getNode(taggedNode);\n  require('fbjs/lib/invariant')(typeof operation === 'object' && operation !== null && operation.kind === 'Operation', 'RelayModernGraphQLTag: Expected an operation, got `%s`.', JSON.stringify(operation));\n  return operation;\n}\n\nmodule.exports = {\n  getFragment: getFragment,\n  getOperation: getOperation,\n  graphql: graphql\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/relay-runtime/lib/RelayModernGraphQLTag.js\n ** module id = 105\n ** module chunks = 0\n **/","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @providesModule RelayModernOperationSelector\n * \n * @format\n */\n\n'use strict';\n\nvar _require = require('./RelayConcreteVariables'),\n    getOperationVariables = _require.getOperationVariables;\n\nvar _require2 = require('./RelayStoreUtils'),\n    ROOT_ID = _require2.ROOT_ID;\n\n/**\n * Creates an instance of the `OperationSelector` type defined in\n * `RelayStoreTypes` given an operation and some variables. The input variables\n * are filtered to exclude variables that do not match defined arguments on the\n * operation, and default values are populated for null values.\n */\nfunction createOperationSelector(operation, variables) {\n  var operationVariables = getOperationVariables(operation, variables);\n  var dataID = ROOT_ID;\n  return {\n    fragment: {\n      dataID: dataID,\n      node: operation.fragment,\n      variables: operationVariables\n    },\n    node: operation,\n    root: {\n      dataID: dataID,\n      node: operation,\n      variables: operationVariables\n    },\n    variables: operationVariables\n  };\n}\n\nmodule.exports = {\n  createOperationSelector: createOperationSelector\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/relay-runtime/lib/RelayModernOperationSelector.js\n ** module id = 106\n ** module chunks = 0\n **/","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @providesModule RelayConcreteVariables\n * @format\n */\n\n'use strict';\n\nvar _extends3 = _interopRequireDefault(require('babel-runtime/helpers/extends'));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\n/**\n * Determines the variables that are in scope for a fragment given the variables\n * in scope at the root query as well as any arguments applied at the fragment\n * spread via `@arguments`.\n *\n * Note that this is analagous to determining function arguments given a function call.\n */\nfunction getFragmentVariables(fragment, rootVariables, argumentVariables) {\n  var variables = void 0;\n  fragment.argumentDefinitions.forEach(function (definition) {\n    if (argumentVariables.hasOwnProperty(definition.name)) {\n      return;\n    }\n    variables = variables || (0, _extends3['default'])({}, argumentVariables);\n    switch (definition.kind) {\n      case 'LocalArgument':\n        variables[definition.name] = definition.defaultValue;\n        break;\n      case 'RootArgument':\n        if (!rootVariables.hasOwnProperty(definition.name)) {\n          /*\n           * A temporary fix to mute false alarm in cases where the root argument is stripped\n           * off by the compiler due to a conditional directive, we do not need this argument\n           * when tryiny to read the data from the store.\n           */\n          break;\n        }\n        variables[definition.name] = rootVariables[definition.name];\n        break;\n      default:\n        require('fbjs/lib/invariant')(false, 'RelayConcreteVariables: Unexpected node kind `%s` in fragment `%s`.', definition.kind, fragment.name);\n    }\n  });\n  return variables || argumentVariables;\n}\n\n/**\n * Determines the variables that are in scope for a given operation given values\n * for some/all of its arguments. Extraneous input variables are filtered from\n * the output, and missing variables are set to default values (if given in the\n * operation's definition).\n */\nfunction getOperationVariables(operation, variables) {\n  var operationVariables = {};\n  operation.argumentDefinitions.forEach(function (def) {\n    var value = def.defaultValue;\n    if (variables[def.name] != null) {\n      value = variables[def.name];\n    }\n    operationVariables[def.name] = value;\n    if (process.env.NODE_ENV !== 'production') {\n      require('fbjs/lib/warning')(value != null || def.type[def.type.length - 1] !== '!', 'RelayConcreteVariables: Expected a value for non-nullable variable ' + '`$%s: %s` on operation `%s`, got `%s`. Make sure you supply a ' + 'value for all non-nullable arguments.', def.name, def.type, operation.name, JSON.stringify(value));\n    }\n  });\n  return operationVariables;\n}\n\nmodule.exports = {\n  getFragmentVariables: getFragmentVariables,\n  getOperationVariables: getOperationVariables\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/relay-runtime/lib/RelayConcreteVariables.js\n ** module id = 107\n ** module chunks = 0\n **/","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @providesModule RelayModernSelector\n * \n * @format\n */\n\n'use strict';\n\nvar _require = require('./RelayConcreteVariables'),\n    getFragmentVariables = _require.getFragmentVariables;\n\nvar _require2 = require('./RelayStoreUtils'),\n    FRAGMENTS_KEY = _require2.FRAGMENTS_KEY,\n    ID_KEY = _require2.ID_KEY;\n\n/**\n * @public\n *\n * Given the result `item` from a parent that fetched `fragment`, creates a\n * selector that can be used to read the results of that fragment for that item.\n *\n * Example:\n *\n * Given two fragments as follows:\n *\n * ```\n * fragment Parent on User {\n *   id\n *   ...Child\n * }\n * fragment Child on User {\n *   name\n * }\n * ```\n *\n * And given some object `parent` that is the results of `Parent` for id \"4\",\n * the results of `Child` can be accessed by first getting a selector and then\n * using that selector to `lookup()` the results against the environment:\n *\n * ```\n * const childSelector = getSelector(queryVariables, Child, parent);\n * const childData = environment.lookup(childSelector).data;\n * ```\n */\nfunction getSelector(operationVariables, fragment, item) {\n  require('fbjs/lib/invariant')(typeof item === 'object' && item !== null && !Array.isArray(item), 'RelayModernSelector: Expected value for fragment `%s` to be an object, got ' + '`%s`.', fragment.name, JSON.stringify(item));\n  var dataID = item[ID_KEY];\n  var fragments = item[FRAGMENTS_KEY];\n  if (typeof dataID === 'string' && typeof fragments === 'object' && fragments !== null && typeof fragments[fragment.name] === 'object' && fragments[fragment.name] !== null) {\n    var argumentVariables = fragments[fragment.name];\n    var fragmentVariables = getFragmentVariables(fragment, operationVariables, argumentVariables);\n    return {\n      dataID: dataID,\n      node: fragment,\n      variables: fragmentVariables\n    };\n  }\n  require('fbjs/lib/warning')(false, 'RelayModernSelector: Expected object to contain data for fragment `%s`, got ' + '`%s`. Make sure that the parent operation/fragment included fragment ' + '`...%s` without `@relay(mask: false)`.', fragment.name, JSON.stringify(item), fragment.name);\n  return null;\n}\n\n/**\n * @public\n *\n * Given the result `items` from a parent that fetched `fragment`, creates a\n * selector that can be used to read the results of that fragment on those\n * items. This is similar to `getSelector` but for \"plural\" fragments that\n * expect an array of results and therefore return an array of selectors.\n */\nfunction getSelectorList(operationVariables, fragment, items) {\n  var selectors = null;\n  items.forEach(function (item) {\n    var selector = item != null ? getSelector(operationVariables, fragment, item) : null;\n    if (selector != null) {\n      selectors = selectors || [];\n      selectors.push(selector);\n    }\n  });\n  return selectors;\n}\n\n/**\n * @public\n *\n * Given a mapping of keys -> results and a mapping of keys -> fragments,\n * extracts the selectors for those fragments from the results.\n *\n * The canonical use-case for this function is ReactRelayFragmentContainer, which\n * uses this function to convert (props, fragments) into selectors so that it\n * can read the results to pass to the inner component.\n */\nfunction getSelectorsFromObject(operationVariables, fragments, object) {\n  var selectors = {};\n  for (var _key in fragments) {\n    if (fragments.hasOwnProperty(_key)) {\n      var fragment = fragments[_key];\n      var item = object[_key];\n      if (item == null) {\n        selectors[_key] = item;\n      } else if (fragment.metadata && fragment.metadata.plural === true) {\n        require('fbjs/lib/invariant')(Array.isArray(item), 'RelayModernSelector: Expected value for key `%s` to be an array, got `%s`. ' + 'Remove `@relay(plural: true)` from fragment `%s` to allow the prop to be an object.', _key, JSON.stringify(item), fragment.name);\n        selectors[_key] = getSelectorList(operationVariables, fragment, item);\n      } else {\n        require('fbjs/lib/invariant')(!Array.isArray(item), 'RelayModernFragmentSpecResolver: Expected value for key `%s` to be an object, got `%s`. ' + 'Add `@relay(plural: true)` to fragment `%s` to allow the prop to be an array of items.', _key, JSON.stringify(item), fragment.name);\n        selectors[_key] = getSelector(operationVariables, fragment, item);\n      }\n    }\n  }\n  return selectors;\n}\n\n/**\n * @public\n *\n * Given a mapping of keys -> results and a mapping of keys -> fragments,\n * extracts a mapping of keys -> id(s) of the results.\n *\n * Similar to `getSelectorsFromObject()`, this function can be useful in\n * determining the \"identity\" of the props passed to a component.\n */\nfunction getDataIDsFromObject(fragments, object) {\n  var ids = {};\n  for (var _key2 in fragments) {\n    if (fragments.hasOwnProperty(_key2)) {\n      var fragment = fragments[_key2];\n      var item = object[_key2];\n      if (item == null) {\n        ids[_key2] = item;\n      } else if (fragment.metadata && fragment.metadata.plural === true) {\n        require('fbjs/lib/invariant')(Array.isArray(item), 'RelayModernSelector: Expected value for key `%s` to be an array, got `%s`. ' + 'Remove `@relay(plural: true)` from fragment `%s` to allow the prop to be an object.', _key2, JSON.stringify(item), fragment.name);\n        ids[_key2] = getDataIDs(fragment, item);\n      } else {\n        require('fbjs/lib/invariant')(!Array.isArray(item), 'RelayModernFragmentSpecResolver: Expected value for key `%s` to be an object, got `%s`. ' + 'Add `@relay(plural: true)` to fragment `%s` to allow the prop to be an array of items.', _key2, JSON.stringify(item), fragment.name);\n        ids[_key2] = getDataID(fragment, item);\n      }\n    }\n  }\n  return ids;\n}\n\n/**\n * @internal\n */\nfunction getDataIDs(fragment, items) {\n  var ids = void 0;\n  items.forEach(function (item) {\n    var id = item != null ? getDataID(fragment, item) : null;\n    if (id != null) {\n      ids = ids || [];\n      ids.push(id);\n    }\n  });\n  return ids || null;\n}\n\n/**\n * @internal\n */\nfunction getDataID(fragment, item) {\n  require('fbjs/lib/invariant')(typeof item === 'object' && item !== null && !Array.isArray(item), 'RelayModernSelector: Expected value for fragment `%s` to be an object, got ' + '`%s`.', fragment.name, JSON.stringify(item));\n  var dataID = item[ID_KEY];\n  if (typeof dataID === 'string') {\n    return dataID;\n  }\n  require('fbjs/lib/warning')(false, 'RelayModernSelector: Expected object to contain data for fragment `%s`, got ' + '`%s`. Make sure that the parent operation/fragment included fragment ' + '`...%s` without `@relay(mask: false)`.', fragment.name, JSON.stringify(item), fragment.name);\n  return null;\n}\n\n/**\n * @public\n *\n * Given a mapping of keys -> results and a mapping of keys -> fragments,\n * extracts the merged variables that would be in scope for those\n * fragments/results.\n *\n * This can be useful in determing what varaibles were used to fetch the data\n * for a Relay container, for example.\n */\nfunction getVariablesFromObject(operationVariables, fragments, object) {\n  var variables = {};\n  for (var _key3 in fragments) {\n    if (fragments.hasOwnProperty(_key3)) {\n      var _ret = function () {\n        var fragment = fragments[_key3];\n        var item = object[_key3];\n        if (item == null) {\n          return 'continue';\n        } else if (fragment.metadata && fragment.metadata.plural === true) {\n          require('fbjs/lib/invariant')(Array.isArray(item), 'RelayModernSelector: Expected value for key `%s` to be an array, got `%s`. ' + 'Remove `@relay(plural: true)` from fragment `%s` to allow the prop to be an object.', _key3, JSON.stringify(item), fragment.name);\n          item.forEach(function (value) {\n            if (value != null) {\n              var itemVariables = getVariables(operationVariables, fragment, value);\n              if (itemVariables) {\n                Object.assign(variables, itemVariables);\n              }\n            }\n          });\n        } else {\n          require('fbjs/lib/invariant')(!Array.isArray(item), 'RelayModernFragmentSpecResolver: Expected value for key `%s` to be an object, got `%s`. ' + 'Add `@relay(plural: true)` to fragment `%s` to allow the prop to be an array of items.', _key3, JSON.stringify(item), fragment.name);\n          var itemVariables = getVariables(operationVariables, fragment, item);\n          if (itemVariables) {\n            Object.assign(variables, itemVariables);\n          }\n        }\n      }();\n\n      if (_ret === 'continue') continue;\n    }\n  }\n  return variables;\n}\n\n/**\n * @internal\n */\nfunction getVariables(operationVariables, fragment, item) {\n  var selector = getSelector(operationVariables, fragment, item);\n  return selector ? selector.variables : null;\n}\n\n/**\n * @public\n *\n * Determine if two selectors are equal (represent the same selection). Note\n * that this function returns `false` when the two queries/fragments are\n * different objects, even if they select the same fields.\n */\nfunction areEqualSelectors(thisSelector, thatSelector) {\n  return thisSelector.dataID === thatSelector.dataID && thisSelector.node === thatSelector.node && require('fbjs/lib/areEqual')(thisSelector.variables, thatSelector.variables);\n}\n\nmodule.exports = {\n  areEqualSelectors: areEqualSelectors,\n  getDataIDsFromObject: getDataIDsFromObject,\n  getSelector: getSelector,\n  getSelectorList: getSelectorList,\n  getSelectorsFromObject: getSelectorsFromObject,\n  getVariablesFromObject: getVariablesFromObject\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/relay-runtime/lib/RelayModernSelector.js\n ** module id = 108\n ** module chunks = 0\n **/","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @providesModule RelayModernFragmentSpecResolver\n * \n * @format\n */\n\n'use strict';\n\nvar _extends3 = _interopRequireDefault(require('babel-runtime/helpers/extends'));\n\nvar _classCallCheck3 = _interopRequireDefault(require('babel-runtime/helpers/classCallCheck'));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _require = require('./RelayModernSelector'),\n    areEqualSelectors = _require.areEqualSelectors,\n    getSelectorsFromObject = _require.getSelectorsFromObject;\n\n/**\n * A utility for resolving and subscribing to the results of a fragment spec\n * (key -> fragment mapping) given some \"props\" that determine the root ID\n * and variables to use when reading each fragment. When props are changed via\n * `setProps()`, the resolver will update its results and subscriptions\n * accordingly. Internally, the resolver:\n * - Converts the fragment map & props map into a map of `Selector`s.\n * - Removes any resolvers for any props that became null.\n * - Creates resolvers for any props that became non-null.\n * - Updates resolvers with the latest props.\n *\n * This utility is implemented as an imperative, stateful API for performance\n * reasons: reusing previous resolvers, callback functions, and subscriptions\n * all helps to reduce object allocation and thereby decrease GC time.\n *\n * The `resolve()` function is also lazy and memoized: changes in the store mark\n * the resolver as stale and notify the caller, and the actual results are\n * recomputed the first time `resolve()` is called.\n */\nvar RelayModernFragmentSpecResolver = function () {\n  function RelayModernFragmentSpecResolver(context, fragments, props, callback) {\n    var _this = this;\n\n    (0, _classCallCheck3['default'])(this, RelayModernFragmentSpecResolver);\n\n    this._onChange = function () {\n      _this._stale = true;\n      _this._callback();\n    };\n\n    this._callback = callback;\n    this._context = context;\n    this._data = {};\n    this._fragments = fragments;\n    this._props = props;\n    this._resolvers = {};\n    this._stale = false;\n\n    this.setProps(props);\n  }\n\n  RelayModernFragmentSpecResolver.prototype.dispose = function dispose() {\n    for (var _key in this._resolvers) {\n      if (this._resolvers.hasOwnProperty(_key)) {\n        disposeCallback(this._resolvers[_key]);\n      }\n    }\n  };\n\n  RelayModernFragmentSpecResolver.prototype.resolve = function resolve() {\n    if (this._stale) {\n      // Avoid mapping the object multiple times, which could occur if data for\n      // multiple keys changes in the same event loop.\n      var prevData = this._data;\n      var nextData = void 0;\n      for (var _key2 in this._resolvers) {\n        if (this._resolvers.hasOwnProperty(_key2)) {\n          var resolver = this._resolvers[_key2];\n          var prevItem = prevData[_key2];\n          if (resolver) {\n            var nextItem = resolver.resolve();\n            if (nextData || nextItem !== prevItem) {\n              nextData = nextData || (0, _extends3['default'])({}, prevData);\n              nextData[_key2] = nextItem;\n            }\n          } else {\n            var prop = this._props[_key2];\n            var _nextItem = prop !== undefined ? prop : null;\n            if (nextData || !require('./isScalarAndEqual')(_nextItem, prevItem)) {\n              nextData = nextData || (0, _extends3['default'])({}, prevData);\n              nextData[_key2] = _nextItem;\n            }\n          }\n        }\n      }\n      this._data = nextData || prevData;\n      this._stale = false;\n    }\n    return this._data;\n  };\n\n  RelayModernFragmentSpecResolver.prototype.setProps = function setProps(props) {\n    var selectors = getSelectorsFromObject(this._context.variables, this._fragments, props);\n    for (var _key3 in selectors) {\n      if (selectors.hasOwnProperty(_key3)) {\n        var selector = selectors[_key3];\n        var resolver = this._resolvers[_key3];\n        if (selector == null) {\n          if (resolver != null) {\n            resolver.dispose();\n          }\n          resolver = null;\n        } else if (Array.isArray(selector)) {\n          if (resolver == null) {\n            resolver = new SelectorListResolver(this._context.environment, selector, this._onChange);\n          } else {\n            require('fbjs/lib/invariant')(resolver instanceof SelectorListResolver, 'RelayModernFragmentSpecResolver: Expected prop `%s` to always be an array.', _key3);\n            resolver.setSelectors(selector);\n          }\n        } else {\n          if (resolver == null) {\n            resolver = new SelectorResolver(this._context.environment, selector, this._onChange);\n          } else {\n            require('fbjs/lib/invariant')(resolver instanceof SelectorResolver, 'RelayModernFragmentSpecResolver: Expected prop `%s` to always be an object.', _key3);\n            resolver.setSelector(selector);\n          }\n        }\n        this._resolvers[_key3] = resolver;\n      }\n    }\n    this._props = props;\n    this._stale = true;\n  };\n\n  RelayModernFragmentSpecResolver.prototype.setVariables = function setVariables(variables) {\n    for (var _key4 in this._resolvers) {\n      if (this._resolvers.hasOwnProperty(_key4)) {\n        var resolver = this._resolvers[_key4];\n        if (resolver) {\n          resolver.setVariables(variables);\n        }\n      }\n    }\n    this._stale = true;\n  };\n\n  RelayModernFragmentSpecResolver.prototype.getVariables = function getVariables() {\n    var variables = {};\n    require('fbjs/lib/forEachObject')(this._resolvers, function (resolver) {\n      if (resolver) {\n        Object.assign(variables, resolver.getVariables());\n      }\n    });\n    return variables;\n  };\n\n  return RelayModernFragmentSpecResolver;\n}();\n\n/**\n * A resolver for a single Selector.\n */\n\n\nvar SelectorResolver = function () {\n  function SelectorResolver(environment, selector, callback) {\n    (0, _classCallCheck3['default'])(this, SelectorResolver);\n\n    _initialiseProps.call(this);\n\n    var snapshot = environment.lookup(selector);\n    this._callback = callback;\n    this._data = snapshot.data;\n    this._environment = environment;\n    this._selector = selector;\n    this._subscription = environment.subscribe(snapshot, this._onChange);\n  }\n\n  SelectorResolver.prototype.dispose = function dispose() {\n    if (this._subscription) {\n      this._subscription.dispose();\n      this._subscription = null;\n    }\n  };\n\n  SelectorResolver.prototype.resolve = function resolve() {\n    return this._data;\n  };\n\n  SelectorResolver.prototype.setSelector = function setSelector(selector) {\n    if (this._subscription != null && areEqualSelectors(selector, this._selector)) {\n      return;\n    }\n    this.dispose();\n    var snapshot = this._environment.lookup(selector);\n    this._data = snapshot.data;\n    this._selector = selector;\n    this._subscription = this._environment.subscribe(snapshot, this._onChange);\n  };\n\n  SelectorResolver.prototype.setVariables = function setVariables(variables) {\n    var selector = (0, _extends3['default'])({}, this._selector, {\n      variables: variables\n    });\n    this.setSelector(selector);\n  };\n\n  SelectorResolver.prototype.getVariables = function getVariables() {\n    return this._selector.variables;\n  };\n\n  return SelectorResolver;\n}();\n\n/**\n * A resolver for an array of Selectors.\n */\n\n\nvar _initialiseProps = function _initialiseProps() {\n  var _this3 = this;\n\n  this._onChange = function (snapshot) {\n    _this3._data = snapshot.data;\n    _this3._callback();\n  };\n};\n\nvar SelectorListResolver = function () {\n  function SelectorListResolver(environment, selectors, callback) {\n    var _this2 = this;\n\n    (0, _classCallCheck3['default'])(this, SelectorListResolver);\n\n    this._onChange = function (data) {\n      _this2._stale = true;\n      _this2._callback();\n    };\n\n    this._callback = callback;\n    this._data = [];\n    this._environment = environment;\n    this._resolvers = [];\n    this._stale = true;\n\n    this.setSelectors(selectors);\n  }\n\n  SelectorListResolver.prototype.dispose = function dispose() {\n    this._resolvers.forEach(disposeCallback);\n  };\n\n  SelectorListResolver.prototype.resolve = function resolve() {\n    if (this._stale) {\n      // Avoid mapping the array multiple times, which could occur if data for\n      // multiple indices changes in the same event loop.\n      var prevData = this._data;\n      var nextData = void 0;\n      for (var ii = 0; ii < this._resolvers.length; ii++) {\n        var prevItem = prevData[ii];\n        var nextItem = this._resolvers[ii].resolve();\n        if (nextData || nextItem !== prevItem) {\n          nextData = nextData || prevData.slice(0, ii);\n          nextData.push(nextItem);\n        }\n      }\n      if (!nextData && this._resolvers.length !== prevData.length) {\n        nextData = prevData.slice(0, this._resolvers.length);\n      }\n      this._data = nextData || prevData;\n      this._stale = false;\n    }\n    return this._data;\n  };\n\n  SelectorListResolver.prototype.setSelectors = function setSelectors(selectors) {\n    while (this._resolvers.length > selectors.length) {\n      var resolver = this._resolvers.pop();\n      resolver.dispose();\n    }\n    for (var ii = 0; ii < selectors.length; ii++) {\n      if (ii < this._resolvers.length) {\n        this._resolvers[ii].setSelector(selectors[ii]);\n      } else {\n        this._resolvers[ii] = new SelectorResolver(this._environment, selectors[ii], this._onChange);\n      }\n    }\n    this._stale = true;\n  };\n\n  SelectorListResolver.prototype.setVariables = function setVariables(variables) {\n    this._resolvers.forEach(function (resolver) {\n      return resolver.setVariables(variables);\n    });\n    this._stale = true;\n  };\n\n  SelectorListResolver.prototype.getVariables = function getVariables() {\n    if (this._resolvers.length > 0) {\n      return this._resolvers[0].getVariables();\n    }\n    return {};\n  };\n\n  return SelectorListResolver;\n}();\n\nfunction disposeCallback(disposable) {\n  disposable && disposable.dispose();\n}\n\nmodule.exports = RelayModernFragmentSpecResolver;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/relay-runtime/lib/RelayModernFragmentSpecResolver.js\n ** module id = 109\n ** module chunks = 0\n **/","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @providesModule isScalarAndEqual\n * @format\n */\n\n'use strict';\n\n/**\n * A fast test to determine if two values are equal scalars:\n * - compares scalars such as booleans, strings, numbers by value\n * - compares functions by identity\n * - returns false for complex values, since these cannot be cheaply tested for\n *   equality (use `areEquals` instead)\n */\n\nfunction isScalarAndEqual(valueA, valueB) {\n  return valueA === valueB && (valueA === null || typeof valueA !== 'object');\n}\n\nmodule.exports = isScalarAndEqual;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/relay-runtime/lib/isScalarAndEqual.js\n ** module id = 110\n ** module chunks = 0\n **/","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @providesModule normalizePayload\n * \n * @format\n */\n\n'use strict';\n\nvar _require = require('./RelayStoreUtils'),\n    ROOT_ID = _require.ROOT_ID;\n\nfunction normalizePayload(payload) {\n  var operation = payload.operation,\n      variables = payload.variables,\n      response = payload.response;\n  var data = response.data,\n      errors = response.errors;\n\n  if (data != null) {\n    return require('./normalizeRelayPayload')({\n      dataID: ROOT_ID,\n      node: operation,\n      variables: variables\n    }, data, errors, { handleStrippedNulls: true });\n  }\n  var error = require('./RelayError').create('RelayNetwork', 'No data returned for operation `%s`, got error(s):\\n%s\\n\\nSee the error ' + '`source` property for more information.', operation.name, errors ? errors.map(function (_ref) {\n    var message = _ref.message;\n    return message;\n  }).join('\\n') : '(No errors)');\n  error.source = { errors: errors, operation: operation, variables: variables };\n  throw error;\n}\n\nmodule.exports = normalizePayload;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/relay-runtime/lib/normalizePayload.js\n ** module id = 112\n ** module chunks = 0\n **/","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @providesModule RelayError\n * \n * @format\n */\n\n'use strict';\n\nvar _toConsumableArray3 = _interopRequireDefault(require('babel-runtime/helpers/toConsumableArray'));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\n/**\n * @internal\n *\n * Factory methods for constructing errors in Relay.\n */\nvar RelayError = {\n  create: function create(name, format) {\n    for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n      args[_key - 2] = arguments[_key];\n    }\n\n    return createError('mustfix', name, format, args);\n  },\n  createWarning: function createWarning(name, format) {\n    for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n      args[_key2 - 2] = arguments[_key2];\n    }\n\n    return createError('warn', name, format, args);\n  }\n};\n\n/**\n * @private\n */\nfunction createError(type, name, format, args) {\n  var error = new Error(require('fbjs/lib/sprintf').apply(undefined, [format].concat((0, _toConsumableArray3['default'])(args))));\n  error.name = name;\n  error.type = type;\n  error.framesToPop = 2;\n  return error;\n}\n\nmodule.exports = RelayError;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/relay-runtime/lib/RelayError.js\n ** module id = 113\n ** module chunks = 0\n **/","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @providesModule RelayDataLoader\n * \n * @format\n */\n\n'use strict';\n\nvar _classCallCheck3 = _interopRequireDefault(require('babel-runtime/helpers/classCallCheck'));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _require = require('./RelayRecordState'),\n    EXISTENT = _require.EXISTENT,\n    UNKNOWN = _require.UNKNOWN;\n\nvar CONDITION = require('./RelayConcreteNode').CONDITION,\n    INLINE_FRAGMENT = require('./RelayConcreteNode').INLINE_FRAGMENT,\n    LINKED_FIELD = require('./RelayConcreteNode').LINKED_FIELD,\n    LINKED_HANDLE = require('./RelayConcreteNode').LINKED_HANDLE,\n    SCALAR_FIELD = require('./RelayConcreteNode').SCALAR_FIELD;\n\nvar getStorageKey = require('./RelayStoreUtils').getStorageKey,\n    getArgumentValues = require('./RelayStoreUtils').getArgumentValues;\n\n/**\n * Synchronously check whether the records required to fulfill the\n * given `selector` are present in `source`.\n *\n * If a field is missing, it uses the provided handlers to attempt to substitute\n * data. The `target` will store all records that are modified because of a\n * successful substitution.\n *\n * If all records are present, returns `true`, otherwise `false`.\n */\n\n\nfunction check(source, target, selector, handlers) {\n  var dataID = selector.dataID,\n      node = selector.node,\n      variables = selector.variables;\n\n  var loader = new RelayDataLoader(source, target, variables, handlers);\n  return loader.check(node, dataID);\n}\n\n/**\n * @private\n */\n\nvar RelayDataLoader = function () {\n  function RelayDataLoader(source, target, variables, handlers) {\n    (0, _classCallCheck3['default'])(this, RelayDataLoader);\n\n    this._source = source;\n    this._variables = variables;\n    this._recordWasMissing = false;\n    this._handlers = handlers;\n    this._mutator = new (require('./RelayRecordSourceMutator'))(source, target);\n  }\n\n  RelayDataLoader.prototype.check = function check(node, dataID) {\n    this._traverse(node, dataID);\n    return !this._recordWasMissing;\n  };\n\n  RelayDataLoader.prototype._getVariableValue = function _getVariableValue(name) {\n    require('fbjs/lib/invariant')(this._variables.hasOwnProperty(name), 'RelayAsyncLoader(): Undefined variable `%s`.', name);\n    return this._variables[name];\n  };\n\n  RelayDataLoader.prototype._handleMissing = function _handleMissing() {\n    this._recordWasMissing = true;\n  };\n\n  RelayDataLoader.prototype._getDataForHandlers = function _getDataForHandlers(field, dataID) {\n    return {\n      args: field.args ? getArgumentValues(field.args, this._variables) : {},\n      // Getting a snapshot of the record state is potentially expensive since\n      // we will need to merge the sink and source records. Since we do not create\n      // any new records in this process, it is probably reasonable to provide\n      // handlers with a copy of the source record.\n      // The only thing that the provided record will not contain is fields\n      // added by previous handlers.\n      record: this._source.get(dataID)\n    };\n  };\n\n  RelayDataLoader.prototype._handleMissingScalarField = function _handleMissingScalarField(field, dataID) {\n    var _getDataForHandlers2 = this._getDataForHandlers(field, dataID),\n        args = _getDataForHandlers2.args,\n        record = _getDataForHandlers2.record;\n\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = this._handlers[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var handler = _step.value;\n\n        if (handler.kind === 'scalar') {\n          var newValue = handler.handle(field, record, args);\n          if (newValue !== undefined) {\n            return newValue;\n          }\n        }\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator['return']) {\n          _iterator['return']();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n\n    this._handleMissing();\n  };\n\n  RelayDataLoader.prototype._handleMissingLinkField = function _handleMissingLinkField(field, dataID) {\n    var _getDataForHandlers3 = this._getDataForHandlers(field, dataID),\n        args = _getDataForHandlers3.args,\n        record = _getDataForHandlers3.record;\n\n    var _iteratorNormalCompletion2 = true;\n    var _didIteratorError2 = false;\n    var _iteratorError2 = undefined;\n\n    try {\n      for (var _iterator2 = this._handlers[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n        var handler = _step2.value;\n\n        if (handler.kind === 'linked') {\n          var newValue = handler.handle(field, record, args);\n          if (newValue != null && this._mutator.getStatus(newValue) === EXISTENT) {\n            return newValue;\n          }\n        }\n      }\n    } catch (err) {\n      _didIteratorError2 = true;\n      _iteratorError2 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion2 && _iterator2['return']) {\n          _iterator2['return']();\n        }\n      } finally {\n        if (_didIteratorError2) {\n          throw _iteratorError2;\n        }\n      }\n    }\n\n    this._handleMissing();\n  };\n\n  RelayDataLoader.prototype._handleMissingPluralLinkField = function _handleMissingPluralLinkField(field, dataID) {\n    var _this = this;\n\n    var _getDataForHandlers4 = this._getDataForHandlers(field, dataID),\n        args = _getDataForHandlers4.args,\n        record = _getDataForHandlers4.record;\n\n    var _iteratorNormalCompletion3 = true;\n    var _didIteratorError3 = false;\n    var _iteratorError3 = undefined;\n\n    try {\n      for (var _iterator3 = this._handlers[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n        var handler = _step3.value;\n\n        if (handler.kind === 'pluralLinked') {\n          var newValue = handler.handle(field, record, args);\n          if (newValue != null) {\n            return newValue.filter(function (linkedID) {\n              return linkedID != null && _this._mutator.getStatus(linkedID) === EXISTENT;\n            });\n          }\n        }\n      }\n    } catch (err) {\n      _didIteratorError3 = true;\n      _iteratorError3 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion3 && _iterator3['return']) {\n          _iterator3['return']();\n        }\n      } finally {\n        if (_didIteratorError3) {\n          throw _iteratorError3;\n        }\n      }\n    }\n\n    this._handleMissing();\n  };\n\n  RelayDataLoader.prototype._traverse = function _traverse(node, dataID) {\n    var status = this._mutator.getStatus(dataID);\n    if (status === UNKNOWN) {\n      this._handleMissing();\n    }\n    if (status === EXISTENT) {\n      this._traverseSelections(node.selections, dataID);\n    }\n  };\n\n  RelayDataLoader.prototype._traverseSelections = function _traverseSelections(selections, dataID) {\n    var _this2 = this;\n\n    selections.every(function (selection) {\n      switch (selection.kind) {\n        case SCALAR_FIELD:\n          _this2._prepareScalar(selection, dataID);\n          break;\n        case LINKED_FIELD:\n          if (selection.plural) {\n            _this2._preparePluralLink(selection, dataID);\n          } else {\n            _this2._prepareLink(selection, dataID);\n          }\n          break;\n        case CONDITION:\n          var conditionValue = _this2._getVariableValue(selection.condition);\n          if (conditionValue === selection.passingValue) {\n            _this2._traverseSelections(selection.selections, dataID);\n          }\n          break;\n        case INLINE_FRAGMENT:\n          var typeName = _this2._mutator.getType(dataID);\n          if (typeName != null && typeName === selection.type) {\n            _this2._traverseSelections(selection.selections, dataID);\n          }\n          break;\n        case LINKED_HANDLE:\n          // Handles have no selections themselves; traverse the original field\n          // where the handle was set-up instead.\n          var handleField = require('./cloneRelayHandleSourceField')(selection, selections, _this2._variables);\n          if (handleField.plural) {\n            _this2._preparePluralLink(handleField, dataID);\n          } else {\n            _this2._prepareLink(handleField, dataID);\n          }\n          break;\n        default:\n          require('fbjs/lib/invariant')(selection.kind === SCALAR_FIELD, 'RelayAsyncLoader(): Unexpected ast kind `%s`.', selection.kind);\n      }\n      return !_this2._done;\n    });\n  };\n\n  RelayDataLoader.prototype._prepareScalar = function _prepareScalar(field, dataID) {\n    var storageKey = getStorageKey(field, this._variables);\n    var fieldValue = this._mutator.getValue(dataID, storageKey);\n    if (fieldValue === undefined) {\n      fieldValue = this._handleMissingScalarField(field, dataID);\n      if (fieldValue !== undefined) {\n        this._mutator.setValue(dataID, storageKey, fieldValue);\n      }\n    }\n  };\n\n  RelayDataLoader.prototype._prepareLink = function _prepareLink(field, dataID) {\n    var storageKey = getStorageKey(field, this._variables);\n    var linkedID = this._mutator.getLinkedRecordID(dataID, storageKey);\n\n    if (linkedID === undefined) {\n      linkedID = this._handleMissingLinkField(field, dataID);\n      if (linkedID != null) {\n        this._mutator.setLinkedRecordID(dataID, storageKey, linkedID);\n      }\n    }\n    if (linkedID != null) {\n      this._traverse(field, linkedID);\n    }\n  };\n\n  RelayDataLoader.prototype._preparePluralLink = function _preparePluralLink(field, dataID) {\n    var _this3 = this;\n\n    var storageKey = getStorageKey(field, this._variables);\n    var linkedIDs = this._mutator.getLinkedRecordIDs(dataID, storageKey);\n\n    if (linkedIDs === undefined) {\n      linkedIDs = this._handleMissingPluralLinkField(field, dataID);\n      if (linkedIDs != null) {\n        this._mutator.setLinkedRecordIDs(dataID, storageKey, linkedIDs);\n      }\n    }\n    if (linkedIDs) {\n      linkedIDs.forEach(function (linkedID) {\n        if (linkedID != null) {\n          _this3._traverse(field, linkedID);\n        }\n      });\n    }\n  };\n\n  return RelayDataLoader;\n}();\n\nmodule.exports = {\n  check: check\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/relay-runtime/lib/RelayDataLoader.js\n ** module id = 138\n ** module chunks = 0\n **/","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @providesModule cloneRelayHandleSourceField\n * \n * @format\n */\n\n'use strict';\n\nvar _extends3 = _interopRequireDefault(require('babel-runtime/helpers/extends'));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _require = require('./RelayStoreUtils'),\n    getHandleFilterValues = _require.getHandleFilterValues;\n\nvar LINKED_FIELD = require('./RelayConcreteNode').LINKED_FIELD;\n\n/**\n * @private\n *\n * Creates a clone of the supplied `handleField` by finding the original linked\n * field (on which the handle was declared) among the sibling `selections`, and\n * copying its selections into the clone.\n */\n\n\nfunction cloneRelayHandleSourceField(handleField, selections, variables) {\n  var sourceField = selections.find(function (source) {\n    return source.kind === LINKED_FIELD && source.name === handleField.name && source.alias === handleField.alias && require('fbjs/lib/areEqual')(source.args, handleField.args);\n  });\n  require('fbjs/lib/invariant')(sourceField && sourceField.kind === LINKED_FIELD, 'cloneRelayHandleSourceField: Expected a corresponding source field for ' + 'handle `%s`.', handleField.handle);\n  var handleKey = require('./getRelayHandleKey')(handleField.handle, handleField.key, handleField.name);\n  if (handleField.filters && handleField.filters.length > 0) {\n    var filterValues = getHandleFilterValues(handleField.args || [], handleField.filters, variables);\n    handleKey = require('./formatStorageKey')(handleKey, filterValues);\n  }\n\n  var clonedField = (0, _extends3['default'])({}, sourceField, {\n    args: null,\n    name: handleKey,\n    storageKey: handleKey\n  });\n  return clonedField;\n}\n\nmodule.exports = cloneRelayHandleSourceField;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/relay-runtime/lib/cloneRelayHandleSourceField.js\n ** module id = 139\n ** module chunks = 0\n **/","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @providesModule RelayNetwork\n * \n * @format\n */\n\n'use strict';\n\nvar _require = require('./ConvertToExecuteFunction'),\n    convertFetch = _require.convertFetch,\n    convertSubscribe = _require.convertSubscribe;\n\n/**\n * Creates an implementation of the `Network` interface defined in\n * `RelayNetworkTypes` given `fetch` and `subscribe` functions.\n */\nfunction create(fetchFn, subscribeFn) {\n  // Convert to functions that returns RelayObservable.\n  var observeFetch = convertFetch(fetchFn);\n  var observeSubscribe = subscribeFn ? convertSubscribe(subscribeFn) : undefined;\n\n  function execute(_request, variables, cacheConfig, uploadables) {\n    // Const so Flow can refine.\n    var request = _request;\n    if (request.kind === 'Operation' && request.operation === 'subscription') {\n      require('fbjs/lib/invariant')(observeSubscribe, 'RelayNetwork: This network layer does not support Subscriptions. ' + 'To use Subscriptions, provide a custom network layer.');\n\n      require('fbjs/lib/invariant')(!uploadables, 'RelayNetwork: Cannot provide uploadables while subscribing.');\n      return observeSubscribe(request, variables, cacheConfig);\n    }\n\n    var pollInterval = cacheConfig.poll;\n    if (pollInterval != null) {\n      require('fbjs/lib/invariant')(!uploadables, 'RelayNetwork: Cannot provide uploadables while polling.');\n      return observeFetch(request, variables, { force: true }).poll(pollInterval);\n    }\n\n    return observeFetch(request, variables, cacheConfig, uploadables);\n  }\n\n  return { execute: execute };\n}\n\nmodule.exports = { create: create };\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/relay-runtime/lib/RelayNetwork.js\n ** module id = 140\n ** module chunks = 0\n **/","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @providesModule ConvertToExecuteFunction\n * \n * @format\n */\n\n'use strict';\n\n/**\n * Converts a FetchFunction into an ExecuteFunction for use by RelayNetwork.\n */\nfunction convertFetch(fn) {\n  return function fetch(request, variables, cacheConfig, uploadables) {\n    var result = fn(request, variables, cacheConfig, uploadables);\n    // Note: We allow FetchFunction to directly return Error to indicate\n    // a failure to fetch. To avoid handling this special case throughout the\n    // Relay codebase, it is explicitly handled here.\n    if (result instanceof Error) {\n      return new (require('./RelayObservable'))(function (sink) {\n        return sink.error(result);\n      });\n    }\n    return require('./RelayObservable').from(result).map(function (value) {\n      return convertToExecutePayload(request, variables, value);\n    });\n  };\n}\n\n/**\n * Converts a SubscribeFunction into an ExecuteFunction for use by RelayNetwork.\n */\nfunction convertSubscribe(fn) {\n  return function subscribe(operation, variables, cacheConfig) {\n    return require('./RelayObservable').fromLegacy(function (observer) {\n      return (\n        // $FlowFixMe: Flow issues with covariant Observable types.\n        fn(operation, variables, cacheConfig, observer)\n      );\n    }).map(function (value) {\n      return convertToExecutePayload(operation, variables, value);\n    });\n  };\n}\n\n/**\n * Given a value which might be a plain GraphQLResponse, coerce to always return\n * an ExecutePayload. A GraphQLResponse may be returned directly from older or\n * simpler Relay Network implementations.\n */\nfunction convertToExecutePayload(request, variables, value) {\n  if (!value.data && !value.errors && value.response) {\n    if (!value.operation) {\n      require('fbjs/lib/warning')(false, 'ConvertToExecuteFunction: execute payload contains response but ' + 'is missing operation.');\n      return { operation: request, variables: variables, response: value.response };\n    }\n    return value;\n  }\n  return { operation: request, variables: variables, response: value };\n}\n\nmodule.exports = {\n  convertFetch: convertFetch,\n  convertSubscribe: convertSubscribe\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/relay-runtime/lib/ConvertToExecuteFunction.js\n ** module id = 141\n ** module chunks = 0\n **/","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @providesModule RelayObservable\n * \n * @format\n */\n\n'use strict';\n\nvar _classCallCheck3 = _interopRequireDefault(require('babel-runtime/helpers/classCallCheck'));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\n// Note: This should accept Subscribable<T> instead of RelayObservable<T>,\n// however Flow cannot yet distinguish it from T.\nvar hostReportError = swallowError;\n\n/**\n * Limited implementation of ESObservable, providing the limited set of behavior\n * Relay networking requires.\n *\n * Observables retain the benefit of callbacks which can be called\n * synchronously, avoiding any UI jitter, while providing a compositional API,\n * which simplifies logic and prevents mishandling of errors compared to\n * the direct use of callback functions.\n *\n * ESObservable: https://github.com/tc39/proposal-observable\n */\n\nvar RelayObservable = function () {\n  function RelayObservable(source) {\n    (0, _classCallCheck3['default'])(this, RelayObservable);\n\n    if (process.env.NODE_ENV !== 'production') {\n      // Early runtime errors for ill-formed sources.\n      if (!source || typeof source !== 'function') {\n        throw new Error('Source must be a Function: ' + String(source));\n      }\n    }\n    this._source = source;\n  }\n\n  /**\n   * When an emitted error event is not handled by an Observer, it is reported\n   * to the host environment (what the ESObservable spec refers to as\n   * \"HostReportErrors()\").\n   *\n   * The default implementation in development rethrows thrown errors, and\n   * logs emitted error events to the console, while in production does nothing\n   * (swallowing unhandled errors).\n   *\n   * Called during application initialization, this method allows\n   * application-specific handling of unhandled errors. Allowing, for example,\n   * integration with error logging or developer tools.\n   *\n   * A second parameter `isUncaughtThrownError` is true when the unhandled error\n   * was thrown within an Observer handler, and false when the unhandled error\n   * was an unhandled emitted event.\n   *\n   *  - Uncaught thrown errors typically represent avoidable errors thrown from\n   *    application code, which should be handled with a try/catch block, and\n   *    usually have useful stack traces.\n   *\n   *  - Unhandled emitted event errors typically represent unavoidable events in\n   *    application flow such as network failure, and may not have useful\n   *    stack traces.\n   */\n\n\n  RelayObservable.onUnhandledError = function onUnhandledError(callback) {\n    hostReportError = callback;\n  };\n\n  /**\n   * Accepts various kinds of data sources, and always returns a RelayObservable\n   * useful for accepting the result of a user-provided FetchFunction.\n   */\n\n\n  RelayObservable.from = function from(obj) {\n    return isObservable(obj) ? fromObservable(obj) : require('./isPromise')(obj) ? fromPromise(obj) : fromValue(obj);\n  };\n\n  /**\n   * Creates a RelayObservable, given a function which expects a legacy\n   * Relay Observer as the last argument and which returns a Disposable.\n   *\n   * To support migration to Observable, the function may ignore the\n   * legacy Relay observer and directly return an Observable instead.\n   */\n\n\n  RelayObservable.fromLegacy = function fromLegacy(callback) {\n    return new RelayObservable(function (sink) {\n      var result = callback({\n        onNext: sink.next,\n        onError: sink.error,\n        onCompleted: sink.complete\n      });\n      return isObservable(result) ? result.subscribe(sink) : function () {\n        return result.dispose();\n      };\n    });\n  };\n\n  /**\n   * Similar to promise.catch(), observable.catch() handles error events, and\n   * provides an alternative observable to use in it's place.\n   *\n   * If the catch handler throws a new error, it will appear as an error event\n   * on the resulting Observable.\n   */\n\n\n  RelayObservable.prototype['catch'] = function _catch(fn) {\n    var _this = this;\n\n    return new RelayObservable(function (sink) {\n      var subscription = void 0;\n      _this.subscribe({\n        start: function start(sub) {\n          subscription = sub;\n        },\n        next: sink.next,\n        complete: sink.complete,\n        error: function (_error2) {\n          function error(_x) {\n            return _error2.apply(this, arguments);\n          }\n\n          error.toString = function () {\n            return _error2.toString();\n          };\n\n          return error;\n        }(function (error) {\n          try {\n            fn(error).subscribe({\n              start: function start(sub) {\n                subscription = sub;\n              },\n              next: sink.next,\n              complete: sink.complete,\n              error: sink.error\n            });\n          } catch (error2) {\n            sink.error(error2, true /* isUncaughtThrownError */);\n          }\n        })\n      });\n      return function () {\n        return subscription.unsubscribe();\n      };\n    });\n  };\n\n  /**\n   * Returns a new Observable which returns the same values as this one, but\n   * modified so that the provided Observer is called to perform a side-effects\n   * for all events emitted by the source.\n   *\n   * Any errors that are thrown in the side-effect Observer are unhandled, and\n   * do not affect the source Observable or its Observer.\n   *\n   * This is useful for when debugging your Observables or performing other\n   * side-effects such as logging or performance monitoring.\n   */\n\n\n  RelayObservable.prototype['do'] = function _do(observer) {\n    var _this2 = this;\n\n    return new RelayObservable(function (sink) {\n      var both = function both(action) {\n        return function () {\n          try {\n            observer[action] && observer[action].apply(observer, arguments);\n          } catch (error) {\n            hostReportError(error, true /* isUncaughtThrownError */);\n          }\n          sink[action] && sink[action].apply(sink, arguments);\n        };\n      };\n      return _this2.subscribe({\n        start: both('start'),\n        next: both('next'),\n        error: both('error'),\n        complete: both('complete'),\n        unsubscribe: both('unsubscribe')\n      });\n    });\n  };\n\n  /**\n   * Returns a new Observable which returns the same values as this one, but\n   * modified so that the finally callback is performed after completion,\n   * whether normal or due to error or unsubscription.\n   *\n   * This is useful for cleanup such as resource finalization.\n   */\n\n\n  RelayObservable.prototype['finally'] = function _finally(fn) {\n    var _this3 = this;\n\n    return new RelayObservable(function (sink) {\n      var subscription = _this3.subscribe(sink);\n      return function () {\n        subscription.unsubscribe();\n        fn();\n      };\n    });\n  };\n\n  /**\n   * Returns a new Observable which is identical to this one, unless this\n   * Observable completes before yielding any values, in which case the new\n   * Observable will yield the values from the alternate Observable.\n   *\n   * If this Observable does yield values, the alternate is never subscribed to.\n   *\n   * This is useful for scenarios where values may come from multiple sources\n   * which should be tried in order, i.e. from a cache before a network.\n   */\n\n\n  RelayObservable.prototype.ifEmpty = function ifEmpty(alternate) {\n    var _this4 = this;\n\n    return new RelayObservable(function (sink) {\n      var hasValue = false;\n      var current = _this4.subscribe({\n        next: function next(value) {\n          hasValue = true;\n          sink.next(value);\n        },\n\n        error: sink.error,\n        complete: function complete() {\n          if (hasValue) {\n            sink.complete();\n          } else {\n            current = alternate.subscribe(sink);\n          }\n        }\n      });\n      return function () {\n        current.unsubscribe();\n      };\n    });\n  };\n\n  /**\n   * Observable's primary API: returns an unsubscribable Subscription to the\n   * source of this Observable.\n   */\n\n\n  RelayObservable.prototype.subscribe = function subscribe(observer) {\n    if (process.env.NODE_ENV !== 'production') {\n      // Early runtime errors for ill-formed observers.\n      if (!observer || typeof observer !== 'object') {\n        throw new Error('Observer must be an Object with callbacks: ' + String(observer));\n      }\n    }\n    return _subscribe(this._source, observer);\n  };\n\n  /**\n   * Supports subscription of a legacy Relay Observer, returning a Disposable.\n   */\n\n\n  RelayObservable.prototype.subscribeLegacy = function subscribeLegacy(legacyObserver) {\n    var subscription = this.subscribe({\n      next: legacyObserver.onNext,\n      error: legacyObserver.onError,\n      complete: legacyObserver.onCompleted\n    });\n    return {\n      dispose: subscription.unsubscribe\n    };\n  };\n\n  /**\n   * Returns a new Observerable where each value has been transformed by\n   * the mapping function.\n   */\n\n\n  RelayObservable.prototype.map = function map(fn) {\n    return this.mergeMap(function (value) {\n      return fromValue(fn(value));\n    });\n  };\n\n  /**\n   * Returns a new Observable where each value is replaced with a new Observable\n   * by the mapping function, the results of which returned as a single\n   * merged Observable.\n   */\n\n\n  RelayObservable.prototype.mergeMap = function mergeMap(fn) {\n    var _this5 = this;\n\n    return new RelayObservable(function (sink) {\n      var subscriptions = [];\n\n      function start(subscription) {\n        this._sub = subscription;\n        subscriptions.push(subscription);\n      }\n\n      function complete() {\n        subscriptions.splice(subscriptions.indexOf(this._sub), 1);\n        if (subscriptions.length === 0) {\n          sink.complete();\n        }\n      }\n\n      _this5.subscribe({\n        start: start,\n        next: function next(value) {\n          try {\n            if (!sink.closed) {\n              RelayObservable.from(fn(value)).subscribe({\n                start: start,\n                next: sink.next,\n                error: sink.error,\n                complete: complete\n              });\n            }\n          } catch (error) {\n            sink.error(error, true /* isUncaughtThrownError */);\n          }\n        },\n\n        error: sink.error,\n        complete: complete\n      });\n\n      return function () {\n        subscriptions.forEach(function (sub) {\n          return sub.unsubscribe();\n        });\n        subscriptions.length = 0;\n      };\n    });\n  };\n\n  /**\n   * Returns a new Observable which first mirrors this Observable, then when it\n   * completes, waits for `pollInterval` milliseconds before re-subscribing to\n   * this Observable again, looping in this manner until unsubscribed.\n   *\n   * The returned Observable never completes.\n   */\n\n\n  RelayObservable.prototype.poll = function poll(pollInterval) {\n    var _this6 = this;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof pollInterval !== 'number' || pollInterval <= 0) {\n        throw new Error('RelayObservable: Expected pollInterval to be positive, got: ' + pollInterval);\n      }\n    }\n    return new RelayObservable(function (sink) {\n      var subscription = void 0;\n      var timeout = void 0;\n      var poll = function poll() {\n        subscription = _this6.subscribe({\n          next: sink.next,\n          error: sink.error,\n          complete: function complete() {\n            timeout = setTimeout(poll, pollInterval);\n          }\n        });\n      };\n      poll();\n      return function () {\n        clearTimeout(timeout);\n        subscription.unsubscribe();\n      };\n    });\n  };\n\n  /**\n   * Returns a Promise which resolves when this Observable yields a first value\n   * or when it completes with no value.\n   */\n\n\n  RelayObservable.prototype.toPromise = function toPromise() {\n    var _this7 = this;\n\n    return new Promise(function (resolve, reject) {\n      var subscription = void 0;\n      _this7.subscribe({\n        start: function start(sub) {\n          subscription = sub;\n        },\n        next: function next(val) {\n          resolve(val);\n          subscription.unsubscribe();\n        },\n\n        error: reject,\n        complete: resolve\n      });\n    });\n  };\n\n  return RelayObservable;\n}();\n\n// Use declarations to teach Flow how to check isObservable.\n\n\n// prettier-ignore\nfunction isObservable(obj) {\n  return typeof obj === 'object' && obj !== null && typeof obj.subscribe === 'function';\n}\n\nfunction fromObservable(obj) {\n  return obj instanceof RelayObservable ? obj : new RelayObservable(function (sink) {\n    return obj.subscribe(sink);\n  });\n}\n\nfunction fromPromise(promise) {\n  return new RelayObservable(function (sink) {\n    // Since sink methods do not throw, the resulting Promise can be ignored.\n    promise.then(function (value) {\n      sink.next(value);\n      sink.complete();\n    }, sink.error);\n  });\n}\n\nfunction fromValue(value) {\n  return new RelayObservable(function (sink) {\n    sink.next(value);\n    sink.complete();\n  });\n}\n\nfunction _subscribe(source, observer) {\n  var closed = false;\n  var cleanup = void 0;\n\n  // Ideally we would simply describe a `get closed()` method on the Sink and\n  // Subscription objects below, however not all flow environments we expect\n  // Relay to be used within will support property getters, and many minifier\n  // tools still do not support ES5 syntax. Instead, we can use defineProperty.\n  var withClosed = function withClosed(obj) {\n    return Object.defineProperty(obj, 'closed', { get: function get() {\n        return closed;\n      } });\n  };\n\n  function doCleanup() {\n    if (cleanup) {\n      if (cleanup.unsubscribe) {\n        cleanup.unsubscribe();\n      } else {\n        try {\n          cleanup();\n        } catch (error) {\n          hostReportError(error, true /* isUncaughtThrownError */);\n        }\n      }\n      cleanup = undefined;\n    }\n  }\n\n  // Create a Subscription.\n  var subscription = withClosed({\n    unsubscribe: function unsubscribe() {\n      if (!closed) {\n        closed = true;\n\n        // Tell Observer that unsubscribe was called.\n        try {\n          observer.unsubscribe && observer.unsubscribe(subscription);\n        } catch (error) {\n          hostReportError(error, true /* isUncaughtThrownError */);\n        } finally {\n          doCleanup();\n        }\n      }\n    }\n  });\n\n  // Tell Observer that observation is about to begin.\n  try {\n    observer.start && observer.start(subscription);\n  } catch (error) {\n    hostReportError(error, true /* isUncaughtThrownError */);\n  }\n\n  // If closed already, don't bother creating a Sink.\n  if (closed) {\n    return subscription;\n  }\n\n  // Create a Sink respecting subscription state and cleanup.\n  var sink = withClosed({\n    next: function next(value) {\n      if (!closed && observer.next) {\n        try {\n          observer.next(value);\n        } catch (error) {\n          hostReportError(error, true /* isUncaughtThrownError */);\n        }\n      }\n    },\n    error: function (_error3) {\n      function error(_x2, _x3) {\n        return _error3.apply(this, arguments);\n      }\n\n      error.toString = function () {\n        return _error3.toString();\n      };\n\n      return error;\n    }(function (error, isUncaughtThrownError) {\n      if (closed || !observer.error) {\n        closed = true;\n        hostReportError(error, isUncaughtThrownError || false);\n        doCleanup();\n      } else {\n        closed = true;\n        try {\n          observer.error(error);\n        } catch (error2) {\n          hostReportError(error2, true /* isUncaughtThrownError */);\n        } finally {\n          doCleanup();\n        }\n      }\n    }),\n    complete: function complete() {\n      if (!closed) {\n        closed = true;\n        try {\n          observer.complete && observer.complete();\n        } catch (error) {\n          hostReportError(error, true /* isUncaughtThrownError */);\n        } finally {\n          doCleanup();\n        }\n      }\n    }\n  });\n\n  // If anything goes wrong during observing the source, handle the error.\n  try {\n    cleanup = source(sink);\n  } catch (error) {\n    sink.error(error, true /* isUncaughtThrownError */);\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    // Early runtime errors for ill-formed returned cleanup.\n    if (cleanup !== undefined && typeof cleanup !== 'function' && (!cleanup || typeof cleanup.unsubscribe !== 'function')) {\n      throw new Error('Returned cleanup function which cannot be called: ' + String(cleanup));\n    }\n  }\n\n  // If closed before the source function existed, cleanup now.\n  if (closed) {\n    doCleanup();\n  }\n\n  return subscription;\n}\n\nfunction swallowError(_error, _isUncaughtThrownError) {\n  // do nothing.\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  // Default implementation of HostReportErrors() in development builds.\n  // Can be replaced by the host application environment.\n  RelayObservable.onUnhandledError(function (error, isUncaughtThrownError) {\n    if (typeof fail === 'function') {\n      // In test environments (Jest), fail() immediately fails the current test.\n      fail(String(error));\n    } else if (isUncaughtThrownError) {\n      // Rethrow uncaught thrown errors on the next frame to avoid breaking\n      // current logic.\n      setTimeout(function () {\n        throw error;\n      });\n    } else if (typeof console !== 'undefined') {\n      // Otherwise, log the unhandled error for visibility.\n      // eslint-ignore-next-line no-console\n      console.error('RelayObservable: Unhandled Error', error);\n    }\n  });\n}\n\nmodule.exports = RelayObservable;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/relay-runtime/lib/RelayObservable.js\n ** module id = 142\n ** module chunks = 0\n **/","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @providesModule isPromise\n * \n * @format\n */\n\n'use strict';\n\nfunction isPromise(p) {\n  return !!p && typeof p.then === 'function';\n}\n\nmodule.exports = isPromise;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/relay-runtime/lib/isPromise.js\n ** module id = 143\n ** module chunks = 0\n **/","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @providesModule RelayQueryResponseCache\n * \n * @format\n */\n\n'use strict';\n\nvar _classCallCheck3 = _interopRequireDefault(require('babel-runtime/helpers/classCallCheck'));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\n/**\n * A cache for storing query responses, featuring:\n * - `get` with TTL\n * - cache size limiting, with least-recently *updated* entries purged first\n */\nvar RelayQueryResponseCache = function () {\n  function RelayQueryResponseCache(_ref) {\n    var size = _ref.size,\n        ttl = _ref.ttl;\n    (0, _classCallCheck3['default'])(this, RelayQueryResponseCache);\n\n    require('fbjs/lib/invariant')(size > 0, 'RelayQueryResponseCache: Expected the max cache size to be > 0, got ' + '`%s`.', size);\n    require('fbjs/lib/invariant')(ttl > 0, 'RelayQueryResponseCache: Expected the max ttl to be > 0, got `%s`.', ttl);\n    this._responses = new Map();\n    this._size = size;\n    this._ttl = ttl;\n  }\n\n  RelayQueryResponseCache.prototype.clear = function clear() {\n    this._responses.clear();\n  };\n\n  RelayQueryResponseCache.prototype.get = function get(queryID, variables) {\n    var _this = this;\n\n    var cacheKey = getCacheKey(queryID, variables);\n    this._responses.forEach(function (response, key) {\n      if (!isCurrent(response.fetchTime, _this._ttl)) {\n        _this._responses['delete'](key);\n      }\n    });\n    var response = this._responses.get(cacheKey);\n    return response != null ? response.payload : null;\n  };\n\n  RelayQueryResponseCache.prototype.set = function set(queryID, variables, payload) {\n    var fetchTime = Date.now();\n    var cacheKey = getCacheKey(queryID, variables);\n    this._responses['delete'](cacheKey); // deletion resets key ordering\n    this._responses.set(cacheKey, {\n      fetchTime: fetchTime,\n      payload: payload\n    });\n    // Purge least-recently updated key when max size reached\n    if (this._responses.size > this._size) {\n      var firstKey = this._responses.keys().next();\n      if (!firstKey.done) {\n        this._responses['delete'](firstKey.value);\n      }\n    }\n  };\n\n  return RelayQueryResponseCache;\n}();\n\nfunction getCacheKey(queryID, variables) {\n  return require('./stableJSONStringify')({ queryID: queryID, variables: variables });\n}\n\n/**\n * Determine whether a response fetched at `fetchTime` is still valid given\n * some `ttl`.\n */\nfunction isCurrent(fetchTime, ttl) {\n  return fetchTime + ttl >= Date.now();\n}\n\nmodule.exports = RelayQueryResponseCache;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/relay-runtime/lib/RelayQueryResponseCache.js\n ** module id = 144\n ** module chunks = 0\n **/","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @providesModule RelayMarkSweepStore\n * \n * @format\n */\n\n'use strict';\n\nvar _extends3 = _interopRequireDefault(require('babel-runtime/helpers/extends'));\n\nvar _classCallCheck3 = _interopRequireDefault(require('babel-runtime/helpers/classCallCheck'));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _require = require('./RelayStoreUtils'),\n    UNPUBLISH_RECORD_SENTINEL = _require.UNPUBLISH_RECORD_SENTINEL;\n\n/**\n * @public\n *\n * An implementation of the `Store` interface defined in `RelayStoreTypes`.\n *\n * Note that a Store takes ownership of all records provided to it: other\n * objects may continue to hold a reference to such records but may not mutate\n * them. The static Relay core is architected to avoid mutating records that may have been\n * passed to a store: operations that mutate records will either create fresh\n * records or clone existing records and modify the clones. Record immutability\n * is also enforced in development mode by freezing all records passed to a store.\n */\nvar RelayMarkSweepStore = function () {\n  function RelayMarkSweepStore(source) {\n    (0, _classCallCheck3['default'])(this, RelayMarkSweepStore);\n\n    // Prevent mutation of a record from outside the store.\n    if (process.env.NODE_ENV !== 'production') {\n      var storeIDs = source.getRecordIDs();\n      for (var ii = 0; ii < storeIDs.length; ii++) {\n        var record = source.get(storeIDs[ii]);\n        if (record) {\n          require('./RelayModernRecord').freeze(record);\n        }\n      }\n    }\n    this._hasScheduledGC = false;\n    this._index = 0;\n    this._recordSource = source;\n    this._roots = new Map();\n    this._subscriptions = new Set();\n    this._updatedRecordIDs = {};\n  }\n\n  RelayMarkSweepStore.prototype.getSource = function getSource() {\n    return this._recordSource;\n  };\n\n  RelayMarkSweepStore.prototype.check = function check(selector) {\n    return require('./RelayDataLoader').check(this._recordSource, this._recordSource, selector, []);\n  };\n\n  RelayMarkSweepStore.prototype.retain = function retain(selector) {\n    var _this = this;\n\n    var index = this._index++;\n    var dispose = function dispose() {\n      _this._roots['delete'](index);\n      _this._scheduleGC();\n    };\n    this._roots.set(index, selector);\n    return { dispose: dispose };\n  };\n\n  RelayMarkSweepStore.prototype.lookup = function lookup(selector) {\n    var snapshot = require('./RelayReader').read(this._recordSource, selector);\n    if (process.env.NODE_ENV !== 'production') {\n      require('./deepFreeze')(snapshot);\n    }\n    return snapshot;\n  };\n\n  RelayMarkSweepStore.prototype.notify = function notify() {\n    var _this2 = this;\n\n    this._subscriptions.forEach(function (subscription) {\n      _this2._updateSubscription(subscription);\n    });\n    this._updatedRecordIDs = {};\n  };\n\n  RelayMarkSweepStore.prototype.publish = function publish(source) {\n    updateTargetFromSource(this._recordSource, source, this._updatedRecordIDs);\n  };\n\n  RelayMarkSweepStore.prototype.subscribe = function subscribe(snapshot, callback) {\n    var _this3 = this;\n\n    var subscription = { callback: callback, snapshot: snapshot };\n    var dispose = function dispose() {\n      _this3._subscriptions['delete'](subscription);\n    };\n    this._subscriptions.add(subscription);\n    return { dispose: dispose };\n  };\n\n  // Internal API\n\n\n  RelayMarkSweepStore.prototype.__getUpdatedRecordIDs = function __getUpdatedRecordIDs() {\n    return this._updatedRecordIDs;\n  };\n\n  RelayMarkSweepStore.prototype._updateSubscription = function _updateSubscription(subscription) {\n    var callback = subscription.callback,\n        snapshot = subscription.snapshot;\n\n    if (!require('./hasOverlappingIDs')(snapshot, this._updatedRecordIDs)) {\n      return;\n    }\n\n    var _RelayReader$read = require('./RelayReader').read(this._recordSource, snapshot),\n        data = _RelayReader$read.data,\n        seenRecords = _RelayReader$read.seenRecords;\n\n    var nextData = require('./recycleNodesInto')(snapshot.data, data);\n    var nextSnapshot = (0, _extends3['default'])({}, snapshot, {\n      data: nextData,\n      seenRecords: seenRecords\n    });\n    if (process.env.NODE_ENV !== 'production') {\n      require('./deepFreeze')(nextSnapshot);\n    }\n    subscription.snapshot = nextSnapshot;\n    if (nextSnapshot.data !== snapshot.data) {\n      callback(nextSnapshot);\n    }\n  };\n\n  RelayMarkSweepStore.prototype._scheduleGC = function _scheduleGC() {\n    var _this4 = this;\n\n    if (this._hasScheduledGC) {\n      return;\n    }\n    this._hasScheduledGC = true;\n    require('fbjs/lib/resolveImmediate')(function () {\n      _this4._gc();\n      _this4._hasScheduledGC = false;\n    });\n  };\n\n  RelayMarkSweepStore.prototype._gc = function _gc() {\n    var _this5 = this;\n\n    var references = new Set();\n    // Mark all records that are traversable from a root\n    this._roots.forEach(function (selector) {\n      require('./RelayReferenceMarker').mark(_this5._recordSource, selector, references);\n    });\n    // Short-circuit if *nothing* is referenced\n    if (!references.size) {\n      this._recordSource.clear();\n      return;\n    }\n    // Evict any unreferenced nodes\n    var storeIDs = this._recordSource.getRecordIDs();\n    for (var ii = 0; ii < storeIDs.length; ii++) {\n      var dataID = storeIDs[ii];\n      if (!references.has(dataID)) {\n        this._recordSource.remove(dataID);\n      }\n    }\n  };\n\n  return RelayMarkSweepStore;\n}();\n\n/**\n * Updates the target with information from source, also updating a mapping of\n * which records in the target were changed as a result.\n */\n\n\nfunction updateTargetFromSource(target, source, updatedRecordIDs) {\n  var dataIDs = source.getRecordIDs();\n  for (var ii = 0; ii < dataIDs.length; ii++) {\n    var dataID = dataIDs[ii];\n    var sourceRecord = source.get(dataID);\n    var targetRecord = target.get(dataID);\n    // Prevent mutation of a record from outside the store.\n    if (process.env.NODE_ENV !== 'production') {\n      if (sourceRecord) {\n        require('./RelayModernRecord').freeze(sourceRecord);\n      }\n    }\n    if (sourceRecord === UNPUBLISH_RECORD_SENTINEL) {\n      // Unpublish a record\n      target.remove(dataID);\n      updatedRecordIDs[dataID] = true;\n    } else if (sourceRecord && targetRecord) {\n      var nextRecord = require('./RelayModernRecord').update(targetRecord, sourceRecord);\n      if (nextRecord !== targetRecord) {\n        // Prevent mutation of a record from outside the store.\n        if (process.env.NODE_ENV !== 'production') {\n          require('./RelayModernRecord').freeze(nextRecord);\n        }\n        updatedRecordIDs[dataID] = true;\n        target.set(dataID, nextRecord);\n      }\n    } else if (sourceRecord === null) {\n      target['delete'](dataID);\n      if (targetRecord !== null) {\n        updatedRecordIDs[dataID] = true;\n      }\n    } else if (sourceRecord) {\n      target.set(dataID, sourceRecord);\n      updatedRecordIDs[dataID] = true;\n    } // don't add explicit undefined\n  }\n}\n\nrequire('./RelayProfiler').instrumentMethods(RelayMarkSweepStore.prototype, {\n  lookup: 'RelayMarkSweepStore.prototype.lookup',\n  notify: 'RelayMarkSweepStore.prototype.notify',\n  publish: 'RelayMarkSweepStore.prototype.publish',\n  retain: 'RelayMarkSweepStore.prototype.retain',\n  subscribe: 'RelayMarkSweepStore.prototype.subscribe'\n});\n\nmodule.exports = RelayMarkSweepStore;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/relay-runtime/lib/RelayMarkSweepStore.js\n ** module id = 145\n ** module chunks = 0\n **/","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @providesModule hasOverlappingIDs\n * \n * @format\n */\n\n'use strict';\n\nfunction hasOverlappingIDs(snapshot, updatedRecordIDs) {\n  var keys = Object.keys(snapshot.seenRecords);\n  for (var ii = 0; ii < keys.length; ii++) {\n    if (updatedRecordIDs.hasOwnProperty(keys[ii])) {\n      return true;\n    }\n  }\n  return false;\n}\n\nmodule.exports = hasOverlappingIDs;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/relay-runtime/lib/hasOverlappingIDs.js\n ** module id = 146\n ** module chunks = 0\n **/","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @providesModule recycleNodesInto\n * \n * @format\n */\n\n'use strict';\n\n/**\n * Recycles subtrees from `prevData` by replacing equal subtrees in `nextData`.\n */\n\nfunction recycleNodesInto(prevData, nextData) {\n  if (prevData === nextData || typeof prevData !== 'object' || !prevData || typeof nextData !== 'object' || !nextData) {\n    return nextData;\n  }\n  var canRecycle = false;\n\n  // Assign local variables to preserve Flow type refinement.\n  var prevArray = Array.isArray(prevData) ? prevData : null;\n  var nextArray = Array.isArray(nextData) ? nextData : null;\n  if (prevArray && nextArray) {\n    canRecycle = nextArray.reduce(function (wasEqual, nextItem, ii) {\n      var prevValue = prevArray[ii];\n      var nextValue = recycleNodesInto(prevValue, nextItem);\n      if (nextValue !== nextArray[ii]) {\n        nextArray[ii] = nextValue;\n      }\n      return wasEqual && nextArray[ii] === prevArray[ii];\n    }, true) && prevArray.length === nextArray.length;\n  } else if (!prevArray && !nextArray) {\n    // Assign local variables to preserve Flow type refinement.\n    var prevObject = prevData;\n    var nextObject = nextData;\n    var prevKeys = Object.keys(prevObject);\n    var nextKeys = Object.keys(nextObject);\n    canRecycle = nextKeys.reduce(function (wasEqual, key) {\n      var prevValue = prevObject[key];\n      var nextValue = recycleNodesInto(prevValue, nextObject[key]);\n      if (nextValue !== nextObject[key]) {\n        nextObject[key] = nextValue;\n      }\n      return wasEqual && nextObject[key] === prevObject[key];\n    }, true) && prevKeys.length === nextKeys.length;\n  }\n  return canRecycle ? prevData : nextData;\n}\n\nmodule.exports = recycleNodesInto;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/relay-runtime/lib/recycleNodesInto.js\n ** module id = 147\n ** module chunks = 0\n **/","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @providesModule RelayReferenceMarker\n * \n * @format\n */\n\n'use strict';\n\nvar _classCallCheck3 = _interopRequireDefault(require('babel-runtime/helpers/classCallCheck'));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar CONDITION = require('./RelayConcreteNode').CONDITION,\n    FRAGMENT_SPREAD = require('./RelayConcreteNode').FRAGMENT_SPREAD,\n    INLINE_FRAGMENT = require('./RelayConcreteNode').INLINE_FRAGMENT,\n    LINKED_FIELD = require('./RelayConcreteNode').LINKED_FIELD,\n    LINKED_HANDLE = require('./RelayConcreteNode').LINKED_HANDLE,\n    SCALAR_FIELD = require('./RelayConcreteNode').SCALAR_FIELD,\n    SCALAR_HANDLE = require('./RelayConcreteNode').SCALAR_HANDLE;\n\nvar getStorageKey = require('./RelayStoreUtils').getStorageKey;\n\nfunction mark(recordSource, selector, references) {\n  var dataID = selector.dataID,\n      node = selector.node,\n      variables = selector.variables;\n\n  var marker = new RelayReferenceMarker(recordSource, variables, references);\n  marker.mark(node, dataID);\n}\n\n/**\n * @private\n */\n\nvar RelayReferenceMarker = function () {\n  function RelayReferenceMarker(recordSource, variables, references) {\n    (0, _classCallCheck3['default'])(this, RelayReferenceMarker);\n\n    this._references = references;\n    this._recordSource = recordSource;\n    this._variables = variables;\n  }\n\n  RelayReferenceMarker.prototype.mark = function mark(node, dataID) {\n    this._traverse(node, dataID);\n  };\n\n  RelayReferenceMarker.prototype._traverse = function _traverse(node, dataID) {\n    this._references.add(dataID);\n    var record = this._recordSource.get(dataID);\n    if (record == null) {\n      return;\n    }\n    this._traverseSelections(node.selections, record);\n  };\n\n  RelayReferenceMarker.prototype._getVariableValue = function _getVariableValue(name) {\n    require('fbjs/lib/invariant')(this._variables.hasOwnProperty(name), 'RelayReferenceMarker(): Undefined variable `%s`.', name);\n    return this._variables[name];\n  };\n\n  RelayReferenceMarker.prototype._traverseSelections = function _traverseSelections(selections, record) {\n    var _this = this;\n\n    selections.forEach(function (selection) {\n      if (selection.kind === LINKED_FIELD) {\n        if (selection.plural) {\n          _this._traversePluralLink(selection, record);\n        } else {\n          _this._traverseLink(selection, record);\n        }\n      } else if (selection.kind === CONDITION) {\n        var conditionValue = _this._getVariableValue(selection.condition);\n        if (conditionValue === selection.passingValue) {\n          _this._traverseSelections(selection.selections, record);\n        }\n      } else if (selection.kind === INLINE_FRAGMENT) {\n        var typeName = require('./RelayModernRecord').getType(record);\n        if (typeName != null && typeName === selection.type) {\n          _this._traverseSelections(selection.selections, record);\n        }\n      } else if (selection.kind === FRAGMENT_SPREAD) {\n        require('fbjs/lib/invariant')(false, 'RelayReferenceMarker(): Unexpected fragment spread `...%s`, ' + 'expected all fragments to be inlined.', selection.name);\n      } else if (selection.kind === LINKED_HANDLE) {\n        // The selections for a \"handle\" field are the same as those of the\n        // original linked field where the handle was applied. Reference marking\n        // therefore requires traversing the original field selections against\n        // the synthesized client field.\n        //\n        // TODO: Instead of finding the source field in `selections`, change\n        // the concrete structure to allow shared subtrees, and have the linked\n        // handle directly refer to the same selections as the LinkedField that\n        // it was split from.\n        var handleField = require('./cloneRelayHandleSourceField')(selection, selections, _this._variables);\n        if (handleField.plural) {\n          _this._traversePluralLink(handleField, record);\n        } else {\n          _this._traverseLink(handleField, record);\n        }\n      } else {\n        require('fbjs/lib/invariant')(selection.kind === SCALAR_FIELD || selection.kind === SCALAR_HANDLE, 'RelayReferenceMarker(): Unexpected ast kind `%s`.', selection.kind);\n      }\n    });\n  };\n\n  RelayReferenceMarker.prototype._traverseLink = function _traverseLink(field, record) {\n    var storageKey = getStorageKey(field, this._variables);\n    var linkedID = require('./RelayModernRecord').getLinkedRecordID(record, storageKey);\n\n    if (linkedID == null) {\n      return;\n    }\n    this._traverse(field, linkedID);\n  };\n\n  RelayReferenceMarker.prototype._traversePluralLink = function _traversePluralLink(field, record) {\n    var _this2 = this;\n\n    var storageKey = getStorageKey(field, this._variables);\n    var linkedIDs = require('./RelayModernRecord').getLinkedRecordIDs(record, storageKey);\n\n    if (linkedIDs == null) {\n      return;\n    }\n    linkedIDs.forEach(function (linkedID) {\n      if (linkedID != null) {\n        _this2._traverse(field, linkedID);\n      }\n    });\n  };\n\n  return RelayReferenceMarker;\n}();\n\nmodule.exports = { mark: mark };\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/relay-runtime/lib/RelayReferenceMarker.js\n ** module id = 160\n ** module chunks = 0\n **/","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @providesModule applyRelayModernOptimisticMutation\n * \n * @format\n */\n\n'use strict';\n\n/**\n * Higher-level helper function to execute a mutation against a specific\n * environment.\n */\nfunction applyRelayModernOptimisticMutation(environment, config) {\n  require('fbjs/lib/invariant')(require('./isRelayModernEnvironment')(environment), 'commitRelayModernMutation: expect `environment` to be an instance of ' + '`RelayModernEnvironment`.');\n  var _environment$unstable = environment.unstable_internal,\n      createOperationSelector = _environment$unstable.createOperationSelector,\n      getOperation = _environment$unstable.getOperation;\n\n  var mutation = getOperation(config.mutation);\n  var optimisticUpdater = config.optimisticUpdater;\n  var configs = config.configs,\n      optimisticResponse = config.optimisticResponse,\n      variables = config.variables;\n\n  var operation = createOperationSelector(mutation, variables);\n  if (configs) {\n    var _setRelayModernMutati = require('./setRelayModernMutationConfigs')(configs, mutation, optimisticUpdater);\n\n    optimisticUpdater = _setRelayModernMutati.optimisticUpdater;\n  }\n\n  return environment.applyUpdate({\n    operation: operation,\n    selectorStoreUpdater: optimisticUpdater,\n    response: optimisticResponse\n  });\n}\n\nmodule.exports = applyRelayModernOptimisticMutation;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/relay-runtime/lib/applyRelayModernOptimisticMutation.js\n ** module id = 161\n ** module chunks = 0\n **/","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @providesModule isRelayModernEnvironment\n * \n * @format\n */\n\n'use strict';\n\n/**\n * Determine if a given value is an object that implements the `Environment`\n * interface defined in `RelayStoreTypes`.\n *\n * Use a sigil for detection to avoid a realm-specific instanceof check, and to\n * aid in module tree-shaking to avoid requiring all of RelayRuntime just to\n * detect its environment.\n */\n\nfunction isRelayModernEnvironment(environment) {\n  return Boolean(environment && environment['@@RelayModernEnvironment']);\n}\n\nmodule.exports = isRelayModernEnvironment;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/relay-runtime/lib/isRelayModernEnvironment.js\n ** module id = 162\n ** module chunks = 0\n **/","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @providesModule setRelayModernMutationConfigs\n * \n * @format\n */\n\n'use strict';\n\nfunction setRelayModernMutationConfigs(configs, operation, optimisticUpdater, updater) {\n  var configOptimisticUpdates = optimisticUpdater ? [optimisticUpdater] : [];\n  var configUpdates = updater ? [updater] : [];\n  configs.forEach(function (config) {\n    switch (config.type) {\n      case 'NODE_DELETE':\n        var nodeDeleteResult = nodeDelete(config, operation);\n        if (nodeDeleteResult) {\n          configOptimisticUpdates.push(nodeDeleteResult);\n          configUpdates.push(nodeDeleteResult);\n        }\n        break;\n      case 'RANGE_ADD':\n        var rangeAddResult = rangeAdd(config, operation);\n        if (rangeAddResult) {\n          configOptimisticUpdates.push(rangeAddResult);\n          configUpdates.push(rangeAddResult);\n        }\n        break;\n      case 'RANGE_DELETE':\n        var rangeDeleteResult = rangeDelete(config, operation);\n        if (rangeDeleteResult) {\n          configOptimisticUpdates.push(rangeDeleteResult);\n          configUpdates.push(rangeDeleteResult);\n        }\n        break;\n    }\n  });\n  optimisticUpdater = function optimisticUpdater(store, data) {\n    configOptimisticUpdates.forEach(function (eachOptimisticUpdater) {\n      eachOptimisticUpdater(store, data);\n    });\n  };\n  updater = function updater(store, data) {\n    configUpdates.forEach(function (eachUpdater) {\n      eachUpdater(store, data);\n    });\n  };\n  return { optimisticUpdater: optimisticUpdater, updater: updater };\n}\n\nfunction nodeDelete(config, operation) {\n  var updater = void 0;\n  if (config.type !== 'NODE_DELETE') {\n    return;\n  }\n  var deletedIDFieldName = config.deletedIDFieldName;\n\n  var rootField = getRootField(operation);\n  if (rootField) {\n    updater = function updater(store, data) {\n      var payload = store.getRootField(rootField);\n      if (!payload) {\n        return;\n      }\n      var deleteID = payload.getValue(deletedIDFieldName);\n      var deleteIDs = Array.isArray(deleteID) ? deleteID : [deleteID];\n      deleteIDs.forEach(function (id) {\n        if (id && typeof id === 'string') {\n          store['delete'](id);\n        }\n      });\n    };\n  }\n  return updater;\n}\n\nfunction rangeAdd(config, operation) {\n  var updater = void 0;\n  if (config.type !== 'RANGE_ADD') {\n    return;\n  }\n  var parentID = config.parentID,\n      connectionInfo = config.connectionInfo,\n      edgeName = config.edgeName;\n\n  if (!parentID) {\n    require('fbjs/lib/warning')(false, 'setRelayModernMutationConfigs: For mutation config RANGE_ADD ' + 'to work you must include a parentID');\n    return;\n  }\n  var rootField = getRootField(operation);\n  if (connectionInfo && rootField) {\n    updater = function updater(store, data) {\n      var parent = store.get(parentID);\n      if (parent) {\n        var payload = store.getRootField(rootField);\n        if (!payload) {\n          return;\n        }\n        var serverEdge = payload.getLinkedRecord(edgeName);\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = connectionInfo[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var info = _step.value;\n\n            if (serverEdge) {\n              var connection = require('./RelayConnectionHandler').getConnection(parent, info.key, info.filters);\n              if (!connection) {\n                return;\n              }\n              var clientEdge = require('./RelayConnectionHandler').buildConnectionEdge(store, connection, serverEdge);\n              if (!clientEdge) {\n                return;\n              }\n              switch (info.rangeBehavior) {\n                case 'append':\n                  require('./RelayConnectionHandler').insertEdgeAfter(connection, clientEdge);\n                  break;\n                case 'ignore':\n                  // Do nothing\n                  break;\n                case 'prepend':\n                  require('./RelayConnectionHandler').insertEdgeBefore(connection, clientEdge);\n                  break;\n                default:\n                  require('fbjs/lib/warning')(false, 'setRelayModernMutationConfigs: RANGE_ADD range behavior ' + ('\\'' + info.rangeBehavior + '\\' will not work as expected in RelayModern, ') + \"supported range behaviors are 'append', 'prepend', and \" + \"'ignore'\");\n                  break;\n              }\n            }\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator['return']) {\n              _iterator['return']();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n      }\n    };\n  }\n  return updater;\n}\n\nfunction rangeDelete(config, operation) {\n  var updater = void 0;\n  if (config.type !== 'RANGE_DELETE') {\n    return;\n  }\n  var parentID = config.parentID,\n      connectionKeys = config.connectionKeys,\n      pathToConnection = config.pathToConnection,\n      deletedIDFieldName = config.deletedIDFieldName;\n\n  if (!parentID) {\n    require('fbjs/lib/warning')(false, 'setRelayModernMutationConfigs: For mutation config RANGE_DELETE ' + 'to work you must include a parentID');\n    return;\n  }\n  var rootField = getRootField(operation);\n  if (rootField) {\n    updater = function updater(store, data) {\n      if (data) {\n        var deleteIDs = [];\n        var deletedIDField = data[rootField];\n        if (deletedIDField && Array.isArray(deletedIDFieldName)) {\n          var _iteratorNormalCompletion2 = true;\n          var _didIteratorError2 = false;\n          var _iteratorError2 = undefined;\n\n          try {\n            for (var _iterator2 = deletedIDFieldName[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n              var eachField = _step2.value;\n\n              if (deletedIDField && typeof deletedIDField === 'object') {\n                deletedIDField = deletedIDField[eachField];\n              }\n            }\n          } catch (err) {\n            _didIteratorError2 = true;\n            _iteratorError2 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion2 && _iterator2['return']) {\n                _iterator2['return']();\n              }\n            } finally {\n              if (_didIteratorError2) {\n                throw _iteratorError2;\n              }\n            }\n          }\n\n          if (Array.isArray(deletedIDField)) {\n            deletedIDField.forEach(function (idObject) {\n              if (idObject && idObject.id && typeof idObject === 'object' && typeof idObject.id === 'string') {\n                deleteIDs.push(idObject.id);\n              }\n            });\n          } else if (deletedIDField && deletedIDField.id && typeof deletedIDField.id === 'string') {\n            deleteIDs.push(deletedIDField.id);\n          }\n        } else if (deletedIDField && typeof deletedIDFieldName === 'string' && typeof deletedIDField === 'object') {\n          deletedIDField = deletedIDField[deletedIDFieldName];\n          if (typeof deletedIDField === 'string') {\n            deleteIDs.push(deletedIDField);\n          } else if (Array.isArray(deletedIDField)) {\n            deletedIDField.forEach(function (id) {\n              if (typeof id === 'string') {\n                deleteIDs.push(id);\n              }\n            });\n          }\n        }\n        deleteNode(parentID, connectionKeys, pathToConnection, store, deleteIDs);\n      }\n    };\n  }\n  return updater;\n}\n\nfunction deleteNode(parentID, connectionKeys, pathToConnection, store, deleteIDs) {\n  require('fbjs/lib/warning')(connectionKeys, 'setRelayModernMutationConfigs: RANGE_DELETE must provide a ' + 'connectionKeys');\n  var parent = store.get(parentID);\n  if (!parent) {\n    return;\n  }\n  if (pathToConnection.length >= 2) {\n    var recordProxy = parent;\n    for (var i = 1; i < pathToConnection.length - 1; i++) {\n      if (recordProxy) {\n        recordProxy = recordProxy.getLinkedRecord(pathToConnection[i]);\n      }\n    }\n    // Should never enter loop except edge cases\n    if (connectionKeys && recordProxy) {\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        var _loop = function _loop() {\n          var key = _step3.value;\n\n          var connection = require('./RelayConnectionHandler').getConnection(recordProxy, key.key, key.filters);\n          if (connection) {\n            deleteIDs.forEach(function (deleteID) {\n              require('./RelayConnectionHandler').deleteNode(connection, deleteID);\n            });\n            return 'break';\n          }\n        };\n\n        for (var _iterator3 = connectionKeys[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var _ret = _loop();\n\n          if (_ret === 'break') break;\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3['return']) {\n            _iterator3['return']();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n    } else {\n      require('fbjs/lib/warning')(false, 'setRelayModernMutationConfigs: RANGE_DELETE ' + 'pathToConnection is incorrect. Unable to find connection with ' + 'parentID: %s and path: %s', parentID, pathToConnection.toString());\n    }\n  } else {\n    require('fbjs/lib/warning')(false, 'setRelayModernMutationConfigs: RANGE_DELETE ' + 'pathToConnection must include at least parent and connection');\n  }\n}\n\nfunction getRootField(operation) {\n  var rootField = void 0;\n  if (operation.fragment && operation.fragment.selections && operation.fragment.selections.length > 0 && operation.fragment.selections[0].kind === 'LinkedField') {\n    rootField = operation.fragment.selections[0].name;\n  }\n  return rootField;\n}\n\nmodule.exports = setRelayModernMutationConfigs;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/relay-runtime/lib/setRelayModernMutationConfigs.js\n ** module id = 163\n ** module chunks = 0\n **/","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @providesModule commitLocalUpdate\n * \n * @format\n */\n\n'use strict';\n\nfunction commitLocalUpdate(environment, updater) {\n  environment.commitUpdate(updater);\n}\n\nmodule.exports = commitLocalUpdate;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/relay-runtime/lib/commitLocalUpdate.js\n ** module id = 164\n ** module chunks = 0\n **/","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @providesModule commitRelayModernMutation\n * \n * @format\n */\n\n'use strict';\n\n/**\n * Higher-level helper function to execute a mutation against a specific\n * environment.\n */\nfunction commitRelayModernMutation(\n/* $FlowFixMe(>=0.55.0 site=www) This comment suppresses an error found when\n * Flow v0.55 was deployed. To see the error delete this comment and run\n * Flow. */\nenvironment, config) {\n  require('fbjs/lib/invariant')(require('./isRelayModernEnvironment')(environment), 'commitRelayModernMutation: expect `environment` to be an instance of ' + '`RelayModernEnvironment`.');\n  var _environment$unstable = environment.unstable_internal,\n      createOperationSelector = _environment$unstable.createOperationSelector,\n      getOperation = _environment$unstable.getOperation;\n\n  var mutation = getOperation(config.mutation);\n  var optimisticResponse = config.optimisticResponse,\n      optimisticUpdater = config.optimisticUpdater,\n      updater = config.updater;\n  var configs = config.configs,\n      onError = config.onError,\n      variables = config.variables,\n      uploadables = config.uploadables;\n\n  var operation = createOperationSelector(mutation, variables);\n  // TODO: remove this check after we fix flow.\n  if (typeof optimisticResponse === 'function') {\n    optimisticResponse = optimisticResponse();\n    require('fbjs/lib/warning')(false, 'commitRelayModernMutation: Expected `optimisticResponse` to be an object, ' + 'received a function.');\n  }\n  if (optimisticResponse && mutation.selections && mutation.selections.length === 1 && mutation.selections[0].kind === 'LinkedField') {\n    var mutationRoot = mutation.selections[0].name;\n    require('fbjs/lib/warning')(optimisticResponse[mutationRoot], 'commitRelayModernMutation: Expected `optimisticResponse` to be wrapped ' + 'in mutation name `%s`', mutationRoot);\n  }\n  if (configs) {\n    var _setRelayModernMutati = require('./setRelayModernMutationConfigs')(configs, mutation, optimisticUpdater, updater);\n\n    optimisticUpdater = _setRelayModernMutati.optimisticUpdater;\n    updater = _setRelayModernMutati.updater;\n  }\n  return environment.executeMutation({\n    operation: operation,\n    optimisticResponse: optimisticResponse,\n    optimisticUpdater: optimisticUpdater,\n    updater: updater,\n    uploadables: uploadables\n  }).subscribeLegacy({\n    onNext: function onNext(payload) {\n      // NOTE: commitRelayModernMutation has a non-standard use of\n      // onCompleted() by calling it on every next value. It may be called\n      // multiple times if a network request produces multiple responses.\n      var onCompleted = config.onCompleted;\n\n      if (onCompleted) {\n        var snapshot = environment.lookup(operation.fragment);\n        onCompleted(snapshot.data, payload.errors);\n      }\n    },\n    onError: onError\n  });\n}\n\nmodule.exports = commitRelayModernMutation;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/relay-runtime/lib/commitRelayModernMutation.js\n ** module id = 165\n ** module chunks = 0\n **/","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @providesModule fetchRelayModernQuery\n * \n * @format\n */\n\n'use strict';\n\n/**\n * A helper function to fetch the results of a query. Note that results for\n * fragment spreads are masked: fields must be explicitly listed in the query in\n * order to be accessible in the result object.\n *\n * NOTE: This module is primarily intended for integrating with classic APIs.\n * Most product code should use a Renderer or Container.\n *\n * TODO(t16875667): The return type should be `Promise<?SelectorData>`, but\n * that's not really helpful as `SelectorData` is essentially just `mixed`. We\n * can probably leverage generated flow types here to return the real expected\n * shape.\n */\nfunction fetchRelayModernQuery(environment, taggedNode, variables, cacheConfig) {\n  require('fbjs/lib/invariant')(environment.unstable_internal, 'fetchRelayModernQuery: Expected a valid Relay environment, got `%s`.', environment);\n  var _environment$unstable = environment.unstable_internal,\n      createOperationSelector = _environment$unstable.createOperationSelector,\n      getOperation = _environment$unstable.getOperation;\n\n  var query = getOperation(taggedNode);\n  var operation = createOperationSelector(query, variables);\n\n  return environment.execute({ operation: operation, cacheConfig: cacheConfig }).map(function () {\n    return environment.lookup(operation.fragment).data;\n  }).toPromise();\n}\n\nmodule.exports = fetchRelayModernQuery;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/relay-runtime/lib/fetchRelayModernQuery.js\n ** module id = 166\n ** module chunks = 0\n **/","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @providesModule requestRelaySubscription\n * \n * @format\n */\n\n'use strict';\n\nfunction requestRelaySubscription(environment, config) {\n  var _environment$unstable = environment.unstable_internal,\n      createOperationSelector = _environment$unstable.createOperationSelector,\n      getOperation = _environment$unstable.getOperation;\n\n  var subscription = getOperation(config.subscription);\n  var configs = config.configs,\n      onCompleted = config.onCompleted,\n      onError = config.onError,\n      onNext = config.onNext,\n      variables = config.variables;\n\n  var operation = createOperationSelector(subscription, variables);\n\n  require('fbjs/lib/warning')(!(config.updater && configs), 'requestRelaySubscription: Expected only one of `updater` and `configs` to be provided');\n\n  var _ref = configs ? require('./setRelayModernMutationConfigs')(configs, subscription, null /* optimisticUpdater */\n  , config.updater) : config,\n      updater = _ref.updater;\n\n  return environment.execute({\n    operation: operation,\n    updater: updater,\n    cacheConfig: { force: true }\n  }).map(function () {\n    return environment.lookup(operation.fragment).data;\n  }).subscribeLegacy({\n    onNext: onNext,\n    onError: onError,\n    onCompleted: onCompleted\n  });\n}\n\nmodule.exports = requestRelaySubscription;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/relay-runtime/lib/requestRelaySubscription.js\n ** module id = 167\n ** module chunks = 0\n **/","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @providesModule simpleClone\n * \n * @format\n */\n\n'use strict';\n\n/**\n * A helper to create a deep clone of a value, plain Object, or array of such.\n *\n * Does not support RegExp, Date, other classes, or self-referential values.\n */\nfunction simpleClone(value) {\n  if (Array.isArray(value)) {\n    return value.map(simpleClone);\n  } else if (value && typeof value === 'object') {\n    return require('fbjs/lib/mapObject')(value, simpleClone);\n  } else {\n    return value;\n  }\n}\n\nmodule.exports = simpleClone;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/relay-runtime/lib/simpleClone.js\n ** module id = 168\n ** module chunks = 0\n **/","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @providesModule ReactRelayQueryRenderer\n * \n * @format\n */\n\n'use strict';\n\nvar _extends3 = _interopRequireDefault(require('babel-runtime/helpers/extends'));\n\nvar _classCallCheck3 = _interopRequireDefault(require('babel-runtime/helpers/classCallCheck'));\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(require('babel-runtime/helpers/possibleConstructorReturn'));\n\nvar _inherits3 = _interopRequireDefault(require('babel-runtime/helpers/inherits'));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\n/**\n * @public\n *\n * Orchestrates fetching and rendering data for a single view or view hierarchy:\n * - Fetches the query/variables using the given network implementation.\n * - Normalizes the response(s) to that query, publishing them to the given\n *   store.\n * - Renders the pending/fail/success states with the provided render function.\n * - Subscribes for updates to the root data and re-renders with any changes.\n */\nvar ReactRelayQueryRenderer = function (_React$Component) {\n  (0, _inherits3['default'])(ReactRelayQueryRenderer, _React$Component);\n\n  function ReactRelayQueryRenderer(props, context) {\n    (0, _classCallCheck3['default'])(this, ReactRelayQueryRenderer);\n\n    var _this = (0, _possibleConstructorReturn3['default'])(this, _React$Component.call(this, props, context));\n\n    _this._onChange = function (snapshot) {\n      _this.setState({\n        readyState: (0, _extends3['default'])({}, _this.state.readyState, {\n          props: snapshot.data\n        })\n      });\n    };\n\n    _this._pendingFetch = null;\n    _this._rootSubscription = null;\n    _this._selectionReference = null;\n\n    _this.state = {\n      readyState: _this._fetchForProps(props)\n    };\n    return _this;\n  }\n\n  ReactRelayQueryRenderer.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    if (nextProps.query !== this.props.query || nextProps.environment !== this.props.environment || !require('fbjs/lib/areEqual')(nextProps.variables, this.props.variables)) {\n      this.setState({\n        readyState: this._fetchForProps(nextProps)\n      });\n    }\n  };\n\n  ReactRelayQueryRenderer.prototype.componentWillUnmount = function componentWillUnmount() {\n    this._release();\n  };\n\n  ReactRelayQueryRenderer.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps, nextState) {\n    return nextProps.render !== this.props.render || nextState.readyState !== this.state.readyState;\n  };\n\n  ReactRelayQueryRenderer.prototype._release = function _release() {\n    if (this._pendingFetch) {\n      this._pendingFetch.dispose();\n      this._pendingFetch = null;\n    }\n    if (this._rootSubscription) {\n      this._rootSubscription.dispose();\n      this._rootSubscription = null;\n    }\n    if (this._selectionReference) {\n      this._selectionReference.dispose();\n      this._selectionReference = null;\n    }\n  };\n\n  ReactRelayQueryRenderer.prototype._fetchForProps = function _fetchForProps(props) {\n    // TODO (#16225453) QueryRenderer works with old and new environment, but\n    // the flow typing doesn't quite work abstracted.\n    var environment = props.environment;\n\n    var query = props.query,\n        variables = props.variables;\n\n    if (query) {\n      var _environment$unstable = environment.unstable_internal,\n          createOperationSelector = _environment$unstable.createOperationSelector,\n          getOperation = _environment$unstable.getOperation;\n\n      var operation = createOperationSelector(getOperation(query), variables);\n      this._relayContext = {\n        environment: environment,\n        variables: operation.variables\n      };\n      return this._fetch(operation, props.cacheConfig) || getDefaultState();\n    } else {\n      this._relayContext = {\n        environment: environment,\n        variables: variables\n      };\n      this._release();\n      return {\n        error: null,\n        props: {},\n        retry: null\n      };\n    }\n  };\n\n  ReactRelayQueryRenderer.prototype._fetch = function _fetch(operation, cacheConfig) {\n    var _this2 = this;\n\n    var environment = this._relayContext.environment;\n\n    // Immediately retain the results of the new query to prevent relevant data\n    // from being freed. This is not strictly required if all new data is\n    // fetched in a single step, but is necessary if the network could attempt\n    // to incrementally load data (ex: multiple query entries or incrementally\n    // loading records from disk cache).\n\n    var nextReference = environment.retain(operation.root);\n\n    var readyState = getDefaultState();\n    var snapshot = void 0; // results of the root fragment\n    var hasSyncResult = false;\n    var hasFunctionReturned = false;\n\n    if (this._pendingFetch) {\n      this._pendingFetch.dispose();\n    }\n    if (this._rootSubscription) {\n      this._rootSubscription.dispose();\n    }\n\n    var request = environment.execute({ operation: operation, cacheConfig: cacheConfig })['finally'](function () {\n      _this2._pendingFetch = null;\n    }).subscribe({\n      next: function next() {\n        // `next` can be called multiple times by network layers that support\n        // data subscriptions. Wait until the first payload to render `props`\n        // and subscribe for data updates.\n        if (snapshot) {\n          return;\n        }\n        snapshot = environment.lookup(operation.fragment);\n        readyState = {\n          error: null,\n          props: snapshot.data,\n          retry: function retry() {\n            // Do not reset the default state if refetching after success,\n            // handling the case where _fetch may return syncronously instead\n            // of calling setState.\n            var syncReadyState = _this2._fetch(operation, cacheConfig);\n            if (syncReadyState) {\n              _this2.setState({ readyState: syncReadyState });\n            }\n          }\n        };\n\n        if (_this2._selectionReference) {\n          _this2._selectionReference.dispose();\n        }\n        _this2._rootSubscription = environment.subscribe(snapshot, _this2._onChange);\n        _this2._selectionReference = nextReference;\n        // This line should be called only once.\n        hasSyncResult = true;\n        if (hasFunctionReturned) {\n          _this2.setState({ readyState: readyState });\n        }\n      },\n      error: function (_error) {\n        function error(_x) {\n          return _error.apply(this, arguments);\n        }\n\n        error.toString = function () {\n          return _error.toString();\n        };\n\n        return error;\n      }(function (error) {\n        readyState = {\n          error: error,\n          props: null,\n          retry: function retry() {\n            // Return to the default state when retrying after an error,\n            // handling the case where _fetch may return syncronously instead\n            // of calling setState.\n            var syncReadyState = _this2._fetch(operation, cacheConfig);\n            _this2.setState({ readyState: syncReadyState || getDefaultState() });\n          }\n        };\n        if (_this2._selectionReference) {\n          _this2._selectionReference.dispose();\n        }\n        _this2._selectionReference = nextReference;\n        hasSyncResult = true;\n        if (hasFunctionReturned) {\n          _this2.setState({ readyState: readyState });\n        }\n      })\n    });\n\n    this._pendingFetch = {\n      dispose: function dispose() {\n        request.unsubscribe();\n        nextReference.dispose();\n      }\n    };\n    hasFunctionReturned = true;\n    return hasSyncResult ? readyState : null;\n  };\n\n  ReactRelayQueryRenderer.prototype.getChildContext = function getChildContext() {\n    return {\n      relay: this._relayContext\n    };\n  };\n\n  ReactRelayQueryRenderer.prototype.render = function render() {\n    // Note that the root fragment results in `readyState.props` is already\n    // frozen by the store; this call is to freeze the readyState object and\n    // error property if set.\n    if (process.env.NODE_ENV !== 'production') {\n      require('./deepFreeze')(this.state.readyState);\n    }\n    return this.props.render(this.state.readyState);\n  };\n\n  return ReactRelayQueryRenderer;\n}(require('react').Component);\n\nReactRelayQueryRenderer.childContextTypes = {\n  relay: require('./RelayPropTypes').Relay\n};\n\nfunction getDefaultState() {\n  return {\n    error: null,\n    props: null,\n    retry: null\n  };\n}\n\nmodule.exports = ReactRelayQueryRenderer;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react-relay/lib/ReactRelayQueryRenderer.js\n ** module id = 170\n ** module chunks = 0\n **/","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @providesModule deepFreeze\n * @format\n */\n\n'use strict';\n\n/**\n * Recursively \"deep\" freezes the supplied object.\n *\n * For convenience, and for consistency with the behavior of `Object.freeze`,\n * returns the now-frozen original object.\n */\n\nfunction deepFreeze(object) {\n  Object.freeze(object);\n  Object.getOwnPropertyNames(object).forEach(function (name) {\n    var property = object[name];\n    if (property && typeof property === 'object' && !Object.isFrozen(property)) {\n      deepFreeze(property);\n    }\n  });\n  return object;\n}\n\nmodule.exports = deepFreeze;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react-relay/lib/deepFreeze.js\n ** module id = 201\n ** module chunks = 0\n **/","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @providesModule RelayPropTypes\n * \n * @format\n */\n\n'use strict';\n\nvar RelayPropTypes = {\n  Container: function Container(props, propName, componentName) {\n    var component = props[propName];\n    if (component == null) {\n      return new Error(require('fbjs/lib/sprintf')('Required prop `%s` was not specified in `%s`.', propName, componentName));\n    } else if (!require('./isRelayContainer')(component)) {\n      return new Error(require('fbjs/lib/sprintf')('Invalid prop `%s` supplied to `%s`, expected a RelayContainer.', propName, componentName));\n    }\n    return null;\n  },\n  Environment: function Environment(props, propName, componentName) {\n    var context = props[propName];\n    if (!require('./isClassicRelayEnvironment')(context) || !require('./isRelayEnvironment')(context)) {\n      return new Error(require('fbjs/lib/sprintf')('Invalid prop/context `%s` supplied to `%s`, expected `%s` to be ' + 'an object conforming to the `RelayEnvironment` interface.', propName, componentName, context));\n    }\n    return null;\n  },\n\n\n  QueryConfig: require('prop-types').shape({\n    name: require('prop-types').string.isRequired,\n    params: require('prop-types').object.isRequired,\n    queries: require('prop-types').object.isRequired\n  }),\n\n  ClassicRelay: function ClassicRelay(props, propName, componentName) {\n    var relay = props[propName];\n    if (!require('./isRelayContext')(relay) || !require('./isClassicRelayEnvironment')(relay.environment)) {\n      return new Error(require('fbjs/lib/sprintf')('Invalid prop/context `%s` supplied to `%s`, expected `%s` to be ' + 'an object with a classic `environment` implementation and `variables`.', propName, componentName, relay));\n    }\n    return null;\n  },\n  Relay: function Relay(props, propName, componentName) {\n    var relay = props[propName];\n    if (!require('./isRelayContext')(relay)) {\n      return new Error(require('fbjs/lib/sprintf')('Invalid prop/context `%s` supplied to `%s`, expected `%s` to be ' + 'an object with an `environment` and `variables`.', propName, componentName, relay));\n    }\n    return null;\n  }\n};\n\nmodule.exports = RelayPropTypes;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react-relay/lib/RelayPropTypes.js\n ** module id = 202\n ** module chunks = 0\n **/","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @providesModule isRelayContainer\n * \n * @format\n */\n\n'use strict';\n\nfunction isRelayContainer(component) {\n  return !!(component && component.getFragmentNames && component.getFragment && component.hasFragment && component.hasVariable);\n}\n\nmodule.exports = isRelayContainer;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react-relay/lib/isRelayContainer.js\n ** module id = 203\n ** module chunks = 0\n **/","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @providesModule isClassicRelayEnvironment\n * \n * @format\n */\n\n'use strict';\n\n/**\n * Determine if a given value is an object that implements the `RelayEnvironment`\n * interface.\n */\n\nfunction isClassicRelayEnvironment(environment) {\n  return typeof environment === 'object' && environment !== null && typeof environment.applyMutation === 'function' && typeof environment.sendMutation === 'function' && typeof environment.forceFetch === 'function' && typeof environment.getFragmentResolver === 'function' && typeof environment.getStoreData === 'function' && typeof environment.primeCache === 'function';\n}\n\nmodule.exports = isClassicRelayEnvironment;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react-relay/lib/isClassicRelayEnvironment.js\n ** module id = 204\n ** module chunks = 0\n **/","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @providesModule isRelayEnvironment\n * \n * @format\n */\n\n'use strict';\n\n/**\n * Determine if a given value is an object that implements the `Environment`\n * interface defined in `RelayEnvironmentTypes`.\n */\n\nfunction isRelayEnvironment(environment) {\n  return typeof environment === 'object' && environment !== null &&\n  // TODO: add applyMutation/sendMutation once ready in both cores\n  typeof environment.lookup === 'function' && typeof environment.retain === 'function' && typeof environment.sendQuery === 'function' && typeof environment.execute === 'function' && typeof environment.subscribe === 'function';\n}\n\nmodule.exports = isRelayEnvironment;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react-relay/lib/isRelayEnvironment.js\n ** module id = 205\n ** module chunks = 0\n **/","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @providesModule isRelayContext\n * \n * @format\n */\n\n'use strict';\n\n/**\n * Determine if the input is a plain object that matches the `RelayContext`\n * type defined in `RelayEnvironmentTypes`.\n */\nfunction isRelayContext(context) {\n  return typeof context === 'object' && context !== null && !Array.isArray(context) && require('./isRelayEnvironment')(context.environment) && require('./isRelayVariables')(context.variables);\n}\n\nmodule.exports = isRelayContext;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react-relay/lib/isRelayContext.js\n ** module id = 206\n ** module chunks = 0\n **/","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @providesModule isRelayVariables\n * \n * @format\n */\n\n'use strict';\n\n/**\n * Determine if the object is a plain object that matches the `Variables` type.\n */\n\nfunction isRelayVariables(variables) {\n  return typeof variables === 'object' && variables !== null && !Array.isArray(variables);\n}\n\nmodule.exports = isRelayVariables;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react-relay/lib/isRelayVariables.js\n ** module id = 207\n ** module chunks = 0\n **/","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @providesModule ReactRelayFragmentContainer\n * \n * @format\n */\n\n'use strict';\n\nvar _extends3 = _interopRequireDefault(require('babel-runtime/helpers/extends'));\n\nvar _classCallCheck3 = _interopRequireDefault(require('babel-runtime/helpers/classCallCheck'));\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(require('babel-runtime/helpers/possibleConstructorReturn'));\n\nvar _inherits3 = _interopRequireDefault(require('babel-runtime/helpers/inherits'));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _require = require('./RelayContainerUtils'),\n    getComponentName = _require.getComponentName,\n    getReactComponent = _require.getReactComponent;\n\nvar _require2 = require('./ReactRelayContainerProfiler'),\n    profileContainer = _require2.profileContainer;\n\nvar _require3 = require('relay-runtime'),\n    RelayProfiler = _require3.RelayProfiler;\n\nvar containerContextTypes = {\n  relay: require('./RelayPropTypes').Relay\n};\n\n/**\n * Composes a React component class, returning a new class that intercepts\n * props, resolving them with the provided fragments and subscribing for\n * updates.\n */\nfunction createContainerWithFragments(Component, fragments) {\n  var ComponentClass = getReactComponent(Component);\n  var componentName = getComponentName(Component);\n  var containerName = 'Relay(' + componentName + ')';\n\n  var Container = function (_React$Component) {\n    (0, _inherits3['default'])(Container, _React$Component);\n\n    function Container(props, context) {\n      (0, _classCallCheck3['default'])(this, Container);\n\n      var _this = (0, _possibleConstructorReturn3['default'])(this, _React$Component.call(this, props, context));\n\n      _this._handleFragmentDataUpdate = function () {\n        var data = _this._resolver.resolve();\n        var profiler = RelayProfiler.profile('ReactRelayFragmentContainer.handleFragmentDataUpdate');\n        _this.setState({ data: data }, profiler.stop);\n      };\n\n      var relay = assertRelayContext(context.relay);\n      var createFragmentSpecResolver = relay.environment.unstable_internal.createFragmentSpecResolver;\n\n      _this._resolver = createFragmentSpecResolver(relay, containerName, fragments, props, _this._handleFragmentDataUpdate);\n      _this.state = {\n        data: _this._resolver.resolve(),\n        relayProp: {\n          environment: relay.environment\n        }\n      };\n      return _this;\n    }\n\n    /**\n     * When new props are received, read data for the new props and subscribe\n     * for updates. Props may be the same in which case previous data and\n     * subscriptions can be reused.\n     */\n\n\n    Container.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps, nextContext) {\n      var context = require('fbjs/lib/nullthrows')(nextContext);\n      var relay = assertRelayContext(context.relay);\n      var _relay$environment$un = relay.environment.unstable_internal,\n          createFragmentSpecResolver = _relay$environment$un.createFragmentSpecResolver,\n          getDataIDsFromObject = _relay$environment$un.getDataIDsFromObject;\n\n      var prevIDs = getDataIDsFromObject(fragments, this.props);\n      var nextIDs = getDataIDsFromObject(fragments, nextProps);\n      // If the environment has changed or props point to new records then\n      // previously fetched data and any pending fetches no longer apply:\n      // - Existing references are on the old environment.\n      // - Existing references are based on old variables.\n      // - Pending fetches are for the previous records.\n      if (this.context.relay.environment !== relay.environment || this.context.relay.variables !== relay.variables || !require('fbjs/lib/areEqual')(prevIDs, nextIDs)) {\n        this._resolver.dispose();\n        this._resolver = createFragmentSpecResolver(relay, containerName, fragments, nextProps, this._handleFragmentDataUpdate);\n        var _relayProp = {\n          environment: relay.environment\n        };\n        this.setState({ relayProp: _relayProp });\n      } else {\n        this._resolver.setProps(nextProps);\n      }\n      var data = this._resolver.resolve();\n      if (data !== this.state.data) {\n        this.setState({ data: data });\n      }\n    };\n\n    Container.prototype.componentWillUnmount = function componentWillUnmount() {\n      this._resolver.dispose();\n    };\n\n    Container.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps, nextState, nextContext) {\n      // Short-circuit if any Relay-related data has changed\n      if (nextContext.relay !== this.context.relay || nextState.data !== this.state.data) {\n        return true;\n      }\n      // Otherwise, for convenience short-circuit if all non-Relay props\n      // are scalar and equal\n      var keys = Object.keys(nextProps);\n      for (var ii = 0; ii < keys.length; ii++) {\n        var _key = keys[ii];\n        if (!fragments.hasOwnProperty(_key) && !require('./isScalarAndEqual')(nextProps[_key], this.props[_key])) {\n          return true;\n        }\n      }\n      return false;\n    };\n\n    /**\n     * Render new data for the existing props/context.\n     */\n\n\n    Container.prototype.render = function render() {\n      if (ComponentClass) {\n        return require('react').createElement(ComponentClass, (0, _extends3['default'])({}, this.props, this.state.data, {\n          // TODO: Remove the string ref fallback.\n          ref: this.props.componentRef || 'component',\n          relay: this.state.relayProp\n        }));\n      } else {\n        // Stateless functional, doesn't support `ref`\n        return require('react').createElement(Component, (0, _extends3['default'])({}, this.props, this.state.data, {\n          relay: this.state.relayProp\n        }));\n      }\n    };\n\n    return Container;\n  }(require('react').Component);\n\n  profileContainer(Container, 'ReactRelayFragmentContainer');\n  Container.contextTypes = containerContextTypes;\n  Container.displayName = containerName;\n\n  return Container;\n}\n\nfunction assertRelayContext(relay) {\n  require('fbjs/lib/invariant')(require('./isRelayContext')(relay), 'ReactRelayFragmentContainer: Expected `context.relay` to be an object ' + 'conforming to the `RelayContext` interface, got `%s`.', relay);\n  return relay;\n}\n\n/**\n * Wrap the basic `createContainer()` function with logic to adapt to the\n * `context.relay.environment` in which it is rendered. Specifically, the\n * extraction of the environment-specific version of fragments in the\n * `fragmentSpec` is memoized once per environment, rather than once per\n * instance of the container constructed/rendered.\n */\nfunction createContainer(Component, fragmentSpec) {\n  return require('./buildReactRelayContainer')(Component, fragmentSpec, createContainerWithFragments);\n}\n\nmodule.exports = { createContainer: createContainer, createContainerWithFragments: createContainerWithFragments };\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react-relay/lib/ReactRelayFragmentContainer.js\n ** module id = 208\n ** module chunks = 0\n **/","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @providesModule RelayContainerUtils\n * \n * @format\n */\n\n'use strict';\n\n/**\n * @internal\n *\n * Helper for checking if this is a React Component\n * created with React.Component or React.createClass().\n */\n\nfunction isReactComponent(component) {\n  return !!(component && typeof component.prototype === 'object' && component.prototype && component.prototype.isReactComponent);\n}\n\nfunction getReactComponent(Component) {\n  if (isReactComponent(Component)) {\n    return Component;\n  } else {\n    return null;\n  }\n}\n\nfunction getComponentName(Component) {\n  var name = void 0;\n  var ComponentClass = getReactComponent(Component);\n  if (ComponentClass) {\n    name = ComponentClass.displayName || ComponentClass.name;\n  } else if (typeof Component === 'function') {\n    // This is a stateless functional component.\n    name = Component.displayName || Component.name || 'StatelessComponent';\n  } else {\n    name = 'ReactElement';\n  }\n  return String(name);\n}\n\nfunction getContainerName(Component) {\n  return 'Relay(' + getComponentName(Component) + ')';\n}\n\nmodule.exports = {\n  getComponentName: getComponentName,\n  getContainerName: getContainerName,\n  getReactComponent: getReactComponent\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react-relay/lib/RelayContainerUtils.js\n ** module id = 209\n ** module chunks = 0\n **/","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @providesModule ReactRelayContainerProfiler\n * \n * @format\n */\n\n'use strict';\n\nvar _require = require('relay-runtime'),\n    RelayProfiler = _require.RelayProfiler;\n\nfunction profileContainer(Container, containerName) {\n  /* $FlowFixMe(>=0.53.0) This comment suppresses an error\n   * when upgrading Flow's support for React. Common errors found when\n   * upgrading Flow's React support are documented at\n   * https://fburl.com/eq7bs81w */\n  RelayProfiler.instrumentMethods(Container.prototype, {\n    constructor: containerName + '.prototype.constructor',\n    componentWillReceiveProps: containerName + '.prototype.componentWillReceiveProps',\n    componentWillUnmount: containerName + '.prototype.componentWillUnmount',\n    shouldComponentUpdate: containerName + '.prototype.shouldComponentUpdate'\n  });\n}\n\nmodule.exports = { profileContainer: profileContainer };\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react-relay/lib/ReactRelayContainerProfiler.js\n ** module id = 210\n ** module chunks = 0\n **/","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @providesModule isScalarAndEqual\n * @format\n */\n\n'use strict';\n\n/**\n * A fast test to determine if two values are equal scalars:\n * - compares scalars such as booleans, strings, numbers by value\n * - compares functions by identity\n * - returns false for complex values, since these cannot be cheaply tested for\n *   equality (use `areEquals` instead)\n */\n\nfunction isScalarAndEqual(valueA, valueB) {\n  return valueA === valueB && (valueA === null || typeof valueA !== 'object');\n}\n\nmodule.exports = isScalarAndEqual;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react-relay/lib/isScalarAndEqual.js\n ** module id = 212\n ** module chunks = 0\n **/","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @providesModule buildReactRelayContainer\n * \n * @format\n */\n\n'use strict';\n\nvar _require = require('./RelayContainerUtils'),\n    getComponentName = _require.getComponentName,\n    getContainerName = _require.getContainerName;\n\nvar containerContextTypes = {\n  relay: require('./RelayPropTypes').Relay\n};\n\n/**\n * Creates a component class whose instances adapt to the\n * `context.relay.environment` in which they are rendered and which have the\n * necessary static methods (`getFragment()` etc) to be composed within classic\n * `Relay.Containers`.\n */\nfunction buildReactRelayContainer(ComponentClass, fragmentSpec, createContainerWithFragments) {\n  // Sanity-check user-defined fragment input\n  var containerName = getContainerName(ComponentClass);\n  require('./assertFragmentMap')(getComponentName(ComponentClass), fragmentSpec);\n\n  // Memoize a container for the last environment instance encountered\n  var environment = void 0;\n  var Container = void 0;\n  function ContainerConstructor(props, context) {\n    if (Container == null || context.relay.environment !== environment) {\n      environment = context.relay.environment;\n      if (process.env.NODE_ENV !== 'production') {\n        var _require2 = require('relay-runtime'),\n            isRelayModernEnvironment = _require2.isRelayModernEnvironment;\n\n        if (!isRelayModernEnvironment(environment)) {\n          throw new Error('RelayModernContainer: Can only use Relay Modern component ' + (containerName + ' in a Relay Modern environment!\\n') + 'When using Relay Modern and Relay Classic in the same ' + 'application, ensure components use Relay Compat to work in ' + 'both environments.\\n' + 'See: http://facebook.github.io/relay/docs/relay-compat.html');\n        }\n      }\n      var getFragmentFromTag = environment.unstable_internal.getFragment;\n\n      var _fragments = require('fbjs/lib/mapObject')(fragmentSpec, getFragmentFromTag);\n      Container = createContainerWithFragments(ComponentClass, _fragments);\n    }\n    /* $FlowFixMe(>=0.53.0) This comment suppresses an\n     * error when upgrading Flow's support for React. Common errors found when\n     * upgrading Flow's React support are documented at\n     * https://fburl.com/eq7bs81w */\n    return new Container(props, context);\n  }\n  ContainerConstructor.contextTypes = containerContextTypes;\n  ContainerConstructor.displayName = containerName;\n\n  if (process.env.NODE_ENV !== 'production') {\n    // Classic container static methods.\n    ContainerConstructor.getFragment = function getFragmentOnModernContainer() {\n      throw new Error('RelayModernContainer: ' + containerName + '.getFragment() was called on ' + 'a Relay Modern component by a Relay Classic or Relay Compat ' + 'component.\\n' + 'When using Relay Modern and Relay Classic in the same ' + 'application, ensure components use Relay Compat to work in ' + 'both environments.\\n' + 'See: http://facebook.github.io/relay/docs/relay-compat.html');\n    };\n  }\n\n  return ContainerConstructor;\n}\n\nmodule.exports = buildReactRelayContainer;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react-relay/lib/buildReactRelayContainer.js\n ** module id = 213\n ** module chunks = 0\n **/","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @providesModule assertFragmentMap\n * \n * @format\n */\n\n'use strict';\n\n/**\n * Fail fast if the user supplies invalid fragments as input.\n */\nfunction assertFragmentMap(componentName, fragments) {\n  require('fbjs/lib/invariant')(fragments && typeof fragments === 'object', 'Could not create Relay Container for `%s`. ' + 'Expected a set of GraphQL fragments, got `%s` instead.', componentName, fragments);\n\n  for (var key in fragments) {\n    if (fragments.hasOwnProperty(key)) {\n      var fragment = fragments[key];\n      require('fbjs/lib/invariant')(fragment && (typeof fragment === 'object' || typeof fragment === 'function'), 'Could not create Relay Container for `%s`. ' + 'The value of fragment `%s` was expected to be a fragment, got `%s` instead.', componentName, key, fragment);\n    }\n  }\n}\n\nmodule.exports = assertFragmentMap;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react-relay/lib/assertFragmentMap.js\n ** module id = 214\n ** module chunks = 0\n **/","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @providesModule ReactRelayPaginationContainer\n * \n * @format\n */\n\n'use strict';\n\nvar _classCallCheck3 = _interopRequireDefault(require('babel-runtime/helpers/classCallCheck'));\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(require('babel-runtime/helpers/possibleConstructorReturn'));\n\nvar _inherits3 = _interopRequireDefault(require('babel-runtime/helpers/inherits'));\n\nvar _defineProperty3 = _interopRequireDefault(require('babel-runtime/helpers/defineProperty'));\n\nvar _extends4 = _interopRequireDefault(require('babel-runtime/helpers/extends'));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _require = require('./RelayContainerUtils'),\n    getComponentName = _require.getComponentName,\n    getReactComponent = _require.getReactComponent;\n\nvar _require2 = require('./ReactRelayContainerProfiler'),\n    profileContainer = _require2.profileContainer;\n\nvar _require3 = require('relay-runtime'),\n    ConnectionInterface = _require3.ConnectionInterface,\n    RelayProfiler = _require3.RelayProfiler,\n    Observable = _require3.Observable;\n\nvar containerContextTypes = {\n  relay: require('./RelayPropTypes').Relay\n};\n\nvar FORWARD = 'forward';\n\n/**\n * Extends the functionality of RelayFragmentContainer by providing a mechanism\n * to load more data from a connection.\n *\n * # Configuring a PaginationContainer\n *\n * PaginationContainer accepts the standard FragmentContainer arguments and an\n * additional `connectionConfig` argument:\n *\n * - `Component`: the component to be wrapped/rendered.\n * - `fragments`: an object whose values are `graphql` fragments. The object\n *   keys determine the prop names by which fragment data is available.\n * - `connectionConfig`: an object that determines how to load more connection\n *   data. Details below.\n *\n * # Loading More Data\n *\n * Use `props.relay.hasMore()` to determine if there are more items to load.\n *\n * ```\n * hasMore(): boolean\n * ```\n *\n * Use `props.relay.isLoading()` to determine if a previous call to `loadMore()`\n * is still pending. This is convenient for avoiding duplicate load calls.\n *\n * ```\n * isLoading(): boolean\n * ```\n *\n * Use `props.relay.loadMore()` to load more items. This will return null if\n * there are no more items to fetch, otherwise it will fetch more items and\n * return a Disposable that can be used to cancel the fetch.\n *\n * `pageSize` should be the number of *additional* items to fetch (not the\n * total).\n *\n * ```\n * loadMore(pageSize: number, callback: ?(error: ?Error) => void): ?Disposable\n * ```\n *\n * A complete example:\n *\n * ```\n * class Foo extends React.Component {\n *   ...\n *   _onEndReached() {\n *     if (!this.props.relay.hasMore() || this.props.relay.isLoading()) {\n *       return;\n *     }\n *     this.props.relay.loadMore(10);\n *   }\n *   ...\n * }\n * ```\n *\n * # Connection Config\n *\n * Here's an example, followed by details of each config property:\n *\n * ```\n * ReactRelayPaginationContainer.createContainer(\n *   Component,\n *   {\n *     user: graphql`fragment FriendsFragment on User {\n *       friends(after: $afterCursor first: $count) @connection {\n *         edges { ... }\n *         pageInfo {\n *           startCursor\n *           endCursor\n *           hasNextPage\n *           hasPreviousPage\n *         }\n *       }\n *     }`,\n *   },\n *   {\n *     direction: 'forward',\n *     getConnectionFromProps(props) {\n *       return props.user && props.user.friends;\n *     },\n *     getFragmentVariables(vars, totalCount) {\n *       // The component presumably wants *all* edges, not just those after\n *       // the cursor, so notice that we don't set $afterCursor here.\n *       return {\n *         ...vars,\n *         count: totalCount,\n *       };\n *     },\n *     getVariables(props, {count, cursor}, fragmentVariables) {\n *       return {\n *         ...RelayFBCompatQueryConstants.get(),\n *         id: props.user.id,\n *         afterCursor: cursor,\n *         count,\n *       },\n *     },\n *     query: graphql`\n *       query FriendsQuery($id: ID!, $afterCursor: ID, $count: Int!) {\n *         node(id: $id) {\n *           ...FriendsFragment\n *         }\n *       }\n *     `,\n *   }\n * );\n * ```\n *\n * ## Config Properties\n *\n * - `direction`: Either \"forward\" to indicate forward pagination using\n *   after/first, or \"backward\" to indicate backward pagination using\n *   before/last.\n * - `getConnectionFromProps(props)`: PaginationContainer doesn't magically know\n *   which connection data you mean to fetch more of (a container might fetch\n *   multiple connections, but can only paginate one of them). This function is\n *   given the fragment props only (not full props), and should return the\n *   connection data. See the above example that returns the friends data via\n *   `props.user.friends`.\n * - `getFragmentVariables(previousVars, totalCount)`: Given the previous variables\n *   and the new total number of items, get the variables to use when reading\n *   your fragments. Typically this means setting whatever your local \"count\"\n *   variable is to the value of `totalCount`. See the example.\n * - `getVariables(props, {count, cursor})`: Get the variables to use when\n *   fetching the pagination `query`. You may determine the root object id from\n *   props (see the example that uses `props.user.id`) and may also set whatever\n *   variables you use for the after/first/before/last calls based on the count\n *   and cursor.\n * - `query`: A query to use when fetching more connection data. This should\n *   typically reference one of the container's fragment (as in the example)\n *   to ensure that all the necessary fields for sub-components are fetched.\n */\n\nfunction createGetConnectionFromProps(metadata) {\n  var path = metadata.path;\n  require('fbjs/lib/invariant')(path, 'ReactRelayPaginationContainer: Unable to synthesize a ' + 'getConnectionFromProps function.');\n  return function (props) {\n    var data = props[metadata.fragmentName];\n    for (var i = 0; i < path.length; i++) {\n      if (!data || typeof data !== 'object') {\n        return null;\n      }\n      data = data[path[i]];\n    }\n    return data;\n  };\n}\n\nfunction createGetFragmentVariables(metadata) {\n  var countVariable = metadata.count;\n  require('fbjs/lib/invariant')(countVariable, 'ReactRelayPaginationContainer: Unable to synthesize a ' + 'getFragmentVariables function.');\n  return function (prevVars, totalCount) {\n    return (0, _extends4['default'])({}, prevVars, (0, _defineProperty3['default'])({}, countVariable, totalCount));\n  };\n}\n\nfunction findConnectionMetadata(fragments) {\n  var foundConnectionMetadata = null;\n  var isRelayModern = false;\n  for (var _fragmentName in fragments) {\n    var fragment = fragments[_fragmentName];\n    var connectionMetadata = fragment.metadata && fragment.metadata.connection;\n    // HACK: metadata is always set to `undefined` in classic. In modern, even\n    // if empty, it is set to null (never undefined). We use that knowlege to\n    // check if we're dealing with classic or modern\n    if (fragment.metadata !== undefined) {\n      isRelayModern = true;\n    }\n    if (connectionMetadata) {\n      require('fbjs/lib/invariant')(connectionMetadata.length === 1, 'ReactRelayPaginationContainer: Only a single @connection is ' + 'supported, `%s` has %s.', _fragmentName, connectionMetadata.length);\n      require('fbjs/lib/invariant')(!foundConnectionMetadata, 'ReactRelayPaginationContainer: Only a single fragment with ' + '@connection is supported.');\n      foundConnectionMetadata = (0, _extends4['default'])({}, connectionMetadata[0], {\n        fragmentName: _fragmentName\n      });\n    }\n  }\n  require('fbjs/lib/invariant')(!isRelayModern || foundConnectionMetadata !== null, 'ReactRelayPaginationContainer: A @connection directive must be present.');\n  return foundConnectionMetadata || {};\n}\n\nfunction toObserver(observerOrCallback) {\n  return typeof observerOrCallback === 'function' ? {\n    error: observerOrCallback,\n    complete: observerOrCallback,\n    unsubscribe: function unsubscribe(subscription) {\n      typeof observerOrCallback === 'function' && observerOrCallback();\n    }\n  } : observerOrCallback || {};\n}\n\nfunction createContainerWithFragments(Component, fragments, connectionConfig) {\n  var ComponentClass = getReactComponent(Component);\n  var componentName = getComponentName(Component);\n  var containerName = 'Relay(' + componentName + ')';\n\n  var metadata = findConnectionMetadata(fragments);\n\n  var getConnectionFromProps = connectionConfig.getConnectionFromProps || createGetConnectionFromProps(metadata);\n\n  var direction = connectionConfig.direction || metadata.direction;\n  require('fbjs/lib/invariant')(direction, 'ReactRelayPaginationContainer: Unable to infer direction of the ' + 'connection, possibly because both first and last are provided.');\n\n  var getFragmentVariables = connectionConfig.getFragmentVariables || createGetFragmentVariables(metadata);\n\n  var Container = function (_React$Component) {\n    (0, _inherits3['default'])(Container, _React$Component);\n\n    function Container(props, context) {\n      (0, _classCallCheck3['default'])(this, Container);\n\n      var _this = (0, _possibleConstructorReturn3['default'])(this, _React$Component.call(this, props, context));\n\n      _this._handleFragmentDataUpdate = function () {\n        var profiler = RelayProfiler.profile('ReactRelayPaginationContainer.handleFragmentDataUpdate');\n        _this.setState({ data: _this._resolver.resolve() }, profiler.stop);\n      };\n\n      _this._hasMore = function () {\n        var connectionData = _this._getConnectionData();\n        return !!connectionData && connectionData.hasMore;\n      };\n\n      _this._isLoading = function () {\n        return !!_this._refetchSubscription;\n      };\n\n      _this._refetchConnection = function (totalCount, observerOrCallback, refetchVariables) {\n        var paginatingVariables = {\n          count: totalCount,\n          cursor: null,\n          totalCount: totalCount\n        };\n        var fetch = _this._fetchPage(paginatingVariables, toObserver(observerOrCallback), { force: true }, refetchVariables);\n\n        return { dispose: fetch.unsubscribe };\n      };\n\n      _this._loadMore = function (pageSize, observerOrCallback, options) {\n        var observer = toObserver(observerOrCallback);\n        var connectionData = _this._getConnectionData();\n        if (!connectionData) {\n          new Observable(function (sink) {\n            return sink.complete();\n          }).subscribe(observer);\n          return null;\n        }\n        var totalCount = connectionData.edgeCount + pageSize;\n        if (options && options.force) {\n          return _this._refetchConnection(totalCount, observerOrCallback);\n        }\n        var paginatingVariables = {\n          count: pageSize,\n          cursor: connectionData.cursor,\n          totalCount: totalCount\n        };\n        var fetch = _this._fetchPage(paginatingVariables, observer, options);\n        return { dispose: fetch.unsubscribe };\n      };\n\n      var relay = assertRelayContext(context.relay);\n      var createFragmentSpecResolver = relay.environment.unstable_internal.createFragmentSpecResolver;\n\n      _this._isARequestInFlight = false;\n      _this._localVariables = null;\n      _this._refetchSubscription = null;\n      _this._references = [];\n      _this._resolver = createFragmentSpecResolver(relay, containerName, fragments, props, _this._handleFragmentDataUpdate);\n      _this._relayContext = {\n        environment: _this.context.relay.environment,\n        variables: _this.context.relay.variables\n      };\n      _this.state = {\n        data: _this._resolver.resolve(),\n        relayProp: _this._buildRelayProp(relay)\n      };\n      return _this;\n    }\n\n    /**\n     * When new props are received, read data for the new props and subscribe\n     * for updates. Props may be the same in which case previous data and\n     * subscriptions can be reused.\n     */\n\n\n    Container.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps, nextContext) {\n      var context = require('fbjs/lib/nullthrows')(nextContext);\n      var relay = assertRelayContext(context.relay);\n      var _relay$environment$un = relay.environment.unstable_internal,\n          createFragmentSpecResolver = _relay$environment$un.createFragmentSpecResolver,\n          getDataIDsFromObject = _relay$environment$un.getDataIDsFromObject;\n\n      var prevIDs = getDataIDsFromObject(fragments, this.props);\n      var nextIDs = getDataIDsFromObject(fragments, nextProps);\n\n      // If the environment has changed or props point to new records then\n      // previously fetched data and any pending fetches no longer apply:\n      // - Existing references are on the old environment.\n      // - Existing references are based on old variables.\n      // - Pending fetches are for the previous records.\n      if (this.context.relay.environment !== relay.environment || this.context.relay.variables !== relay.variables || !require('fbjs/lib/areEqual')(prevIDs, nextIDs)) {\n        this._release();\n        this._localVariables = null;\n        this._relayContext = {\n          environment: relay.environment,\n          variables: relay.variables\n        };\n        this._resolver = createFragmentSpecResolver(relay, containerName, fragments, nextProps, this._handleFragmentDataUpdate);\n        this.setState({ relayProp: this._buildRelayProp(relay) });\n      } else if (!this._localVariables) {\n        this._resolver.setProps(nextProps);\n      }\n      var data = this._resolver.resolve();\n      if (data !== this.state.data) {\n        this.setState({ data: data });\n      }\n    };\n\n    Container.prototype.componentWillUnmount = function componentWillUnmount() {\n      this._release();\n    };\n\n    Container.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps, nextState, nextContext) {\n      // Short-circuit if any Relay-related data has changed\n      if (nextContext.relay !== this.context.relay || nextState.data !== this.state.data || nextState.relayProp !== this.state.relayProp) {\n        return true;\n      }\n      // Otherwise, for convenience short-circuit if all non-Relay props\n      // are scalar and equal\n      var keys = Object.keys(nextProps);\n      for (var ii = 0; ii < keys.length; ii++) {\n        var _key = keys[ii];\n        if (!fragments.hasOwnProperty(_key) && !require('./isScalarAndEqual')(nextProps[_key], this.props[_key])) {\n          return true;\n        }\n      }\n      return false;\n    };\n\n    Container.prototype._buildRelayProp = function _buildRelayProp(relay) {\n      return {\n        hasMore: this._hasMore,\n        isLoading: this._isLoading,\n        loadMore: this._loadMore,\n        refetchConnection: this._refetchConnection,\n        environment: relay.environment\n      };\n    };\n\n    /**\n     * Render new data for the existing props/context.\n     */\n\n\n    Container.prototype._getConnectionData = function _getConnectionData() {\n      // Extract connection data and verify there are more edges to fetch\n      var props = (0, _extends4['default'])({}, this.props, this.state.data);\n      var connectionData = getConnectionFromProps(props);\n      if (connectionData == null) {\n        return null;\n      }\n\n      var _ConnectionInterface$ = ConnectionInterface.get(),\n          EDGES = _ConnectionInterface$.EDGES,\n          PAGE_INFO = _ConnectionInterface$.PAGE_INFO,\n          HAS_NEXT_PAGE = _ConnectionInterface$.HAS_NEXT_PAGE,\n          HAS_PREV_PAGE = _ConnectionInterface$.HAS_PREV_PAGE,\n          END_CURSOR = _ConnectionInterface$.END_CURSOR,\n          START_CURSOR = _ConnectionInterface$.START_CURSOR;\n\n      require('fbjs/lib/invariant')(typeof connectionData === 'object', 'ReactRelayPaginationContainer: Expected `getConnectionFromProps()` in `%s`' + 'to return `null` or a plain object with %s and %s properties, got `%s`.' + componentName, EDGES, PAGE_INFO, connectionData);\n      var edges = connectionData[EDGES];\n      var pageInfo = connectionData[PAGE_INFO];\n      if (edges == null || pageInfo == null) {\n        return null;\n      }\n      require('fbjs/lib/invariant')(Array.isArray(edges), 'ReactRelayPaginationContainer: Expected `getConnectionFromProps()` in `%s`' + 'to return an object with %s: Array, got `%s`.', componentName, EDGES, edges);\n      require('fbjs/lib/invariant')(typeof pageInfo === 'object', 'ReactRelayPaginationContainer: Expected `getConnectionFromProps()` in `%s`' + 'to return an object with %s: Object, got `%s`.', componentName, PAGE_INFO, pageInfo);\n      var hasMore = direction === FORWARD ? pageInfo[HAS_NEXT_PAGE] : pageInfo[HAS_PREV_PAGE];\n      var cursor = direction === FORWARD ? pageInfo[END_CURSOR] : pageInfo[START_CURSOR];\n      if (typeof hasMore !== 'boolean' || typeof cursor !== 'string') {\n        require('fbjs/lib/warning')(false, 'ReactRelayPaginationContainer: Cannot paginate without %s fields in `%s`. ' + 'Be sure to fetch %s (got `%s`) and %s (got `%s`).', PAGE_INFO, componentName, direction === FORWARD ? HAS_NEXT_PAGE : HAS_PREV_PAGE, hasMore, direction === FORWARD ? END_CURSOR : START_CURSOR, cursor);\n        return null;\n      }\n      return {\n        cursor: cursor,\n        edgeCount: edges.length,\n        hasMore: hasMore\n      };\n    };\n\n    Container.prototype._fetchPage = function _fetchPage(paginatingVariables, observer, options, refetchVariables) {\n      var _this2 = this;\n\n      var _assertRelayContext = assertRelayContext(this.context.relay),\n          environment = _assertRelayContext.environment;\n\n      var _environment$unstable = environment.unstable_internal,\n          createOperationSelector = _environment$unstable.createOperationSelector,\n          getOperation = _environment$unstable.getOperation,\n          getVariablesFromObject = _environment$unstable.getVariablesFromObject;\n\n      var props = (0, _extends4['default'])({}, this.props, this.state.data);\n      var fragmentVariables = getVariablesFromObject(this._relayContext.variables, fragments, this.props);\n      fragmentVariables = (0, _extends4['default'])({}, fragmentVariables, refetchVariables);\n      var fetchVariables = connectionConfig.getVariables(props, {\n        count: paginatingVariables.count,\n        cursor: paginatingVariables.cursor\n      },\n      // Pass the variables used to fetch the fragments initially\n      fragmentVariables);\n      require('fbjs/lib/invariant')(typeof fetchVariables === 'object' && fetchVariables !== null, 'ReactRelayPaginationContainer: Expected `getVariables()` to ' + 'return an object, got `%s` in `%s`.', fetchVariables, componentName);\n      fetchVariables = (0, _extends4['default'])({}, fetchVariables, refetchVariables);\n      this._localVariables = fetchVariables;\n\n      var cacheConfig = options ? { force: !!options.force } : undefined;\n      if (cacheConfig && options && options.rerunParamExperimental) {\n        cacheConfig.rerunParamExperimental = options.rerunParamExperimental;\n      }\n      var query = getOperation(connectionConfig.query);\n      var operation = createOperationSelector(query, fetchVariables);\n\n      var refetchSubscription = null;\n\n      // Immediately retain the results of the query to prevent cached\n      // data from being evicted\n      var reference = environment.retain(operation.root);\n      this._references.push(reference);\n\n      if (this._refetchSubscription) {\n        this._refetchSubscription.unsubscribe();\n      }\n\n      var onNext = function onNext(payload, complete) {\n        _this2._relayContext = {\n          environment: _this2.context.relay.environment,\n          variables: (0, _extends4['default'])({}, _this2.context.relay.variables, fragmentVariables)\n        };\n        var prevData = _this2._resolver.resolve();\n        _this2._resolver.setVariables(getFragmentVariables(fragmentVariables, paginatingVariables.totalCount));\n        var nextData = _this2._resolver.resolve();\n\n        // Workaround slightly different handling for connection in different\n        // core implementations:\n        // - Classic core requires the count to be explicitly incremented\n        // - Modern core automatically appends new items, updating the count\n        //   isn't required to see new data.\n        //\n        // `setState` is only required if changing the variables would change the\n        // resolved data.\n        // TODO #14894725: remove PaginationContainer equal check\n        if (!require('fbjs/lib/areEqual')(prevData, nextData)) {\n          _this2.setState({ data: nextData }, complete);\n        } else {\n          complete();\n        }\n      };\n\n      var cleanup = function cleanup() {\n        if (_this2._refetchSubscription === refetchSubscription) {\n          _this2._refetchSubscription = null;\n          _this2._isARequestInFlight = false;\n        }\n      };\n\n      this._isARequestInFlight = true;\n      refetchSubscription = environment.execute({ operation: operation, cacheConfig: cacheConfig }).mergeMap(function (payload) {\n        return new Observable(function (sink) {\n          onNext(payload, function () {\n            sink.next(); // pass void to public observer's `next`\n            sink.complete();\n          });\n        });\n      })\n      // use do instead of finally so that observer's `complete` fires after cleanup\n      ['do']({\n        error: cleanup,\n        complete: cleanup,\n        unsubscribe: cleanup\n      }).subscribe(observer || {});\n\n      this._refetchSubscription = this._isARequestInFlight ? refetchSubscription : null;\n\n      return refetchSubscription;\n    };\n\n    Container.prototype._release = function _release() {\n      this._resolver.dispose();\n      this._references.forEach(function (disposable) {\n        return disposable.dispose();\n      });\n      this._references.length = 0;\n      if (this._refetchSubscription) {\n        this._refetchSubscription.unsubscribe();\n        this._refetchSubscription = null;\n        this._isARequestInFlight = false;\n      }\n    };\n\n    Container.prototype.getChildContext = function getChildContext() {\n      return { relay: this._relayContext };\n    };\n\n    Container.prototype.render = function render() {\n      if (ComponentClass) {\n        return require('react').createElement(ComponentClass, (0, _extends4['default'])({}, this.props, this.state.data, {\n          // TODO: Remove the string ref fallback.\n          ref: this.props.componentRef || 'component',\n          relay: this.state.relayProp\n        }));\n      } else {\n        // Stateless functional, doesn't support `ref`\n        return require('react').createElement(Component, (0, _extends4['default'])({}, this.props, this.state.data, {\n          relay: this.state.relayProp\n        }));\n      }\n    };\n\n    return Container;\n  }(require('react').Component);\n\n  profileContainer(Container, 'ReactRelayPaginationContainer');\n  Container.contextTypes = containerContextTypes;\n  Container.displayName = containerName;\n\n  return Container;\n}\n\nfunction assertRelayContext(relay) {\n  require('fbjs/lib/invariant')(require('./isRelayContext')(relay), 'ReactRelayPaginationContainer: Expected `context.relay` to be an object ' + 'conforming to the `RelayContext` interface, got `%s`.', relay);\n  return relay;\n}\n\n/**\n * Wrap the basic `createContainer()` function with logic to adapt to the\n * `context.relay.environment` in which it is rendered. Specifically, the\n * extraction of the environment-specific version of fragments in the\n * `fragmentSpec` is memoized once per environment, rather than once per\n * instance of the container constructed/rendered.\n */\nfunction createContainer(Component, fragmentSpec, connectionConfig) {\n  var Container = require('./buildReactRelayContainer')(Component, fragmentSpec, function (ComponentClass, fragments) {\n    return createContainerWithFragments(ComponentClass, fragments, connectionConfig);\n  });\n  /* $FlowFixMe(>=0.53.0) This comment suppresses an error\n   * when upgrading Flow's support for React. Common errors found when\n   * upgrading Flow's React support are documented at\n   * https://fburl.com/eq7bs81w */\n  Container.childContextTypes = containerContextTypes;\n  return Container;\n}\n\nmodule.exports = { createContainer: createContainer, createContainerWithFragments: createContainerWithFragments };\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react-relay/lib/ReactRelayPaginationContainer.js\n ** module id = 215\n ** module chunks = 0\n **/","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @providesModule ReactRelayRefetchContainer\n * \n * @format\n */\n\n'use strict';\n\nvar _extends3 = _interopRequireDefault(require('babel-runtime/helpers/extends'));\n\nvar _classCallCheck3 = _interopRequireDefault(require('babel-runtime/helpers/classCallCheck'));\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(require('babel-runtime/helpers/possibleConstructorReturn'));\n\nvar _inherits3 = _interopRequireDefault(require('babel-runtime/helpers/inherits'));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _require = require('./RelayContainerUtils'),\n    getComponentName = _require.getComponentName,\n    getReactComponent = _require.getReactComponent;\n\nvar _require2 = require('./ReactRelayContainerProfiler'),\n    profileContainer = _require2.profileContainer;\n\nvar _require3 = require('relay-runtime'),\n    Observable = _require3.Observable,\n    RelayProfiler = _require3.RelayProfiler;\n\nvar containerContextTypes = {\n  relay: require('./RelayPropTypes').Relay\n};\n\n/**\n * Composes a React component class, returning a new class that intercepts\n * props, resolving them with the provided fragments and subscribing for\n * updates.\n */\nfunction createContainerWithFragments(Component, fragments, taggedNode) {\n  var ComponentClass = getReactComponent(Component);\n  var componentName = getComponentName(Component);\n  var containerName = 'Relay(' + componentName + ')';\n\n  var Container = function (_React$Component) {\n    (0, _inherits3['default'])(Container, _React$Component);\n\n    function Container(props, context) {\n      (0, _classCallCheck3['default'])(this, Container);\n\n      var _this = (0, _possibleConstructorReturn3['default'])(this, _React$Component.call(this, props, context));\n\n      _this._handleFragmentDataUpdate = function () {\n        var profiler = RelayProfiler.profile('ReactRelayRefetchContainer.handleFragmentDataUpdate');\n        _this.setState({ data: _this._resolver.resolve() }, profiler.stop);\n      };\n\n      _this._getFragmentVariables = function () {\n        return _this._resolver.getVariables();\n      };\n\n      _this._refetch = function (refetchVariables, renderVariables, callback, options) {\n        var _assertRelayContext = assertRelayContext(_this.context.relay),\n            environment = _assertRelayContext.environment,\n            rootVariables = _assertRelayContext.variables;\n\n        var fetchVariables = typeof refetchVariables === 'function' ? refetchVariables(_this._getFragmentVariables()) : refetchVariables;\n        fetchVariables = (0, _extends3['default'])({}, rootVariables, fetchVariables);\n        var fragmentVariables = renderVariables ? (0, _extends3['default'])({}, rootVariables, renderVariables) : fetchVariables;\n        var cacheConfig = options ? { force: !!options.force } : undefined;\n        var _this$context$relay$e = _this.context.relay.environment.unstable_internal,\n            createOperationSelector = _this$context$relay$e.createOperationSelector,\n            getOperation = _this$context$relay$e.getOperation;\n\n        var query = getOperation(taggedNode);\n        var operation = createOperationSelector(query, fetchVariables);\n\n        // Immediately retain the results of the query to prevent cached\n        // data from being evicted\n        var reference = environment.retain(operation.root);\n        _this._references.push(reference);\n\n        _this._localVariables = fetchVariables;\n\n        // Cancel any previously running refetch.\n        _this._refetchSubscription && _this._refetchSubscription.unsubscribe();\n\n        // Declare refetchSubscription before assigning it in .start(), since\n        // synchronous completion may call callbacks .subscribe() returns.\n        var refetchSubscription = void 0;\n        environment.execute({ operation: operation, cacheConfig: cacheConfig }).mergeMap(function (response) {\n          _this._relayContext = {\n            environment: _this.context.relay.environment,\n            variables: fragmentVariables\n          };\n          _this._resolver.setVariables(fragmentVariables);\n          return new Observable(function (sink) {\n            return _this.setState({ data: _this._resolver.resolve() }, function () {\n              sink.next();\n              sink.complete();\n            });\n          });\n        })['finally'](function () {\n          // Finalizing a refetch should only clear this._refetchSubscription\n          // if the finizing subscription is the most recent call.\n          if (_this._refetchSubscription === refetchSubscription) {\n            _this._refetchSubscription = null;\n          }\n        }).subscribe({\n          start: function start(subscription) {\n            _this._refetchSubscription = refetchSubscription = subscription;\n          },\n          next: callback,\n          error: callback\n        });\n\n        return {\n          dispose: function dispose() {\n            refetchSubscription && refetchSubscription.unsubscribe();\n          }\n        };\n      };\n\n      var relay = assertRelayContext(context.relay);\n      var createFragmentSpecResolver = relay.environment.unstable_internal.createFragmentSpecResolver;\n\n      _this._localVariables = null;\n      _this._refetchSubscription = null;\n      _this._references = [];\n      _this._resolver = createFragmentSpecResolver(relay, containerName, fragments, props, _this._handleFragmentDataUpdate);\n      _this._relayContext = {\n        environment: _this.context.relay.environment,\n        variables: _this.context.relay.variables\n      };\n      _this.state = {\n        data: _this._resolver.resolve(),\n        relayProp: _this._buildRelayProp(relay)\n      };\n      return _this;\n    }\n\n    /**\n     * When new props are received, read data for the new props and subscribe\n     * for updates. Props may be the same in which case previous data and\n     * subscriptions can be reused.\n     */\n\n\n    Container.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps, nextContext) {\n      var context = require('fbjs/lib/nullthrows')(nextContext);\n      var relay = assertRelayContext(context.relay);\n      var _relay$environment$un = relay.environment.unstable_internal,\n          createFragmentSpecResolver = _relay$environment$un.createFragmentSpecResolver,\n          getDataIDsFromObject = _relay$environment$un.getDataIDsFromObject;\n\n      var prevIDs = getDataIDsFromObject(fragments, this.props);\n      var nextIDs = getDataIDsFromObject(fragments, nextProps);\n\n      // If the environment has changed or props point to new records then\n      // previously fetched data and any pending fetches no longer apply:\n      // - Existing references are on the old environment.\n      // - Existing references are based on old variables.\n      // - Pending fetches are for the previous records.\n      if (this.context.relay.environment !== relay.environment || this.context.relay.variables !== relay.variables || !require('fbjs/lib/areEqual')(prevIDs, nextIDs)) {\n        this._release();\n        this._localVariables = null;\n        this._relayContext = {\n          environment: relay.environment,\n          variables: relay.variables\n        };\n        this._resolver = createFragmentSpecResolver(relay, containerName, fragments, nextProps, this._handleFragmentDataUpdate);\n        this.setState({ relayProp: this._buildRelayProp(relay) });\n      } else if (!this._localVariables) {\n        this._resolver.setProps(nextProps);\n      }\n      var data = this._resolver.resolve();\n      if (data !== this.state.data) {\n        this.setState({ data: data });\n      }\n    };\n\n    Container.prototype.componentWillUnmount = function componentWillUnmount() {\n      this._release();\n    };\n\n    Container.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps, nextState, nextContext) {\n      // Short-circuit if any Relay-related data has changed\n      if (nextContext.relay !== this.context.relay || nextState.data !== this.state.data || nextState.relayProp !== this.state.relayProp) {\n        return true;\n      }\n      // Otherwise, for convenience short-circuit if all non-Relay props\n      // are scalar and equal\n      var keys = Object.keys(nextProps);\n      for (var ii = 0; ii < keys.length; ii++) {\n        var _key = keys[ii];\n        if (!fragments.hasOwnProperty(_key) && !require('./isScalarAndEqual')(nextProps[_key], this.props[_key])) {\n          return true;\n        }\n      }\n      return false;\n    };\n\n    Container.prototype._release = function _release() {\n      this._resolver.dispose();\n      this._references.forEach(function (disposable) {\n        return disposable.dispose();\n      });\n      this._references.length = 0;\n      this._refetchSubscription && this._refetchSubscription.unsubscribe();\n    };\n\n    Container.prototype._buildRelayProp = function _buildRelayProp(relay) {\n      return {\n        environment: relay.environment,\n        refetch: this._refetch,\n        getVariables: this._getFragmentVariables\n      };\n    };\n\n    /**\n     * Render new data for the existing props/context.\n     */\n\n\n    Container.prototype.getChildContext = function getChildContext() {\n      return { relay: this._relayContext };\n    };\n\n    Container.prototype.render = function render() {\n      if (ComponentClass) {\n        return require('react').createElement(ComponentClass, (0, _extends3['default'])({}, this.props, this.state.data, {\n          // TODO: Remove the string ref fallback.\n          ref: this.props.componentRef || 'component',\n          relay: this.state.relayProp\n        }));\n      } else {\n        // Stateless functional, doesn't support `ref`\n        return require('react').createElement(Component, (0, _extends3['default'])({}, this.props, this.state.data, {\n          relay: this.state.relayProp\n        }));\n      }\n    };\n\n    return Container;\n  }(require('react').Component);\n\n  profileContainer(Container, 'ReactRelayRefetchContainer');\n  Container.contextTypes = containerContextTypes;\n  Container.displayName = containerName;\n\n  return Container;\n}\n\nfunction assertRelayContext(relay) {\n  require('fbjs/lib/invariant')(require('./isRelayContext')(relay), 'ReactRelayRefetchContainer: Expected `context.relay` to be an object ' + 'conforming to the `RelayContext` interface, got `%s`.', relay);\n  return relay;\n}\n\n/**\n * Wrap the basic `createContainer()` function with logic to adapt to the\n * `context.relay.environment` in which it is rendered. Specifically, the\n * extraction of the environment-specific version of fragments in the\n * `fragmentSpec` is memoized once per environment, rather than once per\n * instance of the container constructed/rendered.\n */\nfunction createContainer(Component, fragmentSpec, taggedNode) {\n  var Container = require('./buildReactRelayContainer')(Component, fragmentSpec, function (ComponentClass, fragments) {\n    return createContainerWithFragments(ComponentClass, fragments, taggedNode);\n  });\n  /* $FlowFixMe(>=0.53.0) This comment suppresses an error\n   * when upgrading Flow's support for React. Common errors found when\n   * upgrading Flow's React support are documented at\n   * https://fburl.com/eq7bs81w */\n  Container.childContextTypes = containerContextTypes;\n  return Container;\n}\n\nmodule.exports = { createContainer: createContainer, createContainerWithFragments: createContainerWithFragments };\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react-relay/lib/ReactRelayRefetchContainer.js\n ** module id = 216\n ** module chunks = 0\n **/","// @flow\n\nimport io from 'socket.io-client';\nconst __DEV__ = process.env.NODE_ENV !== 'production'; //eslint-disable-line\nconst socket = __DEV__ ? io('http://localhost:8081') : io();\n\nexport {socket};\n\n\n/** WEBPACK FOOTER **\n ** ./js/socket.js\n **/","/* (ignored) */\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ws (ignored)\n ** module id = 254\n ** module chunks = 0\n **/","// @flow\n\nimport AddTodoMutation from '../mutations/AddTodoMutation';\nimport TodoList from './TodoList';\nimport TodoListFooter from './TodoListFooter';\nimport TodoTextInput from './TodoTextInput';\n\nimport React from 'react';\nimport {\n  createFragmentContainer,\n  graphql,\n} from 'react-relay';\n\nclass TodoApp extends React.Component {\n  _handleTextInputSave = (text) => {\n    AddTodoMutation.commit(\n      this.props.relay.environment,\n      text,\n      this.props.viewer,\n    );\n  };\n  render() {\n    const hasTodos = this.props.viewer.totalCount > 0;\n    return (\n      <div>\n        <div className=\"header\">Relay Modern Demo</div>\n        <section className=\"todoapp\">\n          <header >\n            <TodoTextInput\n              autoFocus={true}\n              className=\"new-todo\"\n              onSave={this._handleTextInputSave}\n              placeholder=\"create a new competitor\"\n            />\n          </header>\n          <TodoList viewer={this.props.viewer} />\n          {hasTodos &&\n            <TodoListFooter\n              todos={this.props.viewer.todos}\n              viewer={this.props.viewer}\n            />\n          }\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default createFragmentContainer(TodoApp, {\n  viewer: graphql`\n    fragment TodoApp_viewer on User {\n      id,\n      totalCount,\n      ...TodoListFooter_viewer,\n      ...TodoList_viewer,\n    }\n  `,\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./js/components/TodoApp.js\n **/","// @flow\n\nimport {\n  commitMutation,\n  graphql,\n} from 'react-relay';\nimport {ConnectionHandler} from 'relay-runtime';\n\nconst mutation = graphql`\n  mutation AddTodoMutation($input: AddTodoInput!) {\n    addTodo(input:$input) {\n      todoEdge {\n        __typename\n        cursor\n        node {\n          complete\n          id\n          text\n        }\n      }\n      viewer {\n        id\n        totalCount\n      }\n    }\n  }\n`;\n\nfunction sharedUpdater(store, user, newEdge) {\n  const userProxy = store.get(user.id);\n  const conn = ConnectionHandler.getConnection(\n    userProxy,\n    'TodoList_todos',\n  );\n  ConnectionHandler.insertEdgeAfter(conn, newEdge);\n}\n\nlet tempID = 0;\n\nfunction commit(\n  environment,\n  text,\n  user\n) {\n  return commitMutation(\n    environment,\n    {\n      mutation,\n      variables: {\n        input: {text},\n      },\n      updater: (store) => {\n        const payload = store.getRootField('addTodo');\n        const newEdge = payload.getLinkedRecord('todoEdge');\n        sharedUpdater(store, user, newEdge);\n      },\n      optimisticUpdater: (store) => {\n        const id = 'client:newTodo:' + tempID++;\n        const node = store.create(id, 'Todo');\n        node.setValue(text, 'text');\n        node.setValue(id, 'id');\n        const newEdge = store.create(\n          'client:newEdge:' + tempID++,\n          'TodoEdge',\n        );\n        newEdge.setLinkedRecord(node, 'node');\n        sharedUpdater(store, user, newEdge);\n        const userProxy = store.get(user.id);\n        userProxy.setValue(\n          userProxy.getValue('totalCount') + 1,\n          'totalCount',\n        );\n      },\n    }\n  );\n}\n\nexport default {commit};\n\n\n\n/** WEBPACK FOOTER **\n ** ./js/mutations/AddTodoMutation.js\n **/","/**\n * @flow\n * @relayHash c6d6bfd8581767c3ac214dd0defdb7ae\n */\n\n/* eslint-disable */\n\n'use strict';\n\n/*::\nimport type { ConcreteOperation } from 'relay-runtime';\nexport type AddTodoMutationVariables = {|\n  input: {\n    text: string,\n    clientMutationId?: ?string,\n  },\n|};\nexport type AddTodoMutationResponse = {|\n  +addTodo: ?{|\n    +todoEdge: ?{|\n      +__typename: string,\n      +cursor: string,\n      +node: ?{|\n        +complete: ?boolean,\n        +id: string,\n        +text: ?string,\n      |},\n    |},\n    +viewer: ?{|\n      +id: string,\n      +totalCount: ?number,\n    |},\n  |},\n|};\n*/\n\n\n/*\nmutation AddTodoMutation(\n  $input: AddTodoInput!\n) {\n  addTodo(input: $input) {\n    todoEdge {\n      __typename\n      cursor\n      node {\n        complete\n        id\n        text\n      }\n    }\n    viewer {\n      id\n      totalCount\n    }\n  }\n}\n*/\n\nconst batch /*: ConcreteOperation*/ = (function(){\nvar v0 = [\n  {\n    \"kind\": \"LocalArgument\",\n    \"name\": \"input\",\n    \"type\": \"AddTodoInput!\",\n    \"defaultValue\": null\n  }\n],\nv1 = {\n  \"kind\": \"ScalarField\",\n  \"alias\": null,\n  \"name\": \"id\",\n  \"args\": null,\n  \"storageKey\": null\n},\nv2 = [\n  {\n    \"kind\": \"LinkedField\",\n    \"alias\": null,\n    \"name\": \"addTodo\",\n    \"storageKey\": null,\n    \"args\": [\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"input\",\n        \"variableName\": \"input\",\n        \"type\": \"AddTodoInput!\"\n      }\n    ],\n    \"concreteType\": \"AddTodoPayload\",\n    \"plural\": false,\n    \"selections\": [\n      {\n        \"kind\": \"LinkedField\",\n        \"alias\": null,\n        \"name\": \"todoEdge\",\n        \"storageKey\": null,\n        \"args\": null,\n        \"concreteType\": \"TodoEdge\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"kind\": \"ScalarField\",\n            \"alias\": null,\n            \"name\": \"__typename\",\n            \"args\": null,\n            \"storageKey\": null\n          },\n          {\n            \"kind\": \"ScalarField\",\n            \"alias\": null,\n            \"name\": \"cursor\",\n            \"args\": null,\n            \"storageKey\": null\n          },\n          {\n            \"kind\": \"LinkedField\",\n            \"alias\": null,\n            \"name\": \"node\",\n            \"storageKey\": null,\n            \"args\": null,\n            \"concreteType\": \"Todo\",\n            \"plural\": false,\n            \"selections\": [\n              {\n                \"kind\": \"ScalarField\",\n                \"alias\": null,\n                \"name\": \"complete\",\n                \"args\": null,\n                \"storageKey\": null\n              },\n              v1,\n              {\n                \"kind\": \"ScalarField\",\n                \"alias\": null,\n                \"name\": \"text\",\n                \"args\": null,\n                \"storageKey\": null\n              }\n            ]\n          }\n        ]\n      },\n      {\n        \"kind\": \"LinkedField\",\n        \"alias\": null,\n        \"name\": \"viewer\",\n        \"storageKey\": null,\n        \"args\": null,\n        \"concreteType\": \"User\",\n        \"plural\": false,\n        \"selections\": [\n          v1,\n          {\n            \"kind\": \"ScalarField\",\n            \"alias\": null,\n            \"name\": \"totalCount\",\n            \"args\": null,\n            \"storageKey\": null\n          }\n        ]\n      }\n    ]\n  }\n];\nreturn {\n  \"kind\": \"Operation\",\n  \"operation\": \"mutation\",\n  \"name\": \"AddTodoMutation\",\n  \"id\": null,\n  \"metadata\": {},\n  \"argumentDefinitions\": v0,\n  \"selections\": v2,\n  \"fragment\": {\n    \"kind\": \"Fragment\",\n    \"name\": \"AddTodoMutation\",\n    \"type\": \"Mutation\",\n    \"metadata\": null,\n    \"argumentDefinitions\": v0,\n    \"selections\": v2\n  },\n  \"text\": \"mutation AddTodoMutation(\\n  $input: AddTodoInput!\\n) {\\n  addTodo(input: $input) {\\n    todoEdge {\\n      __typename\\n      cursor\\n      node {\\n        complete\\n        id\\n        text\\n      }\\n    }\\n    viewer {\\n      id\\n      totalCount\\n    }\\n  }\\n}\\n\"\n};\n})();\n\nmodule.exports = batch;\n\n\n\n/** WEBPACK FOOTER **\n ** ./js/mutations/__generated__/AddTodoMutation.graphql.js\n **/","// @flow\nimport MarkAllTodosMutation from '../mutations/MarkAllTodosMutation';\n\nimport Todo from './Todo';\nimport TodoWithDetails from './TodoWithDetails';\nimport PropTypes from 'prop-types';\n\nimport React from 'react';\nimport {\n  createRefetchContainer,\n  graphql,\n} from 'react-relay';\n\nimport todoSubscription from '../subscriptions/todo';\n\n\nclass TodoList extends React.Component {\n\n  static contextTypes = {\n    relay: PropTypes.shape({\n      variables: PropTypes.object,\n    }),\n  }\n\n  componentDidMount() {\n\n    const { environment } = this.props.relay;\n    todoSubscription.subscribeTodo(environment, {\n      input: {\n        arg: 'bchen',\n        clientSubscriptionId: 'bchen-client-id',\n      },\n    });\n  }\n\n\n  _handleMarkAllChange = (e) => {\n    const complete = e.target.checked;\n    MarkAllTodosMutation.commit(\n      this.props.relay.environment,\n      complete,\n      this.props.viewer.todos,\n      this.props.viewer,\n    );\n  };\n  renderTodos() {\n    const { relay: { variables: { showTodoWithDetails } } } = this.context;\n    return this.props.viewer.todos.edges.map(edge => {\n      return showTodoWithDetails ? <TodoWithDetails\n        key={edge.node.id}\n        todo={edge.node}\n        viewer={this.props.viewer}\n      /> :\n        <Todo\n          key={edge.node.id}\n          todo={edge.node}\n          viewer={this.props.viewer}\n        />;\n    });\n  }\n  _onSwitchView = e => {\n    const { relay: relayContext } = this.context;\n    const { variables: { showTodoWithDetails } } = relayContext;\n    this.props.relay.refetch(preVars => ({\n      ...preVars,\n      showTodoWithDetails: !showTodoWithDetails,\n    }));\n  };\n\n\n  _onRefetch = _ => {\n    const { relay } = this.props;\n    relay.refetch(preVars => preVars /*fetch vars*/, null /*?render vars*/, null/*?callback*/, { force: true }/*?RefetchOptions*/);\n  };\n\n  _onRefetchWithNewParams = _ => {\n    const { relay } = this.props;\n    relay.refetch(preVars => ({\n      ...preVars,\n      _: Math.floor(Math.random() * 100),\n    }));\n  }\n  render() {\n    const numTodos = this.props.viewer.totalCount;\n    const numCompletedTodos = this.props.viewer.completedCount;\n    return (\n      <section className=\"main\">\n        <input   type=\"checkbox\"\n          checked={numTodos === numCompletedTodos}\n          className=\"toggle-all\"\n          onChange={this._handleMarkAllChange}\n        />\n\n        <ul className=\"todo-list\">\n          {this.renderTodos()}\n        </ul>\n        <div style={{ marginTop: '20px' }}>\n          <div>\n            <button onClick={this._onSwitchView}>refetch-changeview</button>\n          </div>\n          <div>\n            <button onClick={this._onRefetch}>refech</button>\n          </div>\n          <div>\n            <button onClick={this._onRefetchWithNewParams}>refetch with new Params</button>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default createRefetchContainer(TodoList,\n  graphql`\n    fragment TodoList_viewer on User\n        @argumentDefinitions( \n          showTodoWithDetails:{\n            type:\"Boolean!\",\n            defaultValue:false\n           },\n           _:{\n            type:\"Int!\",\n            defaultValue:0\n           }){\n                  todos(\n                    first: 2147483647  # max GraphQLInt\n                  ) @connection(key: \"TodoList_todos\") {\n                    edges {\n                      node {\n                        id,\n                        complete,\n                        ...TodoWithDetails_todo @include(if: $showTodoWithDetails),\n                        ...Todo_todo  @skip(if: $showTodoWithDetails)\n                      },\n                    },\n                  },\n                  id,\n                  totalCount,\n                  completedCount,\n                  echo(_:$_)\n                  ...Todo_viewer,\n        }\n  `,\n  graphql`\n  query TodoListAnyNameRefetchQuery($showTodoWithDetails: Boolean!, $_: Int!){\n    viewer{\n      user{\n           ...TodoList_viewer @arguments(showTodoWithDetails: $showTodoWithDetails, _:$_) \n        }\n      }\n  }`\n);\n\n\n\n/** WEBPACK FOOTER **\n ** ./js/components/TodoList.js\n **/","// @flow\n\nimport {\n  commitMutation,\n  graphql,\n} from 'react-relay';\n\nconst mutation = graphql`\n  mutation MarkAllTodosMutation($input: MarkAllTodosInput!) {\n    markAllTodos(input: $input) {\n      changedTodos {\n        id\n        complete\n      }\n      viewer {\n        id\n        completedCount\n      }\n    }\n  }\n`;\n\nfunction getOptimisticResponse(complete, todos, user) {\n  const payload = {viewer: {id: user.id}};\n  if (todos && todos.edges) {\n    payload.changedTodos = todos.edges\n      .filter(edge => edge.node.complete !== complete)\n      .map(edge => ({\n        complete: complete,\n        id: edge.node.id,\n      }));\n  }\n  if (user.totalCount != null) {\n    payload.viewer.completedCount = complete ?\n      user.totalCount :\n      0;\n  }\n  return {\n    markAllTodos: payload,\n  };\n}\n\nfunction commit(\n  environment,\n  complete,\n  todos,\n  user,\n) {\n  return commitMutation(\n    environment,\n    {\n      mutation,\n      variables: {\n        input: {complete},\n      },\n      optimisticResponse: () => getOptimisticResponse(complete, todos, user),\n    }\n  );\n}\n\nexport default {commit};\n\n\n\n/** WEBPACK FOOTER **\n ** ./js/mutations/MarkAllTodosMutation.js\n **/","/**\n * @flow\n * @relayHash ee1d980901c5289fcd2b1e7fb565f65c\n */\n\n/* eslint-disable */\n\n'use strict';\n\n/*::\nimport type { ConcreteOperation } from 'relay-runtime';\nexport type MarkAllTodosMutationVariables = {|\n  input: {\n    complete: boolean,\n    clientMutationId?: ?string,\n  },\n|};\nexport type MarkAllTodosMutationResponse = {|\n  +markAllTodos: ?{|\n    +changedTodos: ?$ReadOnlyArray<?{|\n      +id: string,\n      +complete: ?boolean,\n    |}>,\n    +viewer: ?{|\n      +id: string,\n      +completedCount: ?number,\n    |},\n  |},\n|};\n*/\n\n\n/*\nmutation MarkAllTodosMutation(\n  $input: MarkAllTodosInput!\n) {\n  markAllTodos(input: $input) {\n    changedTodos {\n      id\n      complete\n    }\n    viewer {\n      id\n      completedCount\n    }\n  }\n}\n*/\n\nconst batch /*: ConcreteOperation*/ = (function(){\nvar v0 = [\n  {\n    \"kind\": \"LocalArgument\",\n    \"name\": \"input\",\n    \"type\": \"MarkAllTodosInput!\",\n    \"defaultValue\": null\n  }\n],\nv1 = {\n  \"kind\": \"ScalarField\",\n  \"alias\": null,\n  \"name\": \"id\",\n  \"args\": null,\n  \"storageKey\": null\n},\nv2 = [\n  {\n    \"kind\": \"LinkedField\",\n    \"alias\": null,\n    \"name\": \"markAllTodos\",\n    \"storageKey\": null,\n    \"args\": [\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"input\",\n        \"variableName\": \"input\",\n        \"type\": \"MarkAllTodosInput!\"\n      }\n    ],\n    \"concreteType\": \"MarkAllTodosPayload\",\n    \"plural\": false,\n    \"selections\": [\n      {\n        \"kind\": \"LinkedField\",\n        \"alias\": null,\n        \"name\": \"changedTodos\",\n        \"storageKey\": null,\n        \"args\": null,\n        \"concreteType\": \"Todo\",\n        \"plural\": true,\n        \"selections\": [\n          v1,\n          {\n            \"kind\": \"ScalarField\",\n            \"alias\": null,\n            \"name\": \"complete\",\n            \"args\": null,\n            \"storageKey\": null\n          }\n        ]\n      },\n      {\n        \"kind\": \"LinkedField\",\n        \"alias\": null,\n        \"name\": \"viewer\",\n        \"storageKey\": null,\n        \"args\": null,\n        \"concreteType\": \"User\",\n        \"plural\": false,\n        \"selections\": [\n          v1,\n          {\n            \"kind\": \"ScalarField\",\n            \"alias\": null,\n            \"name\": \"completedCount\",\n            \"args\": null,\n            \"storageKey\": null\n          }\n        ]\n      }\n    ]\n  }\n];\nreturn {\n  \"kind\": \"Operation\",\n  \"operation\": \"mutation\",\n  \"name\": \"MarkAllTodosMutation\",\n  \"id\": null,\n  \"metadata\": {},\n  \"argumentDefinitions\": v0,\n  \"selections\": v2,\n  \"fragment\": {\n    \"kind\": \"Fragment\",\n    \"name\": \"MarkAllTodosMutation\",\n    \"type\": \"Mutation\",\n    \"metadata\": null,\n    \"argumentDefinitions\": v0,\n    \"selections\": v2\n  },\n  \"text\": \"mutation MarkAllTodosMutation(\\n  $input: MarkAllTodosInput!\\n) {\\n  markAllTodos(input: $input) {\\n    changedTodos {\\n      id\\n      complete\\n    }\\n    viewer {\\n      id\\n      completedCount\\n    }\\n  }\\n}\\n\"\n};\n})();\n\nmodule.exports = batch;\n\n\n\n/** WEBPACK FOOTER **\n ** ./js/mutations/__generated__/MarkAllTodosMutation.graphql.js\n **/","//  @flow\n\nimport ChangeTodoStatusMutation from '../mutations/ChangeTodoStatusMutation';\nimport RemoveTodoMutation from '../mutations/RemoveTodoMutation';\nimport RenameTodoMutation from '../mutations/RenameTodoMutation';\nimport TodoTextInput from './TodoTextInput';\n\nimport React from 'react';\nimport {\n  createFragmentContainer,\n  graphql,\n} from 'react-relay';\n\nimport type {\n  Todo_todo,\n} from './__generated__/Todo_todo';\n\nimport classnames from 'classnames';\n\nclass Todo extends React.Component {\n  state = {\n    isEditing: false,\n  };\n\n  _handleCompleteChange = (e) => {\n    const complete = e.target.checked;\n    ChangeTodoStatusMutation.commit(\n      this.props.relay.environment,\n      complete,\n      this.props.todo,\n      this.props.viewer,\n    );\n  };\n  _handleDestroyClick = () => {\n    this._removeTodo();\n  };\n  _handleLabelDoubleClick = () => {\n    this._setEditMode(true);\n  };\n  _handleTextInputCancel = () => {\n    this._setEditMode(false);\n  };\n  _handleTextInputDelete = () => {\n    this._setEditMode(false);\n    this._removeTodo();\n  };\n  _handleTextInputSave = (text) => {\n    this._setEditMode(false);\n    RenameTodoMutation.commit(\n      this.props.relay.environment,\n      text,\n      this.props.todo,\n    );\n  };\n  _removeTodo() {\n    RemoveTodoMutation.commit(\n      this.props.relay.environment,\n      this.props.todo,\n      this.props.viewer,\n    );\n  }\n  _setEditMode = (shouldEdit) => {\n    this.setState({ isEditing: shouldEdit });\n  };\n  renderTextInput() {\n    return (\n      <TodoTextInput\n        className=\"edit\"\n        commitOnBlur={true}\n        initialValue={this.props.todo.text}\n        onCancel={this._handleTextInputCancel}\n        onDelete={this._handleTextInputDelete}\n        onSave={this._handleTextInputSave}\n      />\n    );\n  }\n  render() {\n    return (\n      <li\n        className={classnames({\n          completed: this.props.todo.complete,\n          editing: this.state.isEditing,\n        })}>\n        <div className=\"view\">\n          <input\n            checked={this.props.todo.complete}\n            className=\"toggle\"\n            onChange={this._handleCompleteChange}\n            type=\"checkbox\"\n          />\n          <label onDoubleClick={this._handleLabelDoubleClick}>\n            {this.props.todo.text}\n          </label>\n          <button\n            className=\"destroy\"\n            onClick={this._handleDestroyClick}\n          />\n        </div>\n        {this.state.isEditing && this.renderTextInput()}\n      </li>\n    );\n  }\n}\n\nexport default createFragmentContainer(Todo, {\n  todo: graphql`\n    fragment Todo_todo on Todo {\n      complete,\n      id,\n      text,\n    }\n  `,\n  viewer: graphql`\n    fragment Todo_viewer on User {\n      id,\n      totalCount,\n      completedCount,\n    }\n  `,\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./js/components/Todo.js\n **/","// @flow\n\nimport {\n  commitMutation,\n  graphql,\n} from 'react-relay';\n\nconst mutation = graphql`\n  mutation ChangeTodoStatusMutation($input: ChangeTodoStatusInput!) {\n    changeTodoStatus(input: $input) {\n      todo {\n        id\n        complete\n      }\n      viewer {\n        id\n        completedCount\n      }\n    }\n  }\n`;\n\nfunction getOptimisticResponse(complete, todo, user) {\n  const viewerPayload = {id: user.id};\n  if (user.completedCount != null) {\n    viewerPayload.completedCount = complete ?\n      user.completedCount + 1 :\n      user.completedCount - 1;\n  }\n  return {\n    changeTodoStatus: {\n      todo: {\n        complete: complete,\n        id: todo.id,\n      },\n      viewer: viewerPayload,\n    },\n  };\n}\n\nfunction commit(\n  environment,\n  complete,\n  todo,\n  user,\n) {\n  return commitMutation(\n    environment,\n    {\n      mutation,\n      variables: {\n        input: {complete, id: todo.id},\n      },\n      optimisticResponse: () => getOptimisticResponse(complete, todo, user),\n    }\n  );\n}\n\nexport default {commit};\n\n\n\n/** WEBPACK FOOTER **\n ** ./js/mutations/ChangeTodoStatusMutation.js\n **/","/**\n * @flow\n * @relayHash 260ce28b994d29a3919eba603e9c0fcc\n */\n\n/* eslint-disable */\n\n'use strict';\n\n/*::\nimport type { ConcreteOperation } from 'relay-runtime';\nexport type ChangeTodoStatusMutationVariables = {|\n  input: {\n    complete: boolean,\n    id: string,\n    clientMutationId?: ?string,\n  },\n|};\nexport type ChangeTodoStatusMutationResponse = {|\n  +changeTodoStatus: ?{|\n    +todo: ?{|\n      +id: string,\n      +complete: ?boolean,\n    |},\n    +viewer: ?{|\n      +id: string,\n      +completedCount: ?number,\n    |},\n  |},\n|};\n*/\n\n\n/*\nmutation ChangeTodoStatusMutation(\n  $input: ChangeTodoStatusInput!\n) {\n  changeTodoStatus(input: $input) {\n    todo {\n      id\n      complete\n    }\n    viewer {\n      id\n      completedCount\n    }\n  }\n}\n*/\n\nconst batch /*: ConcreteOperation*/ = (function(){\nvar v0 = [\n  {\n    \"kind\": \"LocalArgument\",\n    \"name\": \"input\",\n    \"type\": \"ChangeTodoStatusInput!\",\n    \"defaultValue\": null\n  }\n],\nv1 = {\n  \"kind\": \"ScalarField\",\n  \"alias\": null,\n  \"name\": \"id\",\n  \"args\": null,\n  \"storageKey\": null\n},\nv2 = [\n  {\n    \"kind\": \"LinkedField\",\n    \"alias\": null,\n    \"name\": \"changeTodoStatus\",\n    \"storageKey\": null,\n    \"args\": [\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"input\",\n        \"variableName\": \"input\",\n        \"type\": \"ChangeTodoStatusInput!\"\n      }\n    ],\n    \"concreteType\": \"ChangeTodoStatusPayload\",\n    \"plural\": false,\n    \"selections\": [\n      {\n        \"kind\": \"LinkedField\",\n        \"alias\": null,\n        \"name\": \"todo\",\n        \"storageKey\": null,\n        \"args\": null,\n        \"concreteType\": \"Todo\",\n        \"plural\": false,\n        \"selections\": [\n          v1,\n          {\n            \"kind\": \"ScalarField\",\n            \"alias\": null,\n            \"name\": \"complete\",\n            \"args\": null,\n            \"storageKey\": null\n          }\n        ]\n      },\n      {\n        \"kind\": \"LinkedField\",\n        \"alias\": null,\n        \"name\": \"viewer\",\n        \"storageKey\": null,\n        \"args\": null,\n        \"concreteType\": \"User\",\n        \"plural\": false,\n        \"selections\": [\n          v1,\n          {\n            \"kind\": \"ScalarField\",\n            \"alias\": null,\n            \"name\": \"completedCount\",\n            \"args\": null,\n            \"storageKey\": null\n          }\n        ]\n      }\n    ]\n  }\n];\nreturn {\n  \"kind\": \"Operation\",\n  \"operation\": \"mutation\",\n  \"name\": \"ChangeTodoStatusMutation\",\n  \"id\": null,\n  \"metadata\": {},\n  \"argumentDefinitions\": v0,\n  \"selections\": v2,\n  \"fragment\": {\n    \"kind\": \"Fragment\",\n    \"name\": \"ChangeTodoStatusMutation\",\n    \"type\": \"Mutation\",\n    \"metadata\": null,\n    \"argumentDefinitions\": v0,\n    \"selections\": v2\n  },\n  \"text\": \"mutation ChangeTodoStatusMutation(\\n  $input: ChangeTodoStatusInput!\\n) {\\n  changeTodoStatus(input: $input) {\\n    todo {\\n      id\\n      complete\\n    }\\n    viewer {\\n      id\\n      completedCount\\n    }\\n  }\\n}\\n\"\n};\n})();\n\nmodule.exports = batch;\n\n\n\n/** WEBPACK FOOTER **\n ** ./js/mutations/__generated__/ChangeTodoStatusMutation.graphql.js\n **/","// @flow\nimport {\n  commitMutation,\n  graphql,\n} from 'react-relay';\nimport {ConnectionHandler} from 'relay-runtime';\n\nconst mutation = graphql`\n  mutation RemoveTodoMutation($input: RemoveTodoInput!) {\n    removeTodo(input: $input) {\n      deletedTodoId,\n      viewer {\n        completedCount,\n        totalCount,\n      },\n    }\n  }\n`;\n\nfunction sharedUpdater(store, user, deletedID) {\n  const userProxy = store.get(user.id);\n  const conn = ConnectionHandler.getConnection(\n    userProxy,\n    'TodoList_todos',\n  );\n  ConnectionHandler.deleteNode(\n    conn,\n    deletedID,\n  );\n}\n\nfunction commit(\n  environment,\n  todo,\n  user,\n) {\n  return commitMutation(\n    environment,\n    {\n      mutation,\n      variables: {\n        input: {id: todo.id},\n      },\n      updater: (store) => {\n        const payload = store.getRootField('removeTodo');\n        sharedUpdater(store, user, payload.getValue('deletedTodoId'));\n      },\n      optimisticUpdater: (store) => {\n        sharedUpdater(store, user, todo.id);\n      },\n    }\n  );\n}\n\nexport default {commit};\n\n\n\n/** WEBPACK FOOTER **\n ** ./js/mutations/RemoveTodoMutation.js\n **/","/**\n * @flow\n * @relayHash 6e631504a8ebdea7c6d9f12f393e2be8\n */\n\n/* eslint-disable */\n\n'use strict';\n\n/*::\nimport type { ConcreteOperation } from 'relay-runtime';\nexport type RemoveTodoMutationVariables = {|\n  input: {\n    id: string,\n    clientMutationId?: ?string,\n  },\n|};\nexport type RemoveTodoMutationResponse = {|\n  +removeTodo: ?{|\n    +deletedTodoId: ?string,\n    +viewer: ?{|\n      +completedCount: ?number,\n      +totalCount: ?number,\n    |},\n  |},\n|};\n*/\n\n\n/*\nmutation RemoveTodoMutation(\n  $input: RemoveTodoInput!\n) {\n  removeTodo(input: $input) {\n    deletedTodoId\n    viewer {\n      completedCount\n      totalCount\n      id\n    }\n  }\n}\n*/\n\nconst batch /*: ConcreteOperation*/ = (function(){\nvar v0 = [\n  {\n    \"kind\": \"LocalArgument\",\n    \"name\": \"input\",\n    \"type\": \"RemoveTodoInput!\",\n    \"defaultValue\": null\n  }\n],\nv1 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"input\",\n    \"variableName\": \"input\",\n    \"type\": \"RemoveTodoInput!\"\n  }\n],\nv2 = {\n  \"kind\": \"ScalarField\",\n  \"alias\": null,\n  \"name\": \"deletedTodoId\",\n  \"args\": null,\n  \"storageKey\": null\n},\nv3 = {\n  \"kind\": \"ScalarField\",\n  \"alias\": null,\n  \"name\": \"completedCount\",\n  \"args\": null,\n  \"storageKey\": null\n},\nv4 = {\n  \"kind\": \"ScalarField\",\n  \"alias\": null,\n  \"name\": \"totalCount\",\n  \"args\": null,\n  \"storageKey\": null\n};\nreturn {\n  \"kind\": \"Operation\",\n  \"operation\": \"mutation\",\n  \"name\": \"RemoveTodoMutation\",\n  \"id\": null,\n  \"metadata\": {},\n  \"argumentDefinitions\": v0,\n  \"selections\": [\n    {\n      \"kind\": \"LinkedField\",\n      \"alias\": null,\n      \"name\": \"removeTodo\",\n      \"storageKey\": null,\n      \"args\": v1,\n      \"concreteType\": \"RemoveTodoPayload\",\n      \"plural\": false,\n      \"selections\": [\n        v2,\n        {\n          \"kind\": \"LinkedField\",\n          \"alias\": null,\n          \"name\": \"viewer\",\n          \"storageKey\": null,\n          \"args\": null,\n          \"concreteType\": \"User\",\n          \"plural\": false,\n          \"selections\": [\n            v3,\n            v4,\n            {\n              \"kind\": \"ScalarField\",\n              \"alias\": null,\n              \"name\": \"id\",\n              \"args\": null,\n              \"storageKey\": null\n            }\n          ]\n        }\n      ]\n    }\n  ],\n  \"fragment\": {\n    \"kind\": \"Fragment\",\n    \"name\": \"RemoveTodoMutation\",\n    \"type\": \"Mutation\",\n    \"metadata\": null,\n    \"argumentDefinitions\": v0,\n    \"selections\": [\n      {\n        \"kind\": \"LinkedField\",\n        \"alias\": null,\n        \"name\": \"removeTodo\",\n        \"storageKey\": null,\n        \"args\": v1,\n        \"concreteType\": \"RemoveTodoPayload\",\n        \"plural\": false,\n        \"selections\": [\n          v2,\n          {\n            \"kind\": \"LinkedField\",\n            \"alias\": null,\n            \"name\": \"viewer\",\n            \"storageKey\": null,\n            \"args\": null,\n            \"concreteType\": \"User\",\n            \"plural\": false,\n            \"selections\": [\n              v3,\n              v4\n            ]\n          }\n        ]\n      }\n    ]\n  },\n  \"text\": \"mutation RemoveTodoMutation(\\n  $input: RemoveTodoInput!\\n) {\\n  removeTodo(input: $input) {\\n    deletedTodoId\\n    viewer {\\n      completedCount\\n      totalCount\\n      id\\n    }\\n  }\\n}\\n\"\n};\n})();\n\nmodule.exports = batch;\n\n\n\n/** WEBPACK FOOTER **\n ** ./js/mutations/__generated__/RemoveTodoMutation.graphql.js\n **/","// @flow\nimport {\n  commitMutation,\n  graphql,\n} from 'react-relay';\n\nconst mutation = graphql`\n  mutation RenameTodoMutation($input: RenameTodoInput!) {\n    renameTodo(input:$input) {\n      todo {\n        id\n        text\n      }\n    }\n  }\n`;\n\nfunction getOptimisticResponse(text, todo) {\n  return {\n    renameTodo: {\n      todo: {\n        id: todo.id,\n        text: text,\n      },\n    },\n  };\n}\n\nfunction commit(\n  environment,\n  text,\n  todo\n) {\n  return commitMutation(\n    environment,\n    {\n      mutation,\n      variables: {\n        input: {text, id: todo.id},\n      },\n      optimisticResponse: () => getOptimisticResponse(text, todo),\n    }\n  );\n}\n\nexport default {commit};\n\n\n\n/** WEBPACK FOOTER **\n ** ./js/mutations/RenameTodoMutation.js\n **/","/**\n * @flow\n * @relayHash 5d204ce6113035482d889df21e5219c8\n */\n\n/* eslint-disable */\n\n'use strict';\n\n/*::\nimport type { ConcreteOperation } from 'relay-runtime';\nexport type RenameTodoMutationVariables = {|\n  input: {\n    id: string,\n    text: string,\n    clientMutationId?: ?string,\n  },\n|};\nexport type RenameTodoMutationResponse = {|\n  +renameTodo: ?{|\n    +todo: ?{|\n      +id: string,\n      +text: ?string,\n    |},\n  |},\n|};\n*/\n\n\n/*\nmutation RenameTodoMutation(\n  $input: RenameTodoInput!\n) {\n  renameTodo(input: $input) {\n    todo {\n      id\n      text\n    }\n  }\n}\n*/\n\nconst batch /*: ConcreteOperation*/ = (function(){\nvar v0 = [\n  {\n    \"kind\": \"LocalArgument\",\n    \"name\": \"input\",\n    \"type\": \"RenameTodoInput!\",\n    \"defaultValue\": null\n  }\n],\nv1 = [\n  {\n    \"kind\": \"LinkedField\",\n    \"alias\": null,\n    \"name\": \"renameTodo\",\n    \"storageKey\": null,\n    \"args\": [\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"input\",\n        \"variableName\": \"input\",\n        \"type\": \"RenameTodoInput!\"\n      }\n    ],\n    \"concreteType\": \"RenameTodoPayload\",\n    \"plural\": false,\n    \"selections\": [\n      {\n        \"kind\": \"LinkedField\",\n        \"alias\": null,\n        \"name\": \"todo\",\n        \"storageKey\": null,\n        \"args\": null,\n        \"concreteType\": \"Todo\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"kind\": \"ScalarField\",\n            \"alias\": null,\n            \"name\": \"id\",\n            \"args\": null,\n            \"storageKey\": null\n          },\n          {\n            \"kind\": \"ScalarField\",\n            \"alias\": null,\n            \"name\": \"text\",\n            \"args\": null,\n            \"storageKey\": null\n          }\n        ]\n      }\n    ]\n  }\n];\nreturn {\n  \"kind\": \"Operation\",\n  \"operation\": \"mutation\",\n  \"name\": \"RenameTodoMutation\",\n  \"id\": null,\n  \"metadata\": {},\n  \"argumentDefinitions\": v0,\n  \"selections\": v1,\n  \"fragment\": {\n    \"kind\": \"Fragment\",\n    \"name\": \"RenameTodoMutation\",\n    \"type\": \"Mutation\",\n    \"metadata\": null,\n    \"argumentDefinitions\": v0,\n    \"selections\": v1\n  },\n  \"text\": \"mutation RenameTodoMutation(\\n  $input: RenameTodoInput!\\n) {\\n  renameTodo(input: $input) {\\n    todo {\\n      id\\n      text\\n    }\\n  }\\n}\\n\"\n};\n})();\n\nmodule.exports = batch;\n\n\n\n/** WEBPACK FOOTER **\n ** ./js/mutations/__generated__/RenameTodoMutation.graphql.js\n **/","// @flow\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nconst PropTypes = require('prop-types');\n\nconst ENTER_KEY_CODE = 13;\nconst ESC_KEY_CODE = 27;\n\nexport default class TodoTextInput extends React.Component {\n  static defaultProps = {\n    commitOnBlur: false,\n  };\n  static propTypes = {\n    className: PropTypes.string,\n    commitOnBlur: PropTypes.bool.isRequired,\n    initialValue: PropTypes.string,\n    onCancel: PropTypes.func,\n    onDelete: PropTypes.func,\n    onSave: PropTypes.func.isRequired,\n    placeholder: PropTypes.string,\n  };\n  state = {\n    isEditing: false,\n    text: this.props.initialValue || '',\n  };\n  componentDidMount() {\n    ReactDOM.findDOMNode(this).focus();\n  }\n  _commitChanges = () => {\n    const newText = this.state.text.trim();\n    if (this.props.onDelete && newText === '') {\n      this.props.onDelete();\n    } else if (this.props.onCancel && newText === this.props.initialValue) {\n      this.props.onCancel();\n    } else if (newText !== '') {\n      this.props.onSave(newText);\n      this.setState({text: ''});\n    }\n  };\n  _handleBlur = () => {\n    if (this.props.commitOnBlur) {\n      this._commitChanges();\n    }\n  };\n  _handleChange = (e) => {\n    this.setState({text: e.target.value});\n  };\n  _handleKeyDown = (e) => {\n    if (this.props.onCancel && e.keyCode === ESC_KEY_CODE) {\n      this.props.onCancel();\n    } else if (e.keyCode === ENTER_KEY_CODE) {\n      this._commitChanges();\n    }\n  };\n  render() {\n    return (\n      <input\n        className={this.props.className}\n        onBlur={this._handleBlur}\n        onChange={this._handleChange}\n        onKeyDown={this._handleKeyDown}\n        placeholder={this.props.placeholder}\n        value={this.state.text}\n      />\n    );\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./js/components/TodoTextInput.js\n **/","/**\n * @flow\n */\n\n/* eslint-disable */\n\n'use strict';\n\n/*::\nimport type { ConcreteFragment } from 'relay-runtime';\nexport type Todo_todo = {|\n  +complete: ?boolean,\n  +id: string,\n  +text: ?string,\n|};\n*/\n\n\nconst fragment /*: ConcreteFragment*/ = {\n  \"kind\": \"Fragment\",\n  \"name\": \"Todo_todo\",\n  \"type\": \"Todo\",\n  \"metadata\": null,\n  \"argumentDefinitions\": [],\n  \"selections\": [\n    {\n      \"kind\": \"ScalarField\",\n      \"alias\": null,\n      \"name\": \"complete\",\n      \"args\": null,\n      \"storageKey\": null\n    },\n    {\n      \"kind\": \"ScalarField\",\n      \"alias\": null,\n      \"name\": \"id\",\n      \"args\": null,\n      \"storageKey\": null\n    },\n    {\n      \"kind\": \"ScalarField\",\n      \"alias\": null,\n      \"name\": \"text\",\n      \"args\": null,\n      \"storageKey\": null\n    }\n  ]\n};\n\nmodule.exports = fragment;\n\n\n\n/** WEBPACK FOOTER **\n ** ./js/components/__generated__/Todo_todo.graphql.js\n **/","/**\n * @flow\n */\n\n/* eslint-disable */\n\n'use strict';\n\n/*::\nimport type { ConcreteFragment } from 'relay-runtime';\nexport type Todo_viewer = {|\n  +id: string,\n  +totalCount: ?number,\n  +completedCount: ?number,\n|};\n*/\n\n\nconst fragment /*: ConcreteFragment*/ = {\n  \"kind\": \"Fragment\",\n  \"name\": \"Todo_viewer\",\n  \"type\": \"User\",\n  \"metadata\": null,\n  \"argumentDefinitions\": [],\n  \"selections\": [\n    {\n      \"kind\": \"ScalarField\",\n      \"alias\": null,\n      \"name\": \"id\",\n      \"args\": null,\n      \"storageKey\": null\n    },\n    {\n      \"kind\": \"ScalarField\",\n      \"alias\": null,\n      \"name\": \"totalCount\",\n      \"args\": null,\n      \"storageKey\": null\n    },\n    {\n      \"kind\": \"ScalarField\",\n      \"alias\": null,\n      \"name\": \"completedCount\",\n      \"args\": null,\n      \"storageKey\": null\n    }\n  ]\n};\n\nmodule.exports = fragment;\n\n\n\n/** WEBPACK FOOTER **\n ** ./js/components/__generated__/Todo_viewer.graphql.js\n **/","// @flow\nimport React from 'react';\nimport {\n  createRefetchContainer,\n  graphql,\n} from 'react-relay';\n\nconst TodoWithDetails = props => {\n  const { relay, todo: { id, text, status, details } } = props;\n  const refetch = e => {\n    relay.refetch({\n      showDetails: true,\n      id,\n    });\n  };\n  return (\n    <div className=\"event-row\">\n      <span>{text + ' status: ' + status}</span>\n      <span><button onClick={refetch} >check details</button></span>\n      {details && <span style={{ backgroundColor: 'red', color: 'white' }}> {details}</span>}\n    </div>\n  );\n};\n\n\nexport default createRefetchContainer(TodoWithDetails,\n  graphql`fragment TodoWithDetails_todo on Todo\n      @argumentDefinitions(\n          showDetails:{\n            type:\"Boolean!\",\n            defaultValue:false\n          }\n      ){\n        id\n        text\n        status\n        details @include(if: $showDetails)\n    }`,\n  graphql`\n    query TodoWithDetailsBoChenRefetchQuery($id: ID!, $showDetails: Boolean!){\n        node(id: $id){\n          ... TodoWithDetails_todo @arguments(showDetails:$showDetails)\n        }\n    }`);\n\n\n/** WEBPACK FOOTER **\n ** ./js/components/TodoWithDetails.js\n **/","/**\n * @flow\n */\n\n/* eslint-disable */\n\n'use strict';\n\n/*::\nimport type { ConcreteFragment } from 'relay-runtime';\nexport type TodoWithDetails_todo = {|\n  +id: string,\n  +text: ?string,\n  +status: ?string,\n  +details?: ?string,\n|};\n*/\n\n\nconst fragment /*: ConcreteFragment*/ = {\n  \"kind\": \"Fragment\",\n  \"name\": \"TodoWithDetails_todo\",\n  \"type\": \"Todo\",\n  \"metadata\": null,\n  \"argumentDefinitions\": [\n    {\n      \"kind\": \"LocalArgument\",\n      \"name\": \"showDetails\",\n      \"type\": \"Boolean!\",\n      \"defaultValue\": false\n    }\n  ],\n  \"selections\": [\n    {\n      \"kind\": \"ScalarField\",\n      \"alias\": null,\n      \"name\": \"id\",\n      \"args\": null,\n      \"storageKey\": null\n    },\n    {\n      \"kind\": \"ScalarField\",\n      \"alias\": null,\n      \"name\": \"text\",\n      \"args\": null,\n      \"storageKey\": null\n    },\n    {\n      \"kind\": \"ScalarField\",\n      \"alias\": null,\n      \"name\": \"status\",\n      \"args\": null,\n      \"storageKey\": null\n    },\n    {\n      \"kind\": \"Condition\",\n      \"passingValue\": true,\n      \"condition\": \"showDetails\",\n      \"selections\": [\n        {\n          \"kind\": \"ScalarField\",\n          \"alias\": null,\n          \"name\": \"details\",\n          \"args\": null,\n          \"storageKey\": null\n        }\n      ]\n    }\n  ]\n};\n\nmodule.exports = fragment;\n\n\n\n/** WEBPACK FOOTER **\n ** ./js/components/__generated__/TodoWithDetails_todo.graphql.js\n **/","/**\n * @flow\n * @relayHash ae9751c8f6d4cc36c8f999da1355af8b\n */\n\n/* eslint-disable */\n\n'use strict';\n\n/*::\nimport type { ConcreteOperation } from 'relay-runtime';\nimport type { FragmentReference } from 'relay-runtime';\ntype TodoWithDetails_todo = any;\nexport type TodoWithDetailsBoChenRefetchQueryResponse = {|\n  +node: ?{|\n    +__fragments: FragmentReference<TodoWithDetails_todo>,\n  |},\n|};\n*/\n\n\n/*\nquery TodoWithDetailsBoChenRefetchQuery(\n  $id: ID!\n  $showDetails: Boolean!\n) {\n  node(id: $id) {\n    __typename\n    ...TodoWithDetails_todo_m0EcS\n    id\n  }\n}\n\nfragment TodoWithDetails_todo_m0EcS on Todo {\n  id\n  text\n  status\n  details @include(if: $showDetails)\n}\n*/\n\nconst batch /*: ConcreteOperation*/ = (function(){\nvar v0 = [\n  {\n    \"kind\": \"LocalArgument\",\n    \"name\": \"id\",\n    \"type\": \"ID!\",\n    \"defaultValue\": null\n  },\n  {\n    \"kind\": \"LocalArgument\",\n    \"name\": \"showDetails\",\n    \"type\": \"Boolean!\",\n    \"defaultValue\": null\n  }\n],\nv1 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"id\",\n    \"variableName\": \"id\",\n    \"type\": \"ID!\"\n  }\n];\nreturn {\n  \"kind\": \"Operation\",\n  \"operation\": \"query\",\n  \"name\": \"TodoWithDetailsBoChenRefetchQuery\",\n  \"id\": null,\n  \"metadata\": {},\n  \"argumentDefinitions\": v0,\n  \"selections\": [\n    {\n      \"kind\": \"LinkedField\",\n      \"alias\": null,\n      \"name\": \"node\",\n      \"storageKey\": null,\n      \"args\": v1,\n      \"concreteType\": null,\n      \"plural\": false,\n      \"selections\": [\n        {\n          \"kind\": \"ScalarField\",\n          \"alias\": null,\n          \"name\": \"__typename\",\n          \"args\": null,\n          \"storageKey\": null\n        },\n        {\n          \"kind\": \"ScalarField\",\n          \"alias\": null,\n          \"name\": \"id\",\n          \"args\": null,\n          \"storageKey\": null\n        },\n        {\n          \"kind\": \"InlineFragment\",\n          \"type\": \"Todo\",\n          \"selections\": [\n            {\n              \"kind\": \"ScalarField\",\n              \"alias\": null,\n              \"name\": \"text\",\n              \"args\": null,\n              \"storageKey\": null\n            },\n            {\n              \"kind\": \"ScalarField\",\n              \"alias\": null,\n              \"name\": \"status\",\n              \"args\": null,\n              \"storageKey\": null\n            },\n            {\n              \"kind\": \"Condition\",\n              \"passingValue\": true,\n              \"condition\": \"showDetails\",\n              \"selections\": [\n                {\n                  \"kind\": \"ScalarField\",\n                  \"alias\": null,\n                  \"name\": \"details\",\n                  \"args\": null,\n                  \"storageKey\": null\n                }\n              ]\n            }\n          ]\n        }\n      ]\n    }\n  ],\n  \"fragment\": {\n    \"kind\": \"Fragment\",\n    \"name\": \"TodoWithDetailsBoChenRefetchQuery\",\n    \"type\": \"Query\",\n    \"metadata\": null,\n    \"argumentDefinitions\": v0,\n    \"selections\": [\n      {\n        \"kind\": \"LinkedField\",\n        \"alias\": null,\n        \"name\": \"node\",\n        \"storageKey\": null,\n        \"args\": v1,\n        \"concreteType\": null,\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"kind\": \"FragmentSpread\",\n            \"name\": \"TodoWithDetails_todo\",\n            \"args\": [\n              {\n                \"kind\": \"Variable\",\n                \"name\": \"showDetails\",\n                \"variableName\": \"showDetails\",\n                \"type\": null\n              }\n            ]\n          }\n        ]\n      }\n    ]\n  },\n  \"text\": \"query TodoWithDetailsBoChenRefetchQuery(\\n  $id: ID!\\n  $showDetails: Boolean!\\n) {\\n  node(id: $id) {\\n    __typename\\n    ...TodoWithDetails_todo_m0EcS\\n    id\\n  }\\n}\\n\\nfragment TodoWithDetails_todo_m0EcS on Todo {\\n  id\\n  text\\n  status\\n  details @include(if: $showDetails)\\n}\\n\"\n};\n})();\n\nmodule.exports = batch;\n\n\n\n/** WEBPACK FOOTER **\n ** ./js/components/__generated__/TodoWithDetailsBoChenRefetchQuery.graphql.js\n **/","// @flow\nimport {\n  requestSubscription,\n  graphql,\n} from 'react-relay';\nimport {ConnectionHandler} from 'relay-runtime';\n\n\nconst subscription = graphql`\n  #relay-compiler: FindGraphQLTags: Operation names in graphql tags must be \n  #prefixed with the module name and end in \"Mutation\", \"Query\", or \"Subscription\". \n  #Got 'TodoblablaSubscription' in module 'TodoSubscription' (file name).\n  subscription todoSubscription($input: TodoSubScriptionInput!){\n      todoSubScription(input: $input){\n         clientSubscriptionId\n         arg\n         todo{\n           id,\n           text,\n           complete\n         }\n      }\n  }`;\n\nconst subscribeTodo = (environment, arg) => {\n  /**\n   * D:\\relay-muckaround\\packages\\relay-runtime\\store\\RelayModernEnvironment.js #sendSubscription\n    *RelayModernEnvironment#sendSubscription({\n      onCompleted,\n      onNext,\n      onError,\n      operation,\n      updater,\n    }: {\n      onCompleted?: ?(errors: ?Array<PayloadError>) => void,\n      onNext?: ?(payload: RelayResponsePayload) => void,\n      onError?: ?(error: Error) => void,\n      operation: OperationSelector,\n      updater?: ?SelectorStoreUpdater,\n    }): Disposable\n   */\n  requestSubscription(environment, {\n    subscription,\n    variables: arg,\n    // after socket has been closed successfully\n    onCompleted: () => {alert('done!');/* need this if payload doesn't contain an id field*/},\n    // connection_err ..etc\n    onError: error => console.error(error),\n    //end of pipe line; after store merged\n    onNext: response => {},\n    // begin of pipe line; before store merged\n    updater: (store /*RelayRecordSourceSelectorProxy*/, data /*selector data, raw json*/) => {\n      //@see: D:\\relay-muckaround\\packages\\relay-runtime\\store\\RelayPublishQueue.js\n      /**\n       'RelayRecordSourceSelectorProxy.getResponse: This call is deprecated. ' +\n        'If you need need to access data from a mutation response, you ' +\n        'should use the mutation fragment data passed in as a second ' +\n        'argument to the mutation updater.'\n       */\n    }\n  });\n};\n\nexport default {subscribeTodo};\n\n\n/** WEBPACK FOOTER **\n ** ./js/subscriptions/todo.js\n **/","/**\n * @flow\n * @relayHash a8eaee958f06bbcdc688614bc6b5cbf5\n */\n\n/* eslint-disable */\n\n'use strict';\n\n/*::\nimport type { ConcreteOperation } from 'relay-runtime';\nexport type todoSubscriptionVariables = {|\n  input: {\n    arg?: ?string,\n    clientSubscriptionId?: ?string,\n  },\n|};\nexport type todoSubscriptionResponse = {|\n  +todoSubScription: ?{|\n    +clientSubscriptionId: ?string,\n    +arg: ?string,\n    +todo: ?{|\n      +id: string,\n      +text: ?string,\n      +complete: ?boolean,\n    |},\n  |},\n|};\n*/\n\n\n/*\nsubscription todoSubscription(\n  $input: TodoSubScriptionInput!\n) {\n  todoSubScription(input: $input) {\n    clientSubscriptionId\n    arg\n    todo {\n      id\n      text\n      complete\n    }\n  }\n}\n*/\n\nconst batch /*: ConcreteOperation*/ = (function(){\nvar v0 = [\n  {\n    \"kind\": \"LocalArgument\",\n    \"name\": \"input\",\n    \"type\": \"TodoSubScriptionInput!\",\n    \"defaultValue\": null\n  }\n],\nv1 = [\n  {\n    \"kind\": \"LinkedField\",\n    \"alias\": null,\n    \"name\": \"todoSubScription\",\n    \"storageKey\": null,\n    \"args\": [\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"input\",\n        \"variableName\": \"input\",\n        \"type\": \"TodoSubScriptionInput!\"\n      }\n    ],\n    \"concreteType\": \"TodoSubScriptionPayload\",\n    \"plural\": false,\n    \"selections\": [\n      {\n        \"kind\": \"ScalarField\",\n        \"alias\": null,\n        \"name\": \"clientSubscriptionId\",\n        \"args\": null,\n        \"storageKey\": null\n      },\n      {\n        \"kind\": \"ScalarField\",\n        \"alias\": null,\n        \"name\": \"arg\",\n        \"args\": null,\n        \"storageKey\": null\n      },\n      {\n        \"kind\": \"LinkedField\",\n        \"alias\": null,\n        \"name\": \"todo\",\n        \"storageKey\": null,\n        \"args\": null,\n        \"concreteType\": \"Todo\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"kind\": \"ScalarField\",\n            \"alias\": null,\n            \"name\": \"id\",\n            \"args\": null,\n            \"storageKey\": null\n          },\n          {\n            \"kind\": \"ScalarField\",\n            \"alias\": null,\n            \"name\": \"text\",\n            \"args\": null,\n            \"storageKey\": null\n          },\n          {\n            \"kind\": \"ScalarField\",\n            \"alias\": null,\n            \"name\": \"complete\",\n            \"args\": null,\n            \"storageKey\": null\n          }\n        ]\n      }\n    ]\n  }\n];\nreturn {\n  \"kind\": \"Operation\",\n  \"operation\": \"subscription\",\n  \"name\": \"todoSubscription\",\n  \"id\": null,\n  \"metadata\": {},\n  \"argumentDefinitions\": v0,\n  \"selections\": v1,\n  \"fragment\": {\n    \"kind\": \"Fragment\",\n    \"name\": \"todoSubscription\",\n    \"type\": \"Subscription\",\n    \"metadata\": null,\n    \"argumentDefinitions\": v0,\n    \"selections\": v1\n  },\n  \"text\": \"subscription todoSubscription(\\n  $input: TodoSubScriptionInput!\\n) {\\n  todoSubScription(input: $input) {\\n    clientSubscriptionId\\n    arg\\n    todo {\\n      id\\n      text\\n      complete\\n    }\\n  }\\n}\\n\"\n};\n})();\n\nmodule.exports = batch;\n\n\n\n/** WEBPACK FOOTER **\n ** ./js/subscriptions/__generated__/todoSubscription.graphql.js\n **/","/**\n * @flow\n */\n\n/* eslint-disable */\n\n'use strict';\n\n/*::\nimport type { ConcreteFragment } from 'relay-runtime';\nimport type { FragmentReference } from 'relay-runtime';\ntype TodoWithDetails_todo = any;\ntype Todo_todo = any;\ntype Todo_viewer = any;\nexport type TodoList_viewer = {|\n  +todos: ?{|\n    +edges: ?$ReadOnlyArray<?{|\n      +node: ?{|\n        +id: string,\n        +complete: ?boolean,\n        +__fragments: (FragmentReference<TodoWithDetails_todo> & FragmentReference<Todo_todo>),\n      |},\n    |}>,\n  |},\n  +id: string,\n  +totalCount: ?number,\n  +completedCount: ?number,\n  +echo: ?number,\n  +__fragments: FragmentReference<Todo_viewer>,\n|};\n*/\n\n\nconst fragment /*: ConcreteFragment*/ = (function(){\nvar v0 = {\n  \"kind\": \"ScalarField\",\n  \"alias\": null,\n  \"name\": \"id\",\n  \"args\": null,\n  \"storageKey\": null\n};\nreturn {\n  \"kind\": \"Fragment\",\n  \"name\": \"TodoList_viewer\",\n  \"type\": \"User\",\n  \"metadata\": {\n    \"connection\": [\n      {\n        \"count\": null,\n        \"cursor\": null,\n        \"direction\": \"forward\",\n        \"path\": [\n          \"todos\"\n        ]\n      }\n    ]\n  },\n  \"argumentDefinitions\": [\n    {\n      \"kind\": \"LocalArgument\",\n      \"name\": \"showTodoWithDetails\",\n      \"type\": \"Boolean!\",\n      \"defaultValue\": false\n    },\n    {\n      \"kind\": \"LocalArgument\",\n      \"name\": \"_\",\n      \"type\": \"Int!\",\n      \"defaultValue\": 0\n    }\n  ],\n  \"selections\": [\n    {\n      \"kind\": \"LinkedField\",\n      \"alias\": \"todos\",\n      \"name\": \"__TodoList_todos_connection\",\n      \"storageKey\": null,\n      \"args\": null,\n      \"concreteType\": \"TodoConnection\",\n      \"plural\": false,\n      \"selections\": [\n        {\n          \"kind\": \"LinkedField\",\n          \"alias\": null,\n          \"name\": \"edges\",\n          \"storageKey\": null,\n          \"args\": null,\n          \"concreteType\": \"TodoEdge\",\n          \"plural\": true,\n          \"selections\": [\n            {\n              \"kind\": \"LinkedField\",\n              \"alias\": null,\n              \"name\": \"node\",\n              \"storageKey\": null,\n              \"args\": null,\n              \"concreteType\": \"Todo\",\n              \"plural\": false,\n              \"selections\": [\n                v0,\n                {\n                  \"kind\": \"ScalarField\",\n                  \"alias\": null,\n                  \"name\": \"complete\",\n                  \"args\": null,\n                  \"storageKey\": null\n                },\n                {\n                  \"kind\": \"ScalarField\",\n                  \"alias\": null,\n                  \"name\": \"__typename\",\n                  \"args\": null,\n                  \"storageKey\": null\n                },\n                {\n                  \"kind\": \"Condition\",\n                  \"passingValue\": false,\n                  \"condition\": \"showTodoWithDetails\",\n                  \"selections\": [\n                    {\n                      \"kind\": \"FragmentSpread\",\n                      \"name\": \"Todo_todo\",\n                      \"args\": null\n                    }\n                  ]\n                },\n                {\n                  \"kind\": \"Condition\",\n                  \"passingValue\": true,\n                  \"condition\": \"showTodoWithDetails\",\n                  \"selections\": [\n                    {\n                      \"kind\": \"FragmentSpread\",\n                      \"name\": \"TodoWithDetails_todo\",\n                      \"args\": null\n                    }\n                  ]\n                }\n              ]\n            },\n            {\n              \"kind\": \"ScalarField\",\n              \"alias\": null,\n              \"name\": \"cursor\",\n              \"args\": null,\n              \"storageKey\": null\n            }\n          ]\n        },\n        {\n          \"kind\": \"LinkedField\",\n          \"alias\": null,\n          \"name\": \"pageInfo\",\n          \"storageKey\": null,\n          \"args\": null,\n          \"concreteType\": \"PageInfo\",\n          \"plural\": false,\n          \"selections\": [\n            {\n              \"kind\": \"ScalarField\",\n              \"alias\": null,\n              \"name\": \"endCursor\",\n              \"args\": null,\n              \"storageKey\": null\n            },\n            {\n              \"kind\": \"ScalarField\",\n              \"alias\": null,\n              \"name\": \"hasNextPage\",\n              \"args\": null,\n              \"storageKey\": null\n            }\n          ]\n        }\n      ]\n    },\n    v0,\n    {\n      \"kind\": \"ScalarField\",\n      \"alias\": null,\n      \"name\": \"totalCount\",\n      \"args\": null,\n      \"storageKey\": null\n    },\n    {\n      \"kind\": \"ScalarField\",\n      \"alias\": null,\n      \"name\": \"completedCount\",\n      \"args\": null,\n      \"storageKey\": null\n    },\n    {\n      \"kind\": \"ScalarField\",\n      \"alias\": null,\n      \"name\": \"echo\",\n      \"args\": [\n        {\n          \"kind\": \"Variable\",\n          \"name\": \"_\",\n          \"variableName\": \"_\",\n          \"type\": \"Int\"\n        }\n      ],\n      \"storageKey\": null\n    },\n    {\n      \"kind\": \"FragmentSpread\",\n      \"name\": \"Todo_viewer\",\n      \"args\": null\n    }\n  ]\n};\n})();\n\nmodule.exports = fragment;\n\n\n\n/** WEBPACK FOOTER **\n ** ./js/components/__generated__/TodoList_viewer.graphql.js\n **/","/**\n * @flow\n * @relayHash 26846c3a4962a1ad6c921e21f5066182\n */\n\n/* eslint-disable */\n\n'use strict';\n\n/*::\nimport type { ConcreteOperation } from 'relay-runtime';\nimport type { FragmentReference } from 'relay-runtime';\ntype TodoList_viewer = any;\nexport type TodoListAnyNameRefetchQueryResponse = {|\n  +viewer: ?{|\n    +user: ?{|\n      +__fragments: FragmentReference<TodoList_viewer>,\n    |},\n  |},\n|};\n*/\n\n\n/*\nquery TodoListAnyNameRefetchQuery(\n  $showTodoWithDetails: Boolean!\n  $_: Int!\n) {\n  viewer {\n    user {\n      ...TodoList_viewer_3ZEZJ\n      id\n    }\n  }\n}\n\nfragment TodoList_viewer_3ZEZJ on User {\n  todos(first: 2147483647) {\n    edges {\n      node {\n        __typename\n        id\n        complete\n        ...TodoWithDetails_todo @include(if: $showTodoWithDetails)\n        ...Todo_todo @skip(if: $showTodoWithDetails)\n      }\n      cursor\n    }\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n  }\n  id\n  totalCount\n  completedCount\n  echo(_: $_)\n  ...Todo_viewer\n}\n\nfragment TodoWithDetails_todo on Todo {\n  id\n  text\n  status\n}\n\nfragment Todo_todo on Todo {\n  complete\n  id\n  text\n}\n\nfragment Todo_viewer on User {\n  id\n  totalCount\n  completedCount\n}\n*/\n\nconst batch /*: ConcreteOperation*/ = (function(){\nvar v0 = [\n  {\n    \"kind\": \"LocalArgument\",\n    \"name\": \"showTodoWithDetails\",\n    \"type\": \"Boolean!\",\n    \"defaultValue\": null\n  },\n  {\n    \"kind\": \"LocalArgument\",\n    \"name\": \"_\",\n    \"type\": \"Int!\",\n    \"defaultValue\": null\n  }\n],\nv1 = {\n  \"kind\": \"ScalarField\",\n  \"alias\": null,\n  \"name\": \"id\",\n  \"args\": null,\n  \"storageKey\": null\n},\nv2 = {\n  \"kind\": \"ScalarField\",\n  \"alias\": null,\n  \"name\": \"text\",\n  \"args\": null,\n  \"storageKey\": null\n};\nreturn {\n  \"kind\": \"Operation\",\n  \"operation\": \"query\",\n  \"name\": \"TodoListAnyNameRefetchQuery\",\n  \"id\": null,\n  \"metadata\": {},\n  \"argumentDefinitions\": v0,\n  \"selections\": [\n    {\n      \"kind\": \"LinkedField\",\n      \"alias\": null,\n      \"name\": \"viewer\",\n      \"storageKey\": null,\n      \"args\": null,\n      \"concreteType\": \"Viewer\",\n      \"plural\": false,\n      \"selections\": [\n        {\n          \"kind\": \"LinkedField\",\n          \"alias\": null,\n          \"name\": \"user\",\n          \"storageKey\": null,\n          \"args\": null,\n          \"concreteType\": \"User\",\n          \"plural\": false,\n          \"selections\": [\n            {\n              \"kind\": \"LinkedField\",\n              \"alias\": null,\n              \"name\": \"todos\",\n              \"storageKey\": \"todos{\\\"first\\\":2147483647}\",\n              \"args\": [\n                {\n                  \"kind\": \"Literal\",\n                  \"name\": \"first\",\n                  \"value\": 2147483647,\n                  \"type\": \"Int\"\n                }\n              ],\n              \"concreteType\": \"TodoConnection\",\n              \"plural\": false,\n              \"selections\": [\n                {\n                  \"kind\": \"LinkedField\",\n                  \"alias\": null,\n                  \"name\": \"edges\",\n                  \"storageKey\": null,\n                  \"args\": null,\n                  \"concreteType\": \"TodoEdge\",\n                  \"plural\": true,\n                  \"selections\": [\n                    {\n                      \"kind\": \"LinkedField\",\n                      \"alias\": null,\n                      \"name\": \"node\",\n                      \"storageKey\": null,\n                      \"args\": null,\n                      \"concreteType\": \"Todo\",\n                      \"plural\": false,\n                      \"selections\": [\n                        {\n                          \"kind\": \"ScalarField\",\n                          \"alias\": null,\n                          \"name\": \"__typename\",\n                          \"args\": null,\n                          \"storageKey\": null\n                        },\n                        v1,\n                        {\n                          \"kind\": \"ScalarField\",\n                          \"alias\": null,\n                          \"name\": \"complete\",\n                          \"args\": null,\n                          \"storageKey\": null\n                        },\n                        {\n                          \"kind\": \"Condition\",\n                          \"passingValue\": false,\n                          \"condition\": \"showTodoWithDetails\",\n                          \"selections\": [\n                            v2\n                          ]\n                        },\n                        {\n                          \"kind\": \"Condition\",\n                          \"passingValue\": true,\n                          \"condition\": \"showTodoWithDetails\",\n                          \"selections\": [\n                            v2,\n                            {\n                              \"kind\": \"ScalarField\",\n                              \"alias\": null,\n                              \"name\": \"status\",\n                              \"args\": null,\n                              \"storageKey\": null\n                            }\n                          ]\n                        }\n                      ]\n                    },\n                    {\n                      \"kind\": \"ScalarField\",\n                      \"alias\": null,\n                      \"name\": \"cursor\",\n                      \"args\": null,\n                      \"storageKey\": null\n                    }\n                  ]\n                },\n                {\n                  \"kind\": \"LinkedField\",\n                  \"alias\": null,\n                  \"name\": \"pageInfo\",\n                  \"storageKey\": null,\n                  \"args\": null,\n                  \"concreteType\": \"PageInfo\",\n                  \"plural\": false,\n                  \"selections\": [\n                    {\n                      \"kind\": \"ScalarField\",\n                      \"alias\": null,\n                      \"name\": \"endCursor\",\n                      \"args\": null,\n                      \"storageKey\": null\n                    },\n                    {\n                      \"kind\": \"ScalarField\",\n                      \"alias\": null,\n                      \"name\": \"hasNextPage\",\n                      \"args\": null,\n                      \"storageKey\": null\n                    }\n                  ]\n                }\n              ]\n            },\n            {\n              \"kind\": \"LinkedHandle\",\n              \"alias\": null,\n              \"name\": \"todos\",\n              \"args\": [\n                {\n                  \"kind\": \"Literal\",\n                  \"name\": \"first\",\n                  \"value\": 2147483647,\n                  \"type\": \"Int\"\n                }\n              ],\n              \"handle\": \"connection\",\n              \"key\": \"TodoList_todos\",\n              \"filters\": null\n            },\n            v1,\n            {\n              \"kind\": \"ScalarField\",\n              \"alias\": null,\n              \"name\": \"totalCount\",\n              \"args\": null,\n              \"storageKey\": null\n            },\n            {\n              \"kind\": \"ScalarField\",\n              \"alias\": null,\n              \"name\": \"completedCount\",\n              \"args\": null,\n              \"storageKey\": null\n            },\n            {\n              \"kind\": \"ScalarField\",\n              \"alias\": null,\n              \"name\": \"echo\",\n              \"args\": [\n                {\n                  \"kind\": \"Variable\",\n                  \"name\": \"_\",\n                  \"variableName\": \"_\",\n                  \"type\": \"Int\"\n                }\n              ],\n              \"storageKey\": null\n            }\n          ]\n        }\n      ]\n    },\n    {\n      \"kind\": \"LinkedHandle\",\n      \"alias\": null,\n      \"name\": \"viewer\",\n      \"args\": null,\n      \"handle\": \"viewer\",\n      \"key\": \"\",\n      \"filters\": null\n    }\n  ],\n  \"fragment\": {\n    \"kind\": \"Fragment\",\n    \"name\": \"TodoListAnyNameRefetchQuery\",\n    \"type\": \"Query\",\n    \"metadata\": null,\n    \"argumentDefinitions\": v0,\n    \"selections\": [\n      {\n        \"kind\": \"LinkedField\",\n        \"alias\": \"viewer\",\n        \"name\": \"__viewer_viewer\",\n        \"storageKey\": null,\n        \"args\": null,\n        \"concreteType\": \"Viewer\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"kind\": \"LinkedField\",\n            \"alias\": null,\n            \"name\": \"user\",\n            \"storageKey\": null,\n            \"args\": null,\n            \"concreteType\": \"User\",\n            \"plural\": false,\n            \"selections\": [\n              {\n                \"kind\": \"FragmentSpread\",\n                \"name\": \"TodoList_viewer\",\n                \"args\": [\n                  {\n                    \"kind\": \"Variable\",\n                    \"name\": \"_\",\n                    \"variableName\": \"_\",\n                    \"type\": null\n                  },\n                  {\n                    \"kind\": \"Variable\",\n                    \"name\": \"showTodoWithDetails\",\n                    \"variableName\": \"showTodoWithDetails\",\n                    \"type\": null\n                  }\n                ]\n              }\n            ]\n          }\n        ]\n      }\n    ]\n  },\n  \"text\": \"query TodoListAnyNameRefetchQuery(\\n  $showTodoWithDetails: Boolean!\\n  $_: Int!\\n) {\\n  viewer {\\n    user {\\n      ...TodoList_viewer_3ZEZJ\\n      id\\n    }\\n  }\\n}\\n\\nfragment TodoList_viewer_3ZEZJ on User {\\n  todos(first: 2147483647) {\\n    edges {\\n      node {\\n        __typename\\n        id\\n        complete\\n        ...TodoWithDetails_todo @include(if: $showTodoWithDetails)\\n        ...Todo_todo @skip(if: $showTodoWithDetails)\\n      }\\n      cursor\\n    }\\n    pageInfo {\\n      endCursor\\n      hasNextPage\\n    }\\n  }\\n  id\\n  totalCount\\n  completedCount\\n  echo(_: $_)\\n  ...Todo_viewer\\n}\\n\\nfragment TodoWithDetails_todo on Todo {\\n  id\\n  text\\n  status\\n}\\n\\nfragment Todo_todo on Todo {\\n  complete\\n  id\\n  text\\n}\\n\\nfragment Todo_viewer on User {\\n  id\\n  totalCount\\n  completedCount\\n}\\n\"\n};\n})();\n\nmodule.exports = batch;\n\n\n\n/** WEBPACK FOOTER **\n ** ./js/components/__generated__/TodoListAnyNameRefetchQuery.graphql.js\n **/","// @flow\nimport RemoveCompletedTodosMutation from '../mutations/RemoveCompletedTodosMutation';\n\nimport React from 'react';\nimport {\n  graphql,\n  createFragmentContainer,\n} from 'react-relay';\n\nclass TodoListFooter extends React.Component {\n  _handleRemoveCompletedTodosClick = () => {\n    RemoveCompletedTodosMutation.commit(\n      this.props.relay.environment,\n      this.props.viewer.completedTodos,\n      this.props.viewer,\n    );\n  };\n  render() {\n    const numCompletedTodos = this.props.viewer.completedCount;\n    const numRemainingTodos = this.props.viewer.totalCount - numCompletedTodos;\n    return (\n      <footer className=\"footer\">\n        <span className=\"todo-count\">\n          <strong>{numRemainingTodos}</strong> item{numRemainingTodos === 1 ? '' : 's'} left\n        </span>\n        {numCompletedTodos > 0 &&\n          <button\n            className=\"clear-completed\"\n            onClick={this._handleRemoveCompletedTodosClick}>\n            Clear completed\n          </button>\n        }\n      </footer>\n    );\n  }\n}\n\nexport default createFragmentContainer(\n  TodoListFooter,\n  graphql`\n    fragment TodoListFooter_viewer on User {\n      id,\n      completedCount,\n      completedTodos: todos(\n        status: \"completed\",\n        first: 2147483647  # max GraphQLInt\n      ) {\n        edges {\n          node {\n            id\n            complete\n          }\n        }\n      },\n      totalCount,\n    }\n  `\n);\n\n\n\n/** WEBPACK FOOTER **\n ** ./js/components/TodoListFooter.js\n **/","// @flow\n\nimport {\n  commitMutation,\n  graphql,\n} from 'react-relay';\nimport {ConnectionHandler} from 'relay-runtime';\n\nconst mutation = graphql`\n  mutation RemoveCompletedTodosMutation($input: RemoveCompletedTodosInput!) {\n    removeCompletedTodos(input: $input) {\n      deletedTodoIds,\n      viewer {\n        completedCount,\n        totalCount,\n      },\n    }\n  }\n`;\n\nfunction sharedUpdater(store, user, deletedIDs) {\n  const userProxy = store.get(user.id);\n  const conn = ConnectionHandler.getConnection(\n    userProxy,\n    'TodoList_todos',\n  );\n  deletedIDs.forEach((deletedID) =>\n    ConnectionHandler.deleteNode(conn, deletedID)\n  );\n}\n\nfunction commit(\n  environment,\n  todos,\n  user,\n) {\n  return commitMutation(\n    environment,\n    {\n      mutation,\n      variables: {\n        input: {},\n      },\n      updater: (store) => {\n        const payload = store.getRootField('removeCompletedTodos');\n        sharedUpdater(store, user, payload.getValue('deletedTodoIds'));\n      },\n      optimisticUpdater: (store) => {\n        if (todos && todos.edges) {\n          const deletedIDs = todos.edges\n            .filter(edge => edge.node.complete)\n            .map(edge => edge.node.id);\n          sharedUpdater(store, user, deletedIDs);\n        }\n      },\n    }\n  );\n}\n\nexport default {commit};\n\n\n\n/** WEBPACK FOOTER **\n ** ./js/mutations/RemoveCompletedTodosMutation.js\n **/","/**\n * @flow\n * @relayHash f4be02688b0d56db00c3557a7a4848f1\n */\n\n/* eslint-disable */\n\n'use strict';\n\n/*::\nimport type { ConcreteOperation } from 'relay-runtime';\nexport type RemoveCompletedTodosMutationVariables = {|\n  input: {\n    clientMutationId?: ?string,\n  },\n|};\nexport type RemoveCompletedTodosMutationResponse = {|\n  +removeCompletedTodos: ?{|\n    +deletedTodoIds: ?$ReadOnlyArray<?string>,\n    +viewer: ?{|\n      +completedCount: ?number,\n      +totalCount: ?number,\n    |},\n  |},\n|};\n*/\n\n\n/*\nmutation RemoveCompletedTodosMutation(\n  $input: RemoveCompletedTodosInput!\n) {\n  removeCompletedTodos(input: $input) {\n    deletedTodoIds\n    viewer {\n      completedCount\n      totalCount\n      id\n    }\n  }\n}\n*/\n\nconst batch /*: ConcreteOperation*/ = (function(){\nvar v0 = [\n  {\n    \"kind\": \"LocalArgument\",\n    \"name\": \"input\",\n    \"type\": \"RemoveCompletedTodosInput!\",\n    \"defaultValue\": null\n  }\n],\nv1 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"input\",\n    \"variableName\": \"input\",\n    \"type\": \"RemoveCompletedTodosInput!\"\n  }\n],\nv2 = {\n  \"kind\": \"ScalarField\",\n  \"alias\": null,\n  \"name\": \"deletedTodoIds\",\n  \"args\": null,\n  \"storageKey\": null\n},\nv3 = {\n  \"kind\": \"ScalarField\",\n  \"alias\": null,\n  \"name\": \"completedCount\",\n  \"args\": null,\n  \"storageKey\": null\n},\nv4 = {\n  \"kind\": \"ScalarField\",\n  \"alias\": null,\n  \"name\": \"totalCount\",\n  \"args\": null,\n  \"storageKey\": null\n};\nreturn {\n  \"kind\": \"Operation\",\n  \"operation\": \"mutation\",\n  \"name\": \"RemoveCompletedTodosMutation\",\n  \"id\": null,\n  \"metadata\": {},\n  \"argumentDefinitions\": v0,\n  \"selections\": [\n    {\n      \"kind\": \"LinkedField\",\n      \"alias\": null,\n      \"name\": \"removeCompletedTodos\",\n      \"storageKey\": null,\n      \"args\": v1,\n      \"concreteType\": \"RemoveCompletedTodosPayload\",\n      \"plural\": false,\n      \"selections\": [\n        v2,\n        {\n          \"kind\": \"LinkedField\",\n          \"alias\": null,\n          \"name\": \"viewer\",\n          \"storageKey\": null,\n          \"args\": null,\n          \"concreteType\": \"User\",\n          \"plural\": false,\n          \"selections\": [\n            v3,\n            v4,\n            {\n              \"kind\": \"ScalarField\",\n              \"alias\": null,\n              \"name\": \"id\",\n              \"args\": null,\n              \"storageKey\": null\n            }\n          ]\n        }\n      ]\n    }\n  ],\n  \"fragment\": {\n    \"kind\": \"Fragment\",\n    \"name\": \"RemoveCompletedTodosMutation\",\n    \"type\": \"Mutation\",\n    \"metadata\": null,\n    \"argumentDefinitions\": v0,\n    \"selections\": [\n      {\n        \"kind\": \"LinkedField\",\n        \"alias\": null,\n        \"name\": \"removeCompletedTodos\",\n        \"storageKey\": null,\n        \"args\": v1,\n        \"concreteType\": \"RemoveCompletedTodosPayload\",\n        \"plural\": false,\n        \"selections\": [\n          v2,\n          {\n            \"kind\": \"LinkedField\",\n            \"alias\": null,\n            \"name\": \"viewer\",\n            \"storageKey\": null,\n            \"args\": null,\n            \"concreteType\": \"User\",\n            \"plural\": false,\n            \"selections\": [\n              v3,\n              v4\n            ]\n          }\n        ]\n      }\n    ]\n  },\n  \"text\": \"mutation RemoveCompletedTodosMutation(\\n  $input: RemoveCompletedTodosInput!\\n) {\\n  removeCompletedTodos(input: $input) {\\n    deletedTodoIds\\n    viewer {\\n      completedCount\\n      totalCount\\n      id\\n    }\\n  }\\n}\\n\"\n};\n})();\n\nmodule.exports = batch;\n\n\n\n/** WEBPACK FOOTER **\n ** ./js/mutations/__generated__/RemoveCompletedTodosMutation.graphql.js\n **/","/**\n * @flow\n */\n\n/* eslint-disable */\n\n'use strict';\n\n/*::\nimport type { ConcreteFragment } from 'relay-runtime';\nexport type TodoListFooter_viewer = {|\n  +id: string,\n  +completedCount: ?number,\n  +completedTodos: ?{|\n    +edges: ?$ReadOnlyArray<?{|\n      +node: ?{|\n        +id: string,\n        +complete: ?boolean,\n      |},\n    |}>,\n  |},\n  +totalCount: ?number,\n|};\n*/\n\n\nconst fragment /*: ConcreteFragment*/ = (function(){\nvar v0 = {\n  \"kind\": \"ScalarField\",\n  \"alias\": null,\n  \"name\": \"id\",\n  \"args\": null,\n  \"storageKey\": null\n};\nreturn {\n  \"kind\": \"Fragment\",\n  \"name\": \"TodoListFooter_viewer\",\n  \"type\": \"User\",\n  \"metadata\": null,\n  \"argumentDefinitions\": [],\n  \"selections\": [\n    v0,\n    {\n      \"kind\": \"ScalarField\",\n      \"alias\": null,\n      \"name\": \"completedCount\",\n      \"args\": null,\n      \"storageKey\": null\n    },\n    {\n      \"kind\": \"LinkedField\",\n      \"alias\": \"completedTodos\",\n      \"name\": \"todos\",\n      \"storageKey\": \"todos{\\\"first\\\":2147483647,\\\"status\\\":\\\"completed\\\"}\",\n      \"args\": [\n        {\n          \"kind\": \"Literal\",\n          \"name\": \"first\",\n          \"value\": 2147483647,\n          \"type\": \"Int\"\n        },\n        {\n          \"kind\": \"Literal\",\n          \"name\": \"status\",\n          \"value\": \"completed\",\n          \"type\": \"String\"\n        }\n      ],\n      \"concreteType\": \"TodoConnection\",\n      \"plural\": false,\n      \"selections\": [\n        {\n          \"kind\": \"LinkedField\",\n          \"alias\": null,\n          \"name\": \"edges\",\n          \"storageKey\": null,\n          \"args\": null,\n          \"concreteType\": \"TodoEdge\",\n          \"plural\": true,\n          \"selections\": [\n            {\n              \"kind\": \"LinkedField\",\n              \"alias\": null,\n              \"name\": \"node\",\n              \"storageKey\": null,\n              \"args\": null,\n              \"concreteType\": \"Todo\",\n              \"plural\": false,\n              \"selections\": [\n                v0,\n                {\n                  \"kind\": \"ScalarField\",\n                  \"alias\": null,\n                  \"name\": \"complete\",\n                  \"args\": null,\n                  \"storageKey\": null\n                }\n              ]\n            }\n          ]\n        }\n      ]\n    },\n    {\n      \"kind\": \"ScalarField\",\n      \"alias\": null,\n      \"name\": \"totalCount\",\n      \"args\": null,\n      \"storageKey\": null\n    }\n  ]\n};\n})();\n\nmodule.exports = fragment;\n\n\n\n/** WEBPACK FOOTER **\n ** ./js/components/__generated__/TodoListFooter_viewer.graphql.js\n **/","/**\n * @flow\n */\n\n/* eslint-disable */\n\n'use strict';\n\n/*::\nimport type { ConcreteFragment } from 'relay-runtime';\nimport type { FragmentReference } from 'relay-runtime';\ntype TodoListFooter_viewer = any;\ntype TodoList_viewer = any;\nexport type TodoApp_viewer = {|\n  +id: string,\n  +totalCount: ?number,\n  +__fragments: (FragmentReference<TodoListFooter_viewer> & FragmentReference<TodoList_viewer>),\n|};\n*/\n\n\nconst fragment /*: ConcreteFragment*/ = {\n  \"kind\": \"Fragment\",\n  \"name\": \"TodoApp_viewer\",\n  \"type\": \"User\",\n  \"metadata\": null,\n  \"argumentDefinitions\": [],\n  \"selections\": [\n    {\n      \"kind\": \"ScalarField\",\n      \"alias\": null,\n      \"name\": \"id\",\n      \"args\": null,\n      \"storageKey\": null\n    },\n    {\n      \"kind\": \"ScalarField\",\n      \"alias\": null,\n      \"name\": \"totalCount\",\n      \"args\": null,\n      \"storageKey\": null\n    },\n    {\n      \"kind\": \"FragmentSpread\",\n      \"name\": \"TodoListFooter_viewer\",\n      \"args\": null\n    },\n    {\n      \"kind\": \"FragmentSpread\",\n      \"name\": \"TodoList_viewer\",\n      \"args\": null\n    }\n  ]\n};\n\nmodule.exports = fragment;\n\n\n\n/** WEBPACK FOOTER **\n ** ./js/components/__generated__/TodoApp_viewer.graphql.js\n **/","/**\n * @flow\n * @relayHash 120a29b36b9c4fee1001db504961035a\n */\n\n/* eslint-disable */\n\n'use strict';\n\n/*::\nimport type { ConcreteOperation } from 'relay-runtime';\nimport type { FragmentReference } from 'relay-runtime';\ntype TodoApp_viewer = any;\nexport type appQueryResponse = {|\n  +viewer: ?{|\n    +user: ?{|\n      +__fragments: FragmentReference<TodoApp_viewer>,\n    |},\n  |},\n|};\n*/\n\n\n/*\nquery appQuery {\n  viewer {\n    user {\n      ...TodoApp_viewer\n      id\n    }\n  }\n}\n\nfragment TodoApp_viewer on User {\n  id\n  totalCount\n  ...TodoListFooter_viewer\n  ...TodoList_viewer\n}\n\nfragment TodoListFooter_viewer on User {\n  id\n  completedCount\n  completedTodos: todos(status: \"completed\", first: 2147483647) {\n    edges {\n      node {\n        id\n        complete\n      }\n    }\n  }\n  totalCount\n}\n\nfragment TodoList_viewer on User {\n  todos(first: 2147483647) {\n    edges {\n      node {\n        __typename\n        id\n        complete\n        ...Todo_todo\n      }\n      cursor\n    }\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n  }\n  id\n  totalCount\n  completedCount\n  echo(_: 0)\n  ...Todo_viewer\n}\n\nfragment Todo_todo on Todo {\n  complete\n  id\n  text\n}\n\nfragment Todo_viewer on User {\n  id\n  totalCount\n  completedCount\n}\n*/\n\nconst batch /*: ConcreteOperation*/ = (function(){\nvar v0 = {\n  \"kind\": \"ScalarField\",\n  \"alias\": null,\n  \"name\": \"id\",\n  \"args\": null,\n  \"storageKey\": null\n},\nv1 = {\n  \"kind\": \"Literal\",\n  \"name\": \"first\",\n  \"value\": 2147483647,\n  \"type\": \"Int\"\n},\nv2 = {\n  \"kind\": \"ScalarField\",\n  \"alias\": null,\n  \"name\": \"complete\",\n  \"args\": null,\n  \"storageKey\": null\n};\nreturn {\n  \"kind\": \"Operation\",\n  \"operation\": \"query\",\n  \"name\": \"appQuery\",\n  \"id\": null,\n  \"metadata\": {},\n  \"argumentDefinitions\": [],\n  \"selections\": [\n    {\n      \"kind\": \"LinkedField\",\n      \"alias\": null,\n      \"name\": \"viewer\",\n      \"storageKey\": null,\n      \"args\": null,\n      \"concreteType\": \"Viewer\",\n      \"plural\": false,\n      \"selections\": [\n        {\n          \"kind\": \"LinkedField\",\n          \"alias\": null,\n          \"name\": \"user\",\n          \"storageKey\": null,\n          \"args\": null,\n          \"concreteType\": \"User\",\n          \"plural\": false,\n          \"selections\": [\n            v0,\n            {\n              \"kind\": \"ScalarField\",\n              \"alias\": null,\n              \"name\": \"totalCount\",\n              \"args\": null,\n              \"storageKey\": null\n            },\n            {\n              \"kind\": \"ScalarField\",\n              \"alias\": null,\n              \"name\": \"completedCount\",\n              \"args\": null,\n              \"storageKey\": null\n            },\n            {\n              \"kind\": \"LinkedField\",\n              \"alias\": \"completedTodos\",\n              \"name\": \"todos\",\n              \"storageKey\": \"todos{\\\"first\\\":2147483647,\\\"status\\\":\\\"completed\\\"}\",\n              \"args\": [\n                v1,\n                {\n                  \"kind\": \"Literal\",\n                  \"name\": \"status\",\n                  \"value\": \"completed\",\n                  \"type\": \"String\"\n                }\n              ],\n              \"concreteType\": \"TodoConnection\",\n              \"plural\": false,\n              \"selections\": [\n                {\n                  \"kind\": \"LinkedField\",\n                  \"alias\": null,\n                  \"name\": \"edges\",\n                  \"storageKey\": null,\n                  \"args\": null,\n                  \"concreteType\": \"TodoEdge\",\n                  \"plural\": true,\n                  \"selections\": [\n                    {\n                      \"kind\": \"LinkedField\",\n                      \"alias\": null,\n                      \"name\": \"node\",\n                      \"storageKey\": null,\n                      \"args\": null,\n                      \"concreteType\": \"Todo\",\n                      \"plural\": false,\n                      \"selections\": [\n                        v0,\n                        v2\n                      ]\n                    }\n                  ]\n                }\n              ]\n            },\n            {\n              \"kind\": \"LinkedField\",\n              \"alias\": null,\n              \"name\": \"todos\",\n              \"storageKey\": \"todos{\\\"first\\\":2147483647}\",\n              \"args\": [\n                v1\n              ],\n              \"concreteType\": \"TodoConnection\",\n              \"plural\": false,\n              \"selections\": [\n                {\n                  \"kind\": \"LinkedField\",\n                  \"alias\": null,\n                  \"name\": \"edges\",\n                  \"storageKey\": null,\n                  \"args\": null,\n                  \"concreteType\": \"TodoEdge\",\n                  \"plural\": true,\n                  \"selections\": [\n                    {\n                      \"kind\": \"LinkedField\",\n                      \"alias\": null,\n                      \"name\": \"node\",\n                      \"storageKey\": null,\n                      \"args\": null,\n                      \"concreteType\": \"Todo\",\n                      \"plural\": false,\n                      \"selections\": [\n                        {\n                          \"kind\": \"ScalarField\",\n                          \"alias\": null,\n                          \"name\": \"__typename\",\n                          \"args\": null,\n                          \"storageKey\": null\n                        },\n                        v0,\n                        v2,\n                        {\n                          \"kind\": \"ScalarField\",\n                          \"alias\": null,\n                          \"name\": \"text\",\n                          \"args\": null,\n                          \"storageKey\": null\n                        }\n                      ]\n                    },\n                    {\n                      \"kind\": \"ScalarField\",\n                      \"alias\": null,\n                      \"name\": \"cursor\",\n                      \"args\": null,\n                      \"storageKey\": null\n                    }\n                  ]\n                },\n                {\n                  \"kind\": \"LinkedField\",\n                  \"alias\": null,\n                  \"name\": \"pageInfo\",\n                  \"storageKey\": null,\n                  \"args\": null,\n                  \"concreteType\": \"PageInfo\",\n                  \"plural\": false,\n                  \"selections\": [\n                    {\n                      \"kind\": \"ScalarField\",\n                      \"alias\": null,\n                      \"name\": \"endCursor\",\n                      \"args\": null,\n                      \"storageKey\": null\n                    },\n                    {\n                      \"kind\": \"ScalarField\",\n                      \"alias\": null,\n                      \"name\": \"hasNextPage\",\n                      \"args\": null,\n                      \"storageKey\": null\n                    }\n                  ]\n                }\n              ]\n            },\n            {\n              \"kind\": \"LinkedHandle\",\n              \"alias\": null,\n              \"name\": \"todos\",\n              \"args\": [\n                v1\n              ],\n              \"handle\": \"connection\",\n              \"key\": \"TodoList_todos\",\n              \"filters\": null\n            },\n            {\n              \"kind\": \"ScalarField\",\n              \"alias\": null,\n              \"name\": \"echo\",\n              \"args\": [\n                {\n                  \"kind\": \"Literal\",\n                  \"name\": \"_\",\n                  \"value\": 0,\n                  \"type\": \"Int\"\n                }\n              ],\n              \"storageKey\": \"echo{\\\"_\\\":0}\"\n            }\n          ]\n        }\n      ]\n    },\n    {\n      \"kind\": \"LinkedHandle\",\n      \"alias\": null,\n      \"name\": \"viewer\",\n      \"args\": null,\n      \"handle\": \"viewer\",\n      \"key\": \"\",\n      \"filters\": null\n    }\n  ],\n  \"fragment\": {\n    \"kind\": \"Fragment\",\n    \"name\": \"appQuery\",\n    \"type\": \"Query\",\n    \"metadata\": null,\n    \"argumentDefinitions\": [],\n    \"selections\": [\n      {\n        \"kind\": \"LinkedField\",\n        \"alias\": \"viewer\",\n        \"name\": \"__viewer_viewer\",\n        \"storageKey\": null,\n        \"args\": null,\n        \"concreteType\": \"Viewer\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"kind\": \"LinkedField\",\n            \"alias\": null,\n            \"name\": \"user\",\n            \"storageKey\": null,\n            \"args\": null,\n            \"concreteType\": \"User\",\n            \"plural\": false,\n            \"selections\": [\n              {\n                \"kind\": \"FragmentSpread\",\n                \"name\": \"TodoApp_viewer\",\n                \"args\": null\n              }\n            ]\n          }\n        ]\n      }\n    ]\n  },\n  \"text\": \"query appQuery {\\n  viewer {\\n    user {\\n      ...TodoApp_viewer\\n      id\\n    }\\n  }\\n}\\n\\nfragment TodoApp_viewer on User {\\n  id\\n  totalCount\\n  ...TodoListFooter_viewer\\n  ...TodoList_viewer\\n}\\n\\nfragment TodoListFooter_viewer on User {\\n  id\\n  completedCount\\n  completedTodos: todos(status: \\\"completed\\\", first: 2147483647) {\\n    edges {\\n      node {\\n        id\\n        complete\\n      }\\n    }\\n  }\\n  totalCount\\n}\\n\\nfragment TodoList_viewer on User {\\n  todos(first: 2147483647) {\\n    edges {\\n      node {\\n        __typename\\n        id\\n        complete\\n        ...Todo_todo\\n      }\\n      cursor\\n    }\\n    pageInfo {\\n      endCursor\\n      hasNextPage\\n    }\\n  }\\n  id\\n  totalCount\\n  completedCount\\n  echo(_: 0)\\n  ...Todo_viewer\\n}\\n\\nfragment Todo_todo on Todo {\\n  complete\\n  id\\n  text\\n}\\n\\nfragment Todo_viewer on User {\\n  id\\n  totalCount\\n  completedCount\\n}\\n\"\n};\n})();\n\nmodule.exports = batch;\n\n\n\n/** WEBPACK FOOTER **\n ** ./js/__generated__/appQuery.graphql.js\n **/"],"sourceRoot":""}