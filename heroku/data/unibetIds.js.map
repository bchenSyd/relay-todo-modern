{"version":3,"sources":["../../server/data/unibetIds.js"],"names":["fromGlobalId_unibet","tmp","globalId","split","id","type","globalIdField_unibet","typeName","idFetcher","name","description","resolve","obj","args","context","info"],"mappings":";;;;;;;AAAA;;AAEA,IAAMA,sBAAsB,SAAtBA,mBAAsB,WAAY;AACpC,QAAMC,MAAMC,SAASC,KAAT,CAAe,GAAf,CAAZ;AACA,WAAO;AACHC,YAAIH,IAAI,CAAJ,CADD;AAEHI,cAAMJ,IAAI,CAAJ;AAFH,KAAP;AAIH,CAND;AAOA,IAAMK,uBAAuB,SAAvBA,oBAAuB,CAACC,QAAD,CAAU,uBAAV,EAAmCC,SAAnC;AAAA,WAAkD;AAC3EC,cAAM,IADqE;AAE3EC,qBAAa,qBAF8D;AAG3EL,cAAM,+CAHqE;AAI3EM,iBAAS,SAASA,OAAT,CAAiBC,GAAjB,EAAsBC,IAAtB,EAA4BC,OAA5B,EAAqCC,IAArC,EAA2C;AAChD,mBAAUR,QAAV,SAAsBK,IAAIR,EAA1B;AACH;AAN0E,KAAlD;AAAA,CAA7B;;QAUIJ,mB,GAAAA,mB;QACAM,oB,GAAAA,oB","file":"unibetIds.js","sourcesContent":["import { GraphQLNonNull ,GraphQLID} from 'graphql';\n\nconst fromGlobalId_unibet = globalId => {\n    const tmp = globalId.split(':');\n    return {\n        id: tmp[1],\n        type: tmp[0]\n    }\n}\nconst globalIdField_unibet = (typeName /*'User', 'Todo'..etc*/, idFetcher) => ({\n    name: 'id',\n    description: 'The ID of an object',\n    type: new GraphQLNonNull(GraphQLID),\n    resolve: function resolve(obj, args, context, info) {\n        return `${typeName}:${obj.id}`\n    }\n});\n\nexport {\n    fromGlobalId_unibet,\n    globalIdField_unibet\n}\n\n"]}